/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
https://github.com/joethei/obsidian-tagcloud
*/

var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// node_modules/wordcloud/src/wordcloud2.js
var require_wordcloud2 = __commonJS({
  "node_modules/wordcloud/src/wordcloud2.js"(exports, module2) {
    "use strict";
    if (!window.setImmediate) {
      window.setImmediate = function setupSetImmediate() {
        return window.msSetImmediate || window.webkitSetImmediate || window.mozSetImmediate || window.oSetImmediate || function setupSetZeroTimeout() {
          if (!window.postMessage || !window.addEventListener) {
            return null;
          }
          var callbacks = [void 0];
          var message = "zero-timeout-message";
          var setZeroTimeout = function setZeroTimeout2(callback) {
            var id = callbacks.length;
            callbacks.push(callback);
            window.postMessage(message + id.toString(36), "*");
            return id;
          };
          window.addEventListener("message", function setZeroTimeoutMessage(evt) {
            if (typeof evt.data !== "string" || evt.data.substr(0, message.length) !== message) {
              return;
            }
            evt.stopImmediatePropagation();
            var id = parseInt(evt.data.substr(message.length), 36);
            if (!callbacks[id]) {
              return;
            }
            callbacks[id]();
            callbacks[id] = void 0;
          }, true);
          window.clearImmediate = function clearZeroTimeout(id) {
            if (!callbacks[id]) {
              return;
            }
            callbacks[id] = void 0;
          };
          return setZeroTimeout;
        }() || function setImmediateFallback(fn) {
          window.setTimeout(fn, 0);
        };
      }();
    }
    if (!window.clearImmediate) {
      window.clearImmediate = function setupClearImmediate() {
        return window.msClearImmediate || window.webkitClearImmediate || window.mozClearImmediate || window.oClearImmediate || function clearImmediateFallback(timer) {
          window.clearTimeout(timer);
        };
      }();
    }
    (function(global) {
      var isSupported = function isSupported2() {
        var canvas = document.createElement("canvas");
        if (!canvas || !canvas.getContext) {
          return false;
        }
        var ctx = canvas.getContext("2d");
        if (!ctx) {
          return false;
        }
        if (!ctx.getImageData) {
          return false;
        }
        if (!ctx.fillText) {
          return false;
        }
        if (!Array.prototype.some) {
          return false;
        }
        if (!Array.prototype.push) {
          return false;
        }
        return true;
      }();
      var minFontSize = function getMinFontSize() {
        if (!isSupported) {
          return;
        }
        var ctx = document.createElement("canvas").getContext("2d");
        var size = 20;
        var hanWidth, mWidth;
        while (size) {
          ctx.font = size.toString(10) + "px sans-serif";
          if (ctx.measureText("\uFF37").width === hanWidth && ctx.measureText("m").width === mWidth) {
            return size + 1;
          }
          hanWidth = ctx.measureText("\uFF37").width;
          mWidth = ctx.measureText("m").width;
          size--;
        }
        return 0;
      }();
      var getItemExtraData = function(item) {
        if (Array.isArray(item)) {
          var itemCopy = item.slice();
          itemCopy.splice(0, 2);
          return itemCopy;
        } else {
          return [];
        }
      };
      var shuffleArray = function shuffleArray2(arr) {
        for (var j, x, i = arr.length; i; ) {
          j = Math.floor(Math.random() * i);
          x = arr[--i];
          arr[i] = arr[j];
          arr[j] = x;
        }
        return arr;
      };
      var timer = {};
      var WordCloud6 = function WordCloud7(elements, options) {
        if (!isSupported) {
          return;
        }
        var timerId = Math.floor(Math.random() * Date.now());
        if (!Array.isArray(elements)) {
          elements = [elements];
        }
        elements.forEach(function(el, i) {
          if (typeof el === "string") {
            elements[i] = document.getElementById(el);
            if (!elements[i]) {
              throw new Error("The element id specified is not found.");
            }
          } else if (!el.tagName && !el.appendChild) {
            throw new Error("You must pass valid HTML elements, or ID of the element.");
          }
        });
        var settings = {
          list: [],
          fontFamily: '"Trebuchet MS", "Heiti TC", "\u5FAE\u8EDF\u6B63\u9ED1\u9AD4", "Arial Unicode MS", "Droid Fallback Sans", sans-serif',
          fontWeight: "normal",
          color: "random-dark",
          minSize: 0,
          weightFactor: 1,
          clearCanvas: true,
          backgroundColor: "#fff",
          gridSize: 8,
          drawOutOfBound: false,
          shrinkToFit: false,
          origin: null,
          drawMask: false,
          maskColor: "rgba(255,0,0,0.3)",
          maskGapWidth: 0.3,
          wait: 0,
          abortThreshold: 0,
          abort: function noop() {
          },
          minRotation: -Math.PI / 2,
          maxRotation: Math.PI / 2,
          rotationSteps: 0,
          shuffle: true,
          rotateRatio: 0.1,
          shape: "circle",
          ellipticity: 0.65,
          classes: null,
          hover: null,
          click: null
        };
        if (options) {
          for (var key in options) {
            if (key in settings) {
              settings[key] = options[key];
            }
          }
        }
        if (typeof settings.weightFactor !== "function") {
          var factor = settings.weightFactor;
          settings.weightFactor = function weightFactor(pt) {
            return pt * factor;
          };
        }
        if (typeof settings.shape !== "function") {
          switch (settings.shape) {
            case "circle":
            default:
              settings.shape = "circle";
              break;
            case "cardioid":
              settings.shape = function shapeCardioid(theta) {
                return 1 - Math.sin(theta);
              };
              break;
            case "diamond":
              settings.shape = function shapeSquare(theta) {
                var thetaPrime = theta % (2 * Math.PI / 4);
                return 1 / (Math.cos(thetaPrime) + Math.sin(thetaPrime));
              };
              break;
            case "square":
              settings.shape = function shapeSquare(theta) {
                return Math.min(1 / Math.abs(Math.cos(theta)), 1 / Math.abs(Math.sin(theta)));
              };
              break;
            case "triangle-forward":
              settings.shape = function shapeTriangle(theta) {
                var thetaPrime = theta % (2 * Math.PI / 3);
                return 1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime));
              };
              break;
            case "triangle":
            case "triangle-upright":
              settings.shape = function shapeTriangle(theta) {
                var thetaPrime = (theta + Math.PI * 3 / 2) % (2 * Math.PI / 3);
                return 1 / (Math.cos(thetaPrime) + Math.sqrt(3) * Math.sin(thetaPrime));
              };
              break;
            case "pentagon":
              settings.shape = function shapePentagon(theta) {
                var thetaPrime = (theta + 0.955) % (2 * Math.PI / 5);
                return 1 / (Math.cos(thetaPrime) + 0.726543 * Math.sin(thetaPrime));
              };
              break;
            case "star":
              settings.shape = function shapeStar(theta) {
                var thetaPrime = (theta + 0.955) % (2 * Math.PI / 10);
                if ((theta + 0.955) % (2 * Math.PI / 5) - 2 * Math.PI / 10 >= 0) {
                  return 1 / (Math.cos(2 * Math.PI / 10 - thetaPrime) + 3.07768 * Math.sin(2 * Math.PI / 10 - thetaPrime));
                } else {
                  return 1 / (Math.cos(thetaPrime) + 3.07768 * Math.sin(thetaPrime));
                }
              };
              break;
          }
        }
        settings.gridSize = Math.max(Math.floor(settings.gridSize), 4);
        var g = settings.gridSize;
        var maskRectWidth = g - settings.maskGapWidth;
        var rotationRange = Math.abs(settings.maxRotation - settings.minRotation);
        var rotationSteps = Math.abs(Math.floor(settings.rotationSteps));
        var minRotation = Math.min(settings.maxRotation, settings.minRotation);
        var grid, ngx, ngy, center, maxRadius;
        var escapeTime;
        var getTextColor;
        function randomHslColor(min, max) {
          return "hsl(" + (Math.random() * 360).toFixed() + "," + (Math.random() * 30 + 70).toFixed() + "%," + (Math.random() * (max - min) + min).toFixed() + "%)";
        }
        switch (settings.color) {
          case "random-dark":
            getTextColor = function getRandomDarkColor() {
              return randomHslColor(10, 50);
            };
            break;
          case "random-light":
            getTextColor = function getRandomLightColor() {
              return randomHslColor(50, 90);
            };
            break;
          default:
            if (typeof settings.color === "function") {
              getTextColor = settings.color;
            }
            break;
        }
        var getTextFontWeight;
        if (typeof settings.fontWeight === "function") {
          getTextFontWeight = settings.fontWeight;
        }
        var getTextClasses = null;
        if (typeof settings.classes === "function") {
          getTextClasses = settings.classes;
        }
        var interactive = false;
        var infoGrid = [];
        var hovered;
        var getInfoGridFromMouseTouchEvent = function getInfoGridFromMouseTouchEvent2(evt) {
          var canvas = evt.currentTarget;
          var rect = canvas.getBoundingClientRect();
          var clientX;
          var clientY;
          if (evt.touches) {
            clientX = evt.touches[0].clientX;
            clientY = evt.touches[0].clientY;
          } else {
            clientX = evt.clientX;
            clientY = evt.clientY;
          }
          var eventX = clientX - rect.left;
          var eventY = clientY - rect.top;
          var x = Math.floor(eventX * (canvas.width / rect.width || 1) / g);
          var y = Math.floor(eventY * (canvas.height / rect.height || 1) / g);
          return infoGrid[x][y];
        };
        var wordcloudhover = function wordcloudhover2(evt) {
          var info = getInfoGridFromMouseTouchEvent(evt);
          if (hovered === info) {
            return;
          }
          hovered = info;
          if (!info) {
            settings.hover(void 0, void 0, evt);
            return;
          }
          settings.hover(info.item, info.dimension, evt);
        };
        var wordcloudclick = function wordcloudclick2(evt) {
          var info = getInfoGridFromMouseTouchEvent(evt);
          if (!info) {
            return;
          }
          settings.click(info.item, info.dimension, evt);
          evt.preventDefault();
        };
        var pointsAtRadius = [];
        var getPointsAtRadius = function getPointsAtRadius2(radius) {
          if (pointsAtRadius[radius]) {
            return pointsAtRadius[radius];
          }
          var T = radius * 8;
          var t = T;
          var points = [];
          if (radius === 0) {
            points.push([center[0], center[1], 0]);
          }
          while (t--) {
            var rx = 1;
            if (settings.shape !== "circle") {
              rx = settings.shape(t / T * 2 * Math.PI);
            }
            points.push([
              center[0] + radius * rx * Math.cos(-t / T * 2 * Math.PI),
              center[1] + radius * rx * Math.sin(-t / T * 2 * Math.PI) * settings.ellipticity,
              t / T * 2 * Math.PI
            ]);
          }
          pointsAtRadius[radius] = points;
          return points;
        };
        var exceedTime = function exceedTime2() {
          return settings.abortThreshold > 0 && new Date().getTime() - escapeTime > settings.abortThreshold;
        };
        var getRotateDeg = function getRotateDeg2() {
          if (settings.rotateRatio === 0) {
            return 0;
          }
          if (Math.random() > settings.rotateRatio) {
            return 0;
          }
          if (rotationRange === 0) {
            return minRotation;
          }
          if (rotationSteps > 0) {
            return minRotation + Math.floor(Math.random() * rotationSteps) * rotationRange / (rotationSteps - 1);
          } else {
            return minRotation + Math.random() * rotationRange;
          }
        };
        var getTextInfo = function getTextInfo2(word, weight, rotateDeg, extraDataArray) {
          var debug = false;
          var fontSize = settings.weightFactor(weight);
          if (fontSize <= settings.minSize) {
            return false;
          }
          var mu = 1;
          if (fontSize < minFontSize) {
            mu = function calculateScaleFactor() {
              var mu2 = 2;
              while (mu2 * fontSize < minFontSize) {
                mu2 += 2;
              }
              return mu2;
            }();
          }
          var fontWeight;
          if (getTextFontWeight) {
            fontWeight = getTextFontWeight(word, weight, fontSize, extraDataArray);
          } else {
            fontWeight = settings.fontWeight;
          }
          var fcanvas = document.createElement("canvas");
          var fctx = fcanvas.getContext("2d", { willReadFrequently: true });
          fctx.font = fontWeight + " " + (fontSize * mu).toString(10) + "px " + settings.fontFamily;
          var fw = fctx.measureText(word).width / mu;
          var fh = Math.max(fontSize * mu, fctx.measureText("m").width, fctx.measureText("\uFF37").width) / mu;
          var boxWidth = fw + fh * 2;
          var boxHeight = fh * 3;
          var fgw = Math.ceil(boxWidth / g);
          var fgh = Math.ceil(boxHeight / g);
          boxWidth = fgw * g;
          boxHeight = fgh * g;
          var fillTextOffsetX = -fw / 2;
          var fillTextOffsetY = -fh * 0.4;
          var cgh = Math.ceil((boxWidth * Math.abs(Math.sin(rotateDeg)) + boxHeight * Math.abs(Math.cos(rotateDeg))) / g);
          var cgw = Math.ceil((boxWidth * Math.abs(Math.cos(rotateDeg)) + boxHeight * Math.abs(Math.sin(rotateDeg))) / g);
          var width = cgw * g;
          var height = cgh * g;
          fcanvas.setAttribute("width", width);
          fcanvas.setAttribute("height", height);
          if (debug) {
            document.body.appendChild(fcanvas);
            fctx.save();
          }
          fctx.scale(1 / mu, 1 / mu);
          fctx.translate(width * mu / 2, height * mu / 2);
          fctx.rotate(-rotateDeg);
          fctx.font = fontWeight + " " + (fontSize * mu).toString(10) + "px " + settings.fontFamily;
          fctx.fillStyle = "#000";
          fctx.textBaseline = "middle";
          fctx.fillText(word, fillTextOffsetX * mu, (fillTextOffsetY + fontSize * 0.5) * mu);
          var imageData = fctx.getImageData(0, 0, width, height).data;
          if (exceedTime()) {
            return false;
          }
          if (debug) {
            fctx.strokeRect(fillTextOffsetX * mu, fillTextOffsetY, fw * mu, fh * mu);
            fctx.restore();
          }
          var occupied = [];
          var gx = cgw;
          var gy, x, y;
          var bounds = [cgh / 2, cgw / 2, cgh / 2, cgw / 2];
          while (gx--) {
            gy = cgh;
            while (gy--) {
              y = g;
              singleGridLoop:
                while (y--) {
                  x = g;
                  while (x--) {
                    if (imageData[((gy * g + y) * width + (gx * g + x)) * 4 + 3]) {
                      occupied.push([gx, gy]);
                      if (gx < bounds[3]) {
                        bounds[3] = gx;
                      }
                      if (gx > bounds[1]) {
                        bounds[1] = gx;
                      }
                      if (gy < bounds[0]) {
                        bounds[0] = gy;
                      }
                      if (gy > bounds[2]) {
                        bounds[2] = gy;
                      }
                      if (debug) {
                        fctx.fillStyle = "rgba(255, 0, 0, 0.5)";
                        fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);
                      }
                      break singleGridLoop;
                    }
                  }
                }
              if (debug) {
                fctx.fillStyle = "rgba(0, 0, 255, 0.5)";
                fctx.fillRect(gx * g, gy * g, g - 0.5, g - 0.5);
              }
            }
          }
          if (debug) {
            fctx.fillStyle = "rgba(0, 255, 0, 0.5)";
            fctx.fillRect(bounds[3] * g, bounds[0] * g, (bounds[1] - bounds[3] + 1) * g, (bounds[2] - bounds[0] + 1) * g);
          }
          return {
            mu,
            occupied,
            bounds,
            gw: cgw,
            gh: cgh,
            fillTextOffsetX,
            fillTextOffsetY,
            fillTextWidth: fw,
            fillTextHeight: fh,
            fontSize
          };
        };
        var canFitText = function canFitText2(gx, gy, gw, gh, occupied) {
          var i = occupied.length;
          while (i--) {
            var px = gx + occupied[i][0];
            var py = gy + occupied[i][1];
            if (px >= ngx || py >= ngy || px < 0 || py < 0) {
              if (!settings.drawOutOfBound) {
                return false;
              }
              continue;
            }
            if (!grid[px][py]) {
              return false;
            }
          }
          return true;
        };
        var drawText = function drawText2(gx, gy, info, word, weight, distance, theta, rotateDeg, attributes, extraDataArray) {
          var fontSize = info.fontSize;
          var color;
          if (getTextColor) {
            color = getTextColor(word, weight, fontSize, distance, theta, extraDataArray);
          } else {
            color = settings.color;
          }
          var fontWeight;
          if (getTextFontWeight) {
            fontWeight = getTextFontWeight(word, weight, fontSize, extraDataArray);
          } else {
            fontWeight = settings.fontWeight;
          }
          var classes;
          if (getTextClasses) {
            classes = getTextClasses(word, weight, fontSize, extraDataArray);
          } else {
            classes = settings.classes;
          }
          elements.forEach(function(el) {
            if (el.getContext) {
              var ctx = el.getContext("2d");
              var mu = info.mu;
              ctx.save();
              ctx.scale(1 / mu, 1 / mu);
              ctx.font = fontWeight + " " + (fontSize * mu).toString(10) + "px " + settings.fontFamily;
              ctx.fillStyle = color;
              ctx.translate((gx + info.gw / 2) * g * mu, (gy + info.gh / 2) * g * mu);
              if (rotateDeg !== 0) {
                ctx.rotate(-rotateDeg);
              }
              ctx.textBaseline = "middle";
              ctx.fillText(word, info.fillTextOffsetX * mu, (info.fillTextOffsetY + fontSize * 0.5) * mu);
              ctx.restore();
            } else {
              var span = document.createElement("span");
              var transformRule = "";
              transformRule = "rotate(" + -rotateDeg / Math.PI * 180 + "deg) ";
              if (info.mu !== 1) {
                transformRule += "translateX(-" + info.fillTextWidth / 4 + "px) scale(" + 1 / info.mu + ")";
              }
              var styleRules = {
                position: "absolute",
                display: "block",
                font: fontWeight + " " + fontSize * info.mu + "px " + settings.fontFamily,
                left: (gx + info.gw / 2) * g + info.fillTextOffsetX + "px",
                top: (gy + info.gh / 2) * g + info.fillTextOffsetY + "px",
                width: info.fillTextWidth + "px",
                height: info.fillTextHeight + "px",
                lineHeight: fontSize + "px",
                whiteSpace: "nowrap",
                transform: transformRule,
                webkitTransform: transformRule,
                msTransform: transformRule,
                transformOrigin: "50% 40%",
                webkitTransformOrigin: "50% 40%",
                msTransformOrigin: "50% 40%"
              };
              if (color) {
                styleRules.color = color;
              }
              span.textContent = word;
              for (var cssProp in styleRules) {
                span.style[cssProp] = styleRules[cssProp];
              }
              if (attributes) {
                for (var attribute in attributes) {
                  span.setAttribute(attribute, attributes[attribute]);
                }
              }
              if (classes) {
                span.className += classes;
              }
              el.appendChild(span);
            }
          });
        };
        var fillGridAt = function fillGridAt2(x, y, drawMask, dimension, item) {
          if (x >= ngx || y >= ngy || x < 0 || y < 0) {
            return;
          }
          grid[x][y] = false;
          if (drawMask) {
            var ctx = elements[0].getContext("2d");
            ctx.fillRect(x * g, y * g, maskRectWidth, maskRectWidth);
          }
          if (interactive) {
            infoGrid[x][y] = { item, dimension };
          }
        };
        var updateGrid = function updateGrid2(gx, gy, gw, gh, info, item) {
          var occupied = info.occupied;
          var drawMask = settings.drawMask;
          var ctx;
          if (drawMask) {
            ctx = elements[0].getContext("2d");
            ctx.save();
            ctx.fillStyle = settings.maskColor;
          }
          var dimension;
          if (interactive) {
            var bounds = info.bounds;
            dimension = {
              x: (gx + bounds[3]) * g,
              y: (gy + bounds[0]) * g,
              w: (bounds[1] - bounds[3] + 1) * g,
              h: (bounds[2] - bounds[0] + 1) * g
            };
          }
          var i = occupied.length;
          while (i--) {
            var px = gx + occupied[i][0];
            var py = gy + occupied[i][1];
            if (px >= ngx || py >= ngy || px < 0 || py < 0) {
              continue;
            }
            fillGridAt(px, py, drawMask, dimension, item);
          }
          if (drawMask) {
            ctx.restore();
          }
        };
        var putWord = function putWord2(item) {
          var word, weight, attributes;
          if (Array.isArray(item)) {
            word = item[0];
            weight = item[1];
          } else {
            word = item.word;
            weight = item.weight;
            attributes = item.attributes;
          }
          var rotateDeg = getRotateDeg();
          var extraDataArray = getItemExtraData(item);
          var info = getTextInfo(word, weight, rotateDeg, extraDataArray);
          if (!info) {
            return false;
          }
          if (exceedTime()) {
            return false;
          }
          if (!settings.drawOutOfBound && !settings.shrinkToFit) {
            var bounds = info.bounds;
            if (bounds[1] - bounds[3] + 1 > ngx || bounds[2] - bounds[0] + 1 > ngy) {
              return false;
            }
          }
          var r = maxRadius + 1;
          var tryToPutWordAtPoint = function(gxy) {
            var gx = Math.floor(gxy[0] - info.gw / 2);
            var gy = Math.floor(gxy[1] - info.gh / 2);
            var gw = info.gw;
            var gh = info.gh;
            if (!canFitText(gx, gy, gw, gh, info.occupied)) {
              return false;
            }
            drawText(gx, gy, info, word, weight, maxRadius - r, gxy[2], rotateDeg, attributes, extraDataArray);
            updateGrid(gx, gy, gw, gh, info, item);
            return true;
          };
          while (r--) {
            var points = getPointsAtRadius(maxRadius - r);
            if (settings.shuffle) {
              points = [].concat(points);
              shuffleArray(points);
            }
            var drawn = points.some(tryToPutWordAtPoint);
            if (drawn) {
              return true;
            }
          }
          if (settings.shrinkToFit) {
            if (Array.isArray(item)) {
              item[1] = item[1] * 3 / 4;
            } else {
              item.weight = item.weight * 3 / 4;
            }
            return putWord2(item);
          }
          return false;
        };
        var sendEvent = function sendEvent2(type, cancelable, details) {
          if (cancelable) {
            return !elements.some(function(el) {
              var event = new CustomEvent(type, {
                detail: details || {}
              });
              return !el.dispatchEvent(event);
            }, this);
          } else {
            elements.forEach(function(el) {
              var event = new CustomEvent(type, {
                detail: details || {}
              });
              el.dispatchEvent(event);
            }, this);
          }
        };
        var start = function start2() {
          var canvas = elements[0];
          if (canvas.getContext) {
            ngx = Math.ceil(canvas.width / g);
            ngy = Math.ceil(canvas.height / g);
          } else {
            var rect = canvas.getBoundingClientRect();
            ngx = Math.ceil(rect.width / g);
            ngy = Math.ceil(rect.height / g);
          }
          if (!sendEvent("wordcloudstart", true)) {
            return;
          }
          center = settings.origin ? [settings.origin[0] / g, settings.origin[1] / g] : [ngx / 2, ngy / 2];
          maxRadius = Math.floor(Math.sqrt(ngx * ngx + ngy * ngy));
          grid = [];
          var gx, gy, i;
          if (!canvas.getContext || settings.clearCanvas) {
            elements.forEach(function(el) {
              if (el.getContext) {
                var ctx = el.getContext("2d");
                ctx.fillStyle = settings.backgroundColor;
                ctx.clearRect(0, 0, ngx * (g + 1), ngy * (g + 1));
                ctx.fillRect(0, 0, ngx * (g + 1), ngy * (g + 1));
              } else {
                el.textContent = "";
                el.style.backgroundColor = settings.backgroundColor;
                el.style.position = "relative";
              }
            });
            gx = ngx;
            while (gx--) {
              grid[gx] = [];
              gy = ngy;
              while (gy--) {
                grid[gx][gy] = true;
              }
            }
          } else {
            var bctx = document.createElement("canvas").getContext("2d");
            bctx.fillStyle = settings.backgroundColor;
            bctx.fillRect(0, 0, 1, 1);
            var bgPixel = bctx.getImageData(0, 0, 1, 1).data;
            var imageData = canvas.getContext("2d").getImageData(0, 0, ngx * g, ngy * g).data;
            gx = ngx;
            var x, y;
            while (gx--) {
              grid[gx] = [];
              gy = ngy;
              while (gy--) {
                y = g;
                singleGridLoop:
                  while (y--) {
                    x = g;
                    while (x--) {
                      i = 4;
                      while (i--) {
                        if (imageData[((gy * g + y) * ngx * g + (gx * g + x)) * 4 + i] !== bgPixel[i]) {
                          grid[gx][gy] = false;
                          break singleGridLoop;
                        }
                      }
                    }
                  }
                if (grid[gx][gy] !== false) {
                  grid[gx][gy] = true;
                }
              }
            }
            imageData = bctx = bgPixel = void 0;
          }
          if (settings.hover || settings.click) {
            interactive = true;
            gx = ngx + 1;
            while (gx--) {
              infoGrid[gx] = [];
            }
            if (settings.hover) {
              canvas.addEventListener("mousemove", wordcloudhover);
            }
            if (settings.click) {
              canvas.addEventListener("click", wordcloudclick);
              canvas.style.webkitTapHighlightColor = "rgba(0, 0, 0, 0)";
            }
            canvas.addEventListener("wordcloudstart", function stopInteraction() {
              canvas.removeEventListener("wordcloudstart", stopInteraction);
              canvas.removeEventListener("mousemove", wordcloudhover);
              canvas.removeEventListener("click", wordcloudclick);
              hovered = void 0;
            });
          }
          i = 0;
          var loopingFunction, stoppingFunction;
          if (settings.wait !== 0) {
            loopingFunction = window.setTimeout;
            stoppingFunction = window.clearTimeout;
          } else {
            loopingFunction = window.setImmediate;
            stoppingFunction = window.clearImmediate;
          }
          var addEventListener = function addEventListener2(type, listener) {
            elements.forEach(function(el) {
              el.addEventListener(type, listener);
            }, this);
          };
          var removeEventListener = function removeEventListener2(type, listener) {
            elements.forEach(function(el) {
              el.removeEventListener(type, listener);
            }, this);
          };
          var anotherWordCloudStart = function anotherWordCloudStart2() {
            removeEventListener("wordcloudstart", anotherWordCloudStart2);
            stoppingFunction(timer[timerId]);
          };
          addEventListener("wordcloudstart", anotherWordCloudStart);
          timer[timerId] = loopingFunction(function loop() {
            if (i >= settings.list.length) {
              stoppingFunction(timer[timerId]);
              sendEvent("wordcloudstop", false);
              removeEventListener("wordcloudstart", anotherWordCloudStart);
              delete timer[timerId];
              return;
            }
            escapeTime = new Date().getTime();
            var drawn = putWord(settings.list[i]);
            var canceled = !sendEvent("wordclouddrawn", true, {
              item: settings.list[i],
              drawn
            });
            if (exceedTime() || canceled) {
              stoppingFunction(timer[timerId]);
              settings.abort();
              sendEvent("wordcloudabort", false);
              sendEvent("wordcloudstop", false);
              removeEventListener("wordcloudstart", anotherWordCloudStart);
              delete timer[timerId];
              return;
            }
            i++;
            timer[timerId] = loopingFunction(loop, settings.wait);
          }, settings.wait);
        };
        start();
      };
      WordCloud6.isSupported = isSupported;
      WordCloud6.minFontSize = minFontSize;
      WordCloud6.stop = function stop() {
        if (timer) {
          for (var timerId in timer) {
            window.clearImmediate(timer[timerId]);
          }
        }
      };
      if (typeof define === "function" && define.amd) {
        global.WordCloud = WordCloud6;
        define("wordcloud", [], function() {
          return WordCloud6;
        });
      } else if (typeof module2 !== "undefined" && module2.exports) {
        module2.exports = WordCloud6;
      } else {
        global.WordCloud = WordCloud6;
      }
    })(exports);
  }
});

// node_modules/obsidian-dataview/lib/index.js
var require_lib = __commonJS({
  "node_modules/obsidian-dataview/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    require("obsidian");
    var getAPI2 = (app2) => {
      var _a;
      if (app2)
        return (_a = app2.plugins.plugins.dataview) === null || _a === void 0 ? void 0 : _a.api;
      else
        return window["DataviewAPI"];
    };
    var isPluginEnabled = (app2) => app2.plugins.enabledPlugins.has("dataview");
    exports.getAPI = getAPI2;
    exports.isPluginEnabled = isPluginEnabled;
  }
});

// node_modules/stopword/lib/stopwords_en.js
var require_stopwords_en = __commonJS({
  "node_modules/stopword/lib/stopwords_en.js"(exports) {
    var words = ["about", "after", "all", "also", "am", "an", "and", "another", "any", "are", "as", "at", "be", "because", "been", "before", "being", "between", "both", "but", "by", "came", "can", "come", "could", "did", "do", "each", "for", "from", "get", "got", "has", "had", "he", "have", "her", "here", "him", "himself", "his", "how", "if", "in", "into", "is", "it", "like", "make", "many", "me", "might", "more", "most", "much", "must", "my", "never", "now", "of", "on", "only", "or", "other", "our", "out", "over", "said", "same", "should", "since", "some", "still", "such", "take", "than", "that", "the", "their", "them", "then", "there", "these", "they", "this", "those", "through", "to", "too", "under", "up", "very", "was", "way", "we", "well", "were", "what", "where", "which", "while", "who", "with", "would", "you", "your", "a", "i"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_af.js
var require_stopwords_af = __commonJS({
  "node_modules/stopword/lib/stopwords_af.js"(exports) {
    var words = ["die", "het", "en", "sy", "nie", "was", "hy", "te", "is", "ek", "om", "hulle", "in", "my", "'n", "vir", "toe", "haar", "van", "dit", "op", "se", "wat", "met", "gaan", "baie", "ons", "jy", "na", "maar", "hom", "so", "n", "huis", "kan", "aan", "dat", "daar", "sal", "jou", "ges\xEA", "by", "kom", "een", "ma", "as", "son", "groot", "begin", "al"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ar.js
var require_stopwords_ar = __commonJS({
  "node_modules/stopword/lib/stopwords_ar.js"(exports) {
    var words = ["\u060C", "\u0651\u0622\u0636", "\u0622\u0645\u064A\u0646\u064E", "\u0622\u0647", "\u0622\u0647\u0627\u064B", "\u0622\u064A", "\u0623", "\u0623\u0628", "\u0623\u062C\u0644", "\u0623\u062C\u0645\u0639", "\u0623\u062E", "\u0623\u062E\u0630", "\u0623\u0635\u0628\u062D", "\u0623\u0636\u062D\u0649", "\u0623\u0642\u0628\u0644", "\u0623\u0642\u0644", "\u0623\u0643\u062B\u0631", "\u0623\u0644\u0627", "\u0623\u0645", "\u0623\u0645\u0627", "\u0623\u0645\u0627\u0645\u0643", "\u0623\u0645\u0627\u0645\u0643\u064E", "\u0623\u0645\u0633\u0649", "\u0623\u0645\u0651\u0627", "\u0623\u0646", "\u0623\u0646\u0627", "\u0623\u0646\u062A", "\u0623\u0646\u062A\u0645", "\u0623\u0646\u062A\u0645\u0627", "\u0623\u0646\u062A\u0646", "\u0623\u0646\u062A\u0650", "\u0623\u0646\u0634\u0623", "\u0623\u0646\u0651\u0649", "\u0623\u0648", "\u0623\u0648\u0634\u0643", "\u0623\u0648\u0644\u0626\u0643", "\u0623\u0648\u0644\u0626\u0643\u0645", "\u0623\u0648\u0644\u0627\u0621", "\u0623\u0648\u0644\u0627\u0644\u0643", "\u0623\u0648\u0651\u0647\u0652", "\u0623\u064A", "\u0623\u064A\u0627", "\u0623\u064A\u0646", "\u0623\u064A\u0646\u0645\u0627", "\u0623\u064A\u0651", "\u0623\u064E\u0646\u064E\u0651", "\u0623\u064E\u064E\u064A\u064F\u0651", "\u0623\u064F\u0641\u064D\u0651", "\u0625\u0630", "\u0625\u0630\u0627", "\u0625\u0630\u0627\u064B", "\u0625\u0630\u0645\u0627", "\u0625\u0630\u0646", "\u0625\u0644\u0649", "\u0625\u0644\u064A\u0643\u0645", "\u0625\u0644\u064A\u0643\u0645\u0627", "\u0625\u0644\u064A\u0643\u0646\u0651", "\u0625\u0644\u064A\u0643\u064E", "\u0625\u0644\u064E\u064A\u0652\u0643\u064E", "\u0625\u0644\u0651\u0627", "\u0625\u0645\u0651\u0627", "\u0625\u0646", "\u0625\u0646\u0651\u0645\u0627", "\u0625\u064A", "\u0625\u064A\u0627\u0643", "\u0625\u064A\u0627\u0643\u0645", "\u0625\u064A\u0627\u0643\u0645\u0627", "\u0625\u064A\u0627\u0643\u0646", "\u0625\u064A\u0627\u0646\u0627", "\u0625\u064A\u0627\u0647", "\u0625\u064A\u0627\u0647\u0627", "\u0625\u064A\u0627\u0647\u0645", "\u0625\u064A\u0627\u0647\u0645\u0627", "\u0625\u064A\u0627\u0647\u0646", "\u0625\u064A\u0627\u064A", "\u0625\u064A\u0647\u064D", "\u0625\u0650\u0646\u064E\u0651", "\u0627", "\u0627\u0628\u062A\u062F\u0623", "\u0627\u062B\u0631", "\u0627\u062C\u0644", "\u0627\u062D\u062F", "\u0627\u062E\u0631\u0649", "\u0627\u062E\u0644\u0648\u0644\u0642", "\u0627\u0630\u0627", "\u0627\u0631\u0628\u0639\u0629", "\u0627\u0631\u062A\u062F\u0651", "\u0627\u0633\u062A\u062D\u0627\u0644", "\u0627\u0637\u0627\u0631", "\u0627\u0639\u0627\u062F\u0629", "\u0627\u0639\u0644\u0646\u062A", "\u0627\u0641", "\u0627\u0643\u062B\u0631", "\u0627\u0643\u062F", "\u0627\u0644\u0623\u0644\u0627\u0621", "\u0627\u0644\u0623\u0644\u0649", "\u0627\u0644\u0627", "\u0627\u0644\u0627\u062E\u064A\u0631\u0629", "\u0627\u0644\u0627\u0646", "\u0627\u0644\u0627\u0648\u0644", "\u0627\u0644\u0627\u0648\u0644\u0649", "\u0627\u0644\u062A\u0649", "\u0627\u0644\u062A\u064A", "\u0627\u0644\u062B\u0627\u0646\u064A", "\u0627\u0644\u062B\u0627\u0646\u064A\u0629", "\u0627\u0644\u0630\u0627\u062A\u064A", "\u0627\u0644\u0630\u0649", "\u0627\u0644\u0630\u064A", "\u0627\u0644\u0630\u064A\u0646", "\u0627\u0644\u0633\u0627\u0628\u0642", "\u0627\u0644\u0641", "\u0627\u0644\u0644\u0627\u0626\u064A", "\u0627\u0644\u0644\u0627\u062A\u064A", "\u0627\u0644\u0644\u062A\u0627\u0646", "\u0627\u0644\u0644\u062A\u064A\u0627", "\u0627\u0644\u0644\u062A\u064A\u0646", "\u0627\u0644\u0644\u0630\u0627\u0646", "\u0627\u0644\u0644\u0630\u064A\u0646", "\u0627\u0644\u0644\u0648\u0627\u062A\u064A", "\u0627\u0644\u0645\u0627\u0636\u064A", "\u0627\u0644\u0645\u0642\u0628\u0644", "\u0627\u0644\u0648\u0642\u062A", "\u0627\u0644\u0649", "\u0627\u0644\u064A\u0648\u0645", "\u0627\u0645\u0627", "\u0627\u0645\u0627\u0645", "\u0627\u0645\u0633", "\u0627\u0646", "\u0627\u0646\u0628\u0631\u0649", "\u0627\u0646\u0642\u0644\u0628", "\u0627\u0646\u0647", "\u0627\u0646\u0647\u0627", "\u0627\u0648", "\u0627\u0648\u0644", "\u0627\u064A", "\u0627\u064A\u0627\u0631", "\u0627\u064A\u0627\u0645", "\u0627\u064A\u0636\u0627", "\u0628", "\u0628\u0627\u062A", "\u0628\u0627\u0633\u0645", "\u0628\u0627\u0646", "\u0628\u062E\u064D", "\u0628\u0631\u0633", "\u0628\u0633\u0628\u0628", "\u0628\u0633\u0651", "\u0628\u0634\u0643\u0644", "\u0628\u0636\u0639", "\u0628\u0637\u0622\u0646", "\u0628\u0639\u062F", "\u0628\u0639\u0636", "\u0628\u0643", "\u0628\u0643\u0645", "\u0628\u0643\u0645\u0627", "\u0628\u0643\u0646", "\u0628\u0644", "\u0628\u0644\u0649", "\u0628\u0645\u0627", "\u0628\u0645\u0627\u0630\u0627", "\u0628\u0645\u0646", "\u0628\u0646", "\u0628\u0646\u0627", "\u0628\u0647", "\u0628\u0647\u0627", "\u0628\u064A", "\u0628\u064A\u062F", "\u0628\u064A\u0646", "\u0628\u064E\u0633\u0652", "\u0628\u064E\u0644\u0652\u0647\u064E", "\u0628\u0650\u0626\u0652\u0633\u064E", "\u062A\u0627\u0646\u0650", "\u062A\u0627\u0646\u0650\u0643", "\u062A\u0628\u062F\u0651\u0644", "\u062A\u062C\u0627\u0647", "\u062A\u062D\u0648\u0651\u0644", "\u062A\u0644\u0642\u0627\u0621", "\u062A\u0644\u0643", "\u062A\u0644\u0643\u0645", "\u062A\u0644\u0643\u0645\u0627", "\u062A\u0645", "\u062A\u064A\u0646\u0643", "\u062A\u064E\u064A\u0652\u0646\u0650", "\u062A\u0650\u0647", "\u062A\u0650\u064A", "\u062B\u0644\u0627\u062B\u0629", "\u062B\u0645", "\u062B\u0645\u0651", "\u062B\u0645\u0651\u0629", "\u062B\u064F\u0645\u064E\u0651", "\u062C\u0639\u0644", "\u062C\u0644\u0644", "\u062C\u0645\u064A\u0639", "\u062C\u064A\u0631", "\u062D\u0627\u0631", "\u062D\u0627\u0634\u0627", "\u062D\u0627\u0644\u064A\u0627", "\u062D\u0627\u064A", "\u062D\u062A\u0649", "\u062D\u0631\u0649", "\u062D\u0633\u0628", "\u062D\u0645", "\u062D\u0648\u0627\u0644\u0649", "\u062D\u0648\u0644", "\u062D\u064A\u062B", "\u062D\u064A\u062B\u0645\u0627", "\u062D\u064A\u0646", "\u062D\u064A\u064E\u0651", "\u062D\u064E\u0628\u064E\u0651\u0630\u064E\u0627", "\u062D\u064E\u062A\u064E\u0651\u0649", "\u062D\u064E\u0630\u0627\u0631\u0650", "\u062E\u0644\u0627", "\u062E\u0644\u0627\u0644", "\u062F\u0648\u0646", "\u062F\u0648\u0646\u0643", "\u0630\u0627", "\u0630\u0627\u062A", "\u0630\u0627\u0643", "\u0630\u0627\u0646\u0643", "\u0630\u0627\u0646\u0650", "\u0630\u0644\u0643", "\u0630\u0644\u0643\u0645", "\u0630\u0644\u0643\u0645\u0627", "\u0630\u0644\u0643\u0646", "\u0630\u0648", "\u0630\u0648\u0627", "\u0630\u0648\u0627\u062A\u0627", "\u0630\u0648\u0627\u062A\u064A", "\u0630\u064A\u062A", "\u0630\u064A\u0646\u0643", "\u0630\u064E\u064A\u0652\u0646\u0650", "\u0630\u0650\u0647", "\u0630\u0650\u064A", "\u0631\u0627\u062D", "\u0631\u062C\u0639", "\u0631\u0648\u064A\u062F\u0643", "\u0631\u064A\u062B", "\u0631\u064F\u0628\u064E\u0651", "\u0632\u064A\u0627\u0631\u0629", "\u0633\u0628\u062D\u0627\u0646", "\u0633\u0631\u0639\u0627\u0646", "\u0633\u0646\u0629", "\u0633\u0646\u0648\u0627\u062A", "\u0633\u0648\u0641", "\u0633\u0648\u0649", "\u0633\u064E\u0627\u0621\u064E", "\u0633\u064E\u0627\u0621\u064E\u0645\u064E\u0627", "\u0634\u0628\u0647", "\u0634\u062E\u0635\u0627", "\u0634\u0631\u0639", "\u0634\u064E\u062A\u064E\u0651\u0627\u0646\u064E", "\u0635\u0627\u0631", "\u0635\u0628\u0627\u062D", "\u0635\u0641\u0631", "\u0635\u0647\u064D", "\u0635\u0647\u0652", "\u0636\u062F", "\u0636\u0645\u0646", "\u0637\u0627\u0642", "\u0637\u0627\u0644\u0645\u0627", "\u0637\u0641\u0642", "\u0637\u064E\u0642", "\u0638\u0644\u0651", "\u0639\u0627\u062F", "\u0639\u0627\u0645", "\u0639\u0627\u0645\u0627", "\u0639\u0627\u0645\u0629", "\u0639\u062F\u0627", "\u0639\u062F\u0629", "\u0639\u062F\u062F", "\u0639\u062F\u0645", "\u0639\u0633\u0649", "\u0639\u0634\u0631", "\u0639\u0634\u0631\u0629", "\u0639\u0644\u0642", "\u0639\u0644\u0649", "\u0639\u0644\u064A\u0643", "\u0639\u0644\u064A\u0647", "\u0639\u0644\u064A\u0647\u0627", "\u0639\u0644\u064B\u0651", "\u0639\u0646", "\u0639\u0646\u062F", "\u0639\u0646\u062F\u0645\u0627", "\u0639\u0648\u0636", "\u0639\u064A\u0646", "\u0639\u064E\u062F\u064E\u0633\u0652", "\u0639\u064E\u0645\u064E\u0651\u0627", "\u063A\u062F\u0627", "\u063A\u064A\u0631", "\u0640", "\u0641", "\u0641\u0627\u0646", "\u0641\u0644\u0627\u0646", "\u0641\u0648", "\u0641\u0649", "\u0641\u064A", "\u0641\u064A\u0645", "\u0641\u064A\u0645\u0627", "\u0641\u064A\u0647", "\u0641\u064A\u0647\u0627", "\u0642\u0627\u0644", "\u0642\u0627\u0645", "\u0642\u0628\u0644", "\u0642\u062F", "\u0642\u0637\u0651", "\u0642\u0644\u0645\u0627", "\u0642\u0648\u0629", "\u0643\u0623\u0646\u0651\u0645\u0627", "\u0643\u0623\u064A\u0646", "\u0643\u0623\u064A\u0651", "\u0643\u0623\u064A\u0651\u0646", "\u0643\u0627\u062F", "\u0643\u0627\u0646", "\u0643\u0627\u0646\u062A", "\u0643\u0630\u0627", "\u0643\u0630\u0644\u0643", "\u0643\u0631\u0628", "\u0643\u0644", "\u0643\u0644\u0627", "\u0643\u0644\u0627\u0647\u0645\u0627", "\u0643\u0644\u062A\u0627", "\u0643\u0644\u0645", "\u0643\u0644\u064A\u0643\u0645\u0627", "\u0643\u0644\u064A\u0647\u0645\u0627", "\u0643\u0644\u0651\u0645\u0627", "\u0643\u0644\u064E\u0651\u0627", "\u0643\u0645", "\u0643\u0645\u0627", "\u0643\u064A", "\u0643\u064A\u062A", "\u0643\u064A\u0641", "\u0643\u064A\u0641\u0645\u0627", "\u0643\u064E\u0623\u064E\u0646\u064E\u0651", "\u0643\u0650\u062E", "\u0644\u0626\u0646", "\u0644\u0627", "\u0644\u0627\u062A", "\u0644\u0627\u0633\u064A\u0645\u0627", "\u0644\u062F\u0646", "\u0644\u062F\u0649", "\u0644\u0639\u0645\u0631", "\u0644\u0642\u0627\u0621", "\u0644\u0643", "\u0644\u0643\u0645", "\u0644\u0643\u0645\u0627", "\u0644\u0643\u0646", "\u0644\u0643\u0646\u064E\u0651\u0645\u0627", "\u0644\u0643\u064A", "\u0644\u0643\u064A\u0644\u0627", "\u0644\u0644\u0627\u0645\u0645", "\u0644\u0645", "\u0644\u0645\u0627", "\u0644\u0645\u0651\u0627", "\u0644\u0646", "\u0644\u0646\u0627", "\u0644\u0647", "\u0644\u0647\u0627", "\u0644\u0648", "\u0644\u0648\u0643\u0627\u0644\u0629", "\u0644\u0648\u0644\u0627", "\u0644\u0648\u0645\u0627", "\u0644\u064A", "\u0644\u064E\u0633\u0652\u062A\u064E", "\u0644\u064E\u0633\u0652\u062A\u064F", "\u0644\u064E\u0633\u0652\u062A\u064F\u0645", "\u0644\u064E\u0633\u0652\u062A\u064F\u0645\u064E\u0627", "\u0644\u064E\u0633\u0652\u062A\u064F\u0646\u064E\u0651", "\u0644\u064E\u0633\u0652\u062A\u0650", "\u0644\u064E\u0633\u0652\u0646\u064E", "\u0644\u064E\u0639\u064E\u0644\u064E\u0651", "\u0644\u064E\u0643\u0650\u0646\u064E\u0651", "\u0644\u064E\u064A\u0652\u062A\u064E", "\u0644\u064E\u064A\u0652\u0633\u064E", "\u0644\u064E\u064A\u0652\u0633\u064E\u0627", "\u0644\u064E\u064A\u0652\u0633\u064E\u062A\u064E\u0627", "\u0644\u064E\u064A\u0652\u0633\u064E\u062A\u0652", "\u0644\u064E\u064A\u0652\u0633\u064F\u0648\u0627", "\u0644\u064E\u0650\u0633\u0652\u0646\u064E\u0627", "\u0645\u0627", "\u0645\u0627\u0627\u0646\u0641\u0643", "\u0645\u0627\u0628\u0631\u062D", "\u0645\u0627\u062F\u0627\u0645", "\u0645\u0627\u0630\u0627", "\u0645\u0627\u0632\u0627\u0644", "\u0645\u0627\u0641\u062A\u0626", "\u0645\u0627\u064A\u0648", "\u0645\u062A\u0649", "\u0645\u062B\u0644", "\u0645\u0630", "\u0645\u0633\u0627\u0621", "\u0645\u0639", "\u0645\u0639\u0627\u0630", "\u0645\u0642\u0627\u0628\u0644", "\u0645\u0643\u0627\u0646\u0643\u0645", "\u0645\u0643\u0627\u0646\u0643\u0645\u0627", "\u0645\u0643\u0627\u0646\u0643\u0646\u0651", "\u0645\u0643\u0627\u0646\u064E\u0643", "\u0645\u0644\u064A\u0627\u0631", "\u0645\u0644\u064A\u0648\u0646", "\u0645\u0645\u0627", "\u0645\u0645\u0646", "\u0645\u0646", "\u0645\u0646\u0630", "\u0645\u0646\u0647\u0627", "\u0645\u0647", "\u0645\u0647\u0645\u0627", "\u0645\u064E\u0646\u0652", "\u0645\u0650\u0646", "\u0646\u062D\u0646", "\u0646\u062D\u0648", "\u0646\u0639\u0645", "\u0646\u0641\u0633", "\u0646\u0641\u0633\u0647", "\u0646\u0647\u0627\u064A\u0629", "\u0646\u064E\u062E\u0652", "\u0646\u0650\u0639\u0650\u0645\u0651\u0627", "\u0646\u0650\u0639\u0652\u0645\u064E", "\u0647\u0627", "\u0647\u0627\u0624\u0645", "\u0647\u0627\u0643\u064E", "\u0647\u0627\u0647\u0646\u0627", "\u0647\u0628\u0651", "\u0647\u0630\u0627", "\u0647\u0630\u0647", "\u0647\u0643\u0630\u0627", "\u0647\u0644", "\u0647\u0644\u0645\u064E\u0651", "\u0647\u0644\u0651\u0627", "\u0647\u0645", "\u0647\u0645\u0627", "\u0647\u0646", "\u0647\u0646\u0627", "\u0647\u0646\u0627\u0643", "\u0647\u0646\u0627\u0644\u0643", "\u0647\u0648", "\u0647\u064A", "\u0647\u064A\u0627", "\u0647\u064A\u062A", "\u0647\u064A\u0651\u0627", "\u0647\u064E\u0624\u0644\u0627\u0621", "\u0647\u064E\u0627\u062A\u0627\u0646\u0650", "\u0647\u064E\u0627\u062A\u064E\u064A\u0652\u0646\u0650", "\u0647\u064E\u0627\u062A\u0650\u0647", "\u0647\u064E\u0627\u062A\u0650\u064A", "\u0647\u064E\u062C\u0652", "\u0647\u064E\u0630\u0627", "\u0647\u064E\u0630\u0627\u0646\u0650", "\u0647\u064E\u0630\u064E\u064A\u0652\u0646\u0650", "\u0647\u064E\u0630\u0650\u0647", "\u0647\u064E\u0630\u0650\u064A", "\u0647\u064E\u064A\u0652\u0647\u064E\u0627\u062A\u064E", "\u0648", "\u06486", "\u0648\u0627", "\u0648\u0627\u062D\u062F", "\u0648\u0627\u0636\u0627\u0641", "\u0648\u0627\u0636\u0627\u0641\u062A", "\u0648\u0627\u0643\u062F", "\u0648\u0627\u0646", "\u0648\u0627\u0647\u0627\u064B", "\u0648\u0627\u0648\u0636\u062D", "\u0648\u0631\u0627\u0621\u064E\u0643", "\u0648\u0641\u064A", "\u0648\u0642\u0627\u0644", "\u0648\u0642\u0627\u0644\u062A", "\u0648\u0642\u062F", "\u0648\u0642\u0641", "\u0648\u0643\u0627\u0646", "\u0648\u0643\u0627\u0646\u062A", "\u0648\u0644\u0627", "\u0648\u0644\u0645", "\u0648\u0645\u0646", "\u0648\u0647\u0648", "\u0648\u0647\u064A", "\u0648\u064A\u0643\u0623\u0646\u0651", "\u0648\u064E\u064A\u0652", "\u0648\u064F\u0634\u0652\u0643\u064E\u0627\u0646\u064E\u064E", "\u064A\u0643\u0648\u0646", "\u064A\u0645\u0643\u0646", "\u064A\u0648\u0645", "\u0651\u0623\u064A\u0651\u0627\u0646"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_bn.js
var require_stopwords_bn = __commonJS({
  "node_modules/stopword/lib/stopwords_bn.js"(exports) {
    var words = ["\u0985\u09A4\u098F\u09AC", "\u0985\u09A5\u099A", "\u0985\u09A5\u09AC\u09BE", "\u0985\u09A8\u09C1\u09AF\u09BE\u09AF\u09BC\u09C0", "\u0985\u09A8\u09C7\u0995", "\u0985\u09A8\u09C7\u0995\u09C7", "\u0985\u09A8\u09C7\u0995\u09C7\u0987", "\u0985\u09A8\u09CD\u09A4\u09A4", "\u0985\u09A8\u09CD\u09AF", "\u0985\u09AC\u09A7\u09BF", "\u0985\u09AC\u09B6\u09CD\u09AF", "\u0985\u09B0\u09CD\u09A5\u09BE\u09A4", "\u0986\u0987", "\u0986\u0997\u09BE\u09AE\u09C0", "\u0986\u0997\u09C7", "\u0986\u0997\u09C7\u0987", "\u0986\u099B\u09C7", "\u0986\u099C", "\u0986\u09A6\u09CD\u09AF\u09AD\u09BE\u0997\u09C7", "\u0986\u09AA\u09A8\u09BE\u09B0", "\u0986\u09AA\u09A8\u09BF", "\u0986\u09AC\u09BE\u09B0", "\u0986\u09AE\u09B0\u09BE", "\u0986\u09AE\u09BE\u0995\u09C7", "\u0986\u09AE\u09BE\u09A6\u09C7\u09B0", "\u0986\u09AE\u09BE\u09B0", "\u0986\u09AE\u09BF", "\u0986\u09B0", "\u0986\u09B0\u0993", "\u0987", "\u0987\u09A4\u09CD\u09AF\u09BE\u09A6\u09BF", "\u0987\u09B9\u09BE", "\u0989\u099A\u09BF\u09A4", "\u0989\u09A4\u09CD\u09A4\u09B0", "\u0989\u09A8\u09BF", "\u0989\u09AA\u09B0", "\u0989\u09AA\u09B0\u09C7", "\u098F", "\u098F\u0981\u09A6\u09C7\u09B0", "\u098F\u0981\u09B0\u09BE", "\u098F\u0987", "\u098F\u0995\u0987", "\u098F\u0995\u099F\u09BF", "\u098F\u0995\u09AC\u09BE\u09B0", "\u098F\u0995\u09C7", "\u098F\u0995\u09CD", "\u098F\u0996\u09A8", "\u098F\u0996\u09A8\u0993", "\u098F\u0996\u09BE\u09A8\u09C7", "\u098F\u0996\u09BE\u09A8\u09C7\u0987", "\u098F\u099F\u09BE", "\u098F\u099F\u09BE\u0987", "\u098F\u099F\u09BF", "\u098F\u09A4", "\u098F\u09A4\u099F\u09BE\u0987", "\u098F\u09A4\u09C7", "\u098F\u09A6\u09C7\u09B0", "\u098F\u09AC", "\u098F\u09AC\u0982", "\u098F\u09AC\u09BE\u09B0", "\u098F\u09AE\u09A8", "\u098F\u09AE\u09A8\u0995\u09C0", "\u098F\u09AE\u09A8\u09BF", "\u098F\u09B0", "\u098F\u09B0\u09BE", "\u098F\u09B2", "\u098F\u09B8", "\u098F\u09B8\u09C7", "\u0990", "\u0993", "\u0993\u0981\u09A6\u09C7\u09B0", "\u0993\u0981\u09B0", "\u0993\u0981\u09B0\u09BE", "\u0993\u0987", "\u0993\u0995\u09C7", "\u0993\u0996\u09BE\u09A8\u09C7", "\u0993\u09A6\u09C7\u09B0", "\u0993\u09B0", "\u0993\u09B0\u09BE", "\u0995\u0996\u09A8\u0993", "\u0995\u09A4", "\u0995\u09AC\u09C7", "\u0995\u09AE\u09A8\u09C7", "\u0995\u09AF\u09BC\u09C7\u0995", "\u0995\u09AF\u09BC\u09C7\u0995\u099F\u09BF", "\u0995\u09B0\u099B\u09C7", "\u0995\u09B0\u099B\u09C7\u09A8", "\u0995\u09B0\u09A4\u09C7", "\u0995\u09B0\u09AC\u09C7", "\u0995\u09B0\u09AC\u09C7\u09A8", "\u0995\u09B0\u09B2\u09C7", "\u0995\u09B0\u09B2\u09C7\u09A8", "\u0995\u09B0\u09BE", "\u0995\u09B0\u09BE\u0987", "\u0995\u09B0\u09BE\u09AF\u09BC", "\u0995\u09B0\u09BE\u09B0", "\u0995\u09B0\u09BF", "\u0995\u09B0\u09BF\u09A4\u09C7", "\u0995\u09B0\u09BF\u09AF\u09BC\u09BE", "\u0995\u09B0\u09BF\u09AF\u09BC\u09C7", "\u0995\u09B0\u09C7", "\u0995\u09B0\u09C7\u0987", "\u0995\u09B0\u09C7\u099B\u09BF\u09B2\u09C7\u09A8", "\u0995\u09B0\u09C7\u099B\u09C7", "\u0995\u09B0\u09C7\u099B\u09C7\u09A8", "\u0995\u09B0\u09C7\u09A8", "\u0995\u09BE\u0989\u0995\u09C7", "\u0995\u09BE\u099B", "\u0995\u09BE\u099B\u09C7", "\u0995\u09BE\u099C", "\u0995\u09BE\u099C\u09C7", "\u0995\u09BE\u09B0\u0993", "\u0995\u09BE\u09B0\u09A3", "\u0995\u09BF", "\u0995\u09BF\u0982\u09AC\u09BE", "\u0995\u09BF\u099B\u09C1", "\u0995\u09BF\u099B\u09C1\u0987", "\u0995\u09BF\u09A8\u09CD\u09A4\u09C1", "\u0995\u09C0", "\u0995\u09C7", "\u0995\u09C7\u0989", "\u0995\u09C7\u0989\u0987", "\u0995\u09C7\u0996\u09BE", "\u0995\u09C7\u09A8", "\u0995\u09CB\u099F\u09BF", "\u0995\u09CB\u09A8", "\u0995\u09CB\u09A8\u0993", "\u0995\u09CB\u09A8\u09CB", "\u0995\u09CD\u09B7\u09C7\u09A4\u09CD\u09B0\u09C7", "\u0995\u09AF\u09BC\u09C7\u0995", "\u0996\u09C1\u09AC", "\u0997\u09BF\u09AF\u09BC\u09C7", "\u0997\u09BF\u09AF\u09BC\u09C7\u099B\u09C7", "\u0997\u09BF\u09AF\u09BC\u09C7", "\u0997\u09C1\u09B2\u09BF", "\u0997\u09C7\u099B\u09C7", "\u0997\u09C7\u09B2", "\u0997\u09C7\u09B2\u09C7", "\u0997\u09CB\u099F\u09BE", "\u099A\u09B2\u09C7", "\u099A\u09BE\u09A8", "\u099A\u09BE\u09AF\u09BC", "\u099A\u09BE\u09B0", "\u099A\u09BE\u09B2\u09C1", "\u099A\u09C7\u09AF\u09BC\u09C7", "\u099A\u09C7\u09B7\u09CD\u099F\u09BE", "\u099B\u09BE\u09A1\u09BC\u09BE", "\u099B\u09BE\u09A1\u09BC\u09BE\u0993", "\u099B\u09BF\u09B2", "\u099B\u09BF\u09B2\u09C7\u09A8", "\u099C\u09A8", "\u099C\u09A8\u0995\u09C7", "\u099C\u09A8\u09C7\u09B0", "\u099C\u09A8\u09CD\u09AF", "\u099C\u09A8\u09CD\u09AF\u0993\u099C\u09C7", "\u099C\u09BE\u09A8\u09A4\u09C7", "\u099C\u09BE\u09A8\u09BE", "\u099C\u09BE\u09A8\u09BE\u09A8\u09CB", "\u099C\u09BE\u09A8\u09BE\u09AF\u09BC", "\u099C\u09BE\u09A8\u09BF\u09AF\u09BC\u09C7", "\u099C\u09BE\u09A8\u09BF\u09AF\u09BC\u09C7\u099B\u09C7", "\u099C\u09C7", "\u099C\u09CD\u09A8\u099C\u09A8", "\u099F\u09BF", "\u09A0\u09BF\u0995", "\u09A4\u0996\u09A8", "\u09A4\u09A4", "\u09A4\u09A5\u09BE", "\u09A4\u09AC\u09C1", "\u09A4\u09AC\u09C7", "\u09A4\u09BE", "\u09A4\u09BE\u0981\u0995\u09C7", "\u09A4\u09BE\u0981\u09A6\u09C7\u09B0", "\u09A4\u09BE\u0981\u09B0", "\u09A4\u09BE\u0981\u09B0\u09BE", "\u09A4\u09BE\u0981\u09BE\u09B9\u09BE\u09B0\u09BE", "\u09A4\u09BE\u0987", "\u09A4\u09BE\u0993", "\u09A4\u09BE\u0995\u09C7", "\u09A4\u09BE\u09A4\u09C7", "\u09A4\u09BE\u09A6\u09C7\u09B0", "\u09A4\u09BE\u09B0", "\u09A4\u09BE\u09B0\u09AA\u09B0", "\u09A4\u09BE\u09B0\u09BE", "\u09A4\u09BE\u09B0\u09C8", "\u09A4\u09BE\u09B9\u09B2\u09C7", "\u09A4\u09BE\u09B9\u09BE", "\u09A4\u09BE\u09B9\u09BE\u09A4\u09C7", "\u09A4\u09BE\u09B9\u09BE\u09B0", "\u09A4\u09BF\u09A8\u0990", "\u09A4\u09BF\u09A8\u09BF", "\u09A4\u09BF\u09A8\u09BF\u0993", "\u09A4\u09C1\u09AE\u09BF", "\u09A4\u09C1\u09B2\u09C7", "\u09A4\u09C7\u09AE\u09A8", "\u09A4\u09CB", "\u09A4\u09CB\u09AE\u09BE\u09B0", "\u09A5\u09BE\u0995\u09AC\u09C7", "\u09A5\u09BE\u0995\u09AC\u09C7\u09A8", "\u09A5\u09BE\u0995\u09BE", "\u09A5\u09BE\u0995\u09BE\u09AF\u09BC", "\u09A5\u09BE\u0995\u09C7", "\u09A5\u09BE\u0995\u09C7\u09A8", "\u09A5\u09C7\u0995\u09C7", "\u09A5\u09C7\u0995\u09C7\u0987", "\u09A5\u09C7\u0995\u09C7\u0993", "\u09A6\u09BF\u0995\u09C7", "\u09A6\u09BF\u09A4\u09C7", "\u09A6\u09BF\u09A8", "\u09A6\u09BF\u09AF\u09BC\u09C7", "\u09A6\u09BF\u09AF\u09BC\u09C7\u099B\u09C7", "\u09A6\u09BF\u09AF\u09BC\u09C7\u099B\u09C7\u09A8", "\u09A6\u09BF\u09B2\u09C7\u09A8", "\u09A6\u09C1", "\u09A6\u09C1\u0987", "\u09A6\u09C1\u099F\u09BF", "\u09A6\u09C1\u099F\u09CB", "\u09A6\u09C7\u0993\u09AF\u09BC\u09BE", "\u09A6\u09C7\u0993\u09AF\u09BC\u09BE\u09B0", "\u09A6\u09C7\u0993\u09AF\u09BC\u09BE", "\u09A6\u09C7\u0996\u09A4\u09C7", "\u09A6\u09C7\u0996\u09BE", "\u09A6\u09C7\u0996\u09C7", "\u09A6\u09C7\u09A8", "\u09A6\u09C7\u09AF\u09BC", "\u09A6\u09CD\u09AC\u09BE\u09B0\u09BE", "\u09A7\u09B0\u09BE", "\u09A7\u09B0\u09C7", "\u09A7\u09BE\u09AE\u09BE\u09B0", "\u09A8\u09A4\u09C1\u09A8", "\u09A8\u09AF\u09BC", "\u09A8\u09BE", "\u09A8\u09BE\u0987", "\u09A8\u09BE\u0995\u09BF", "\u09A8\u09BE\u0997\u09BE\u09A6", "\u09A8\u09BE\u09A8\u09BE", "\u09A8\u09BF\u099C\u09C7", "\u09A8\u09BF\u099C\u09C7\u0987", "\u09A8\u09BF\u099C\u09C7\u09A6\u09C7\u09B0", "\u09A8\u09BF\u099C\u09C7\u09B0", "\u09A8\u09BF\u09A4\u09C7", "\u09A8\u09BF\u09AF\u09BC\u09C7", "\u09A8\u09BF\u09AF\u09BC\u09C7", "\u09A8\u09C7\u0987", "\u09A8\u09C7\u0993\u09AF\u09BC\u09BE", "\u09A8\u09C7\u0993\u09AF\u09BC\u09BE\u09B0", "\u09A8\u09C7\u0993\u09AF\u09BC\u09BE", "\u09A8\u09AF\u09BC", "\u09AA\u0995\u09CD\u09B7\u09C7", "\u09AA\u09B0", "\u09AA\u09B0\u09C7", "\u09AA\u09B0\u09C7\u0987", "\u09AA\u09B0\u09C7\u0993", "\u09AA\u09B0\u09CD\u09AF\u09A8\u09CD\u09A4", "\u09AA\u09BE\u0993\u09AF\u09BC\u09BE", "\u09AA\u09BE\u099A", "\u09AA\u09BE\u09B0\u09BF", "\u09AA\u09BE\u09B0\u09C7", "\u09AA\u09BE\u09B0\u09C7\u09A8", "\u09AA\u09BF", "\u09AA\u09C7\u09AF\u09BC\u09C7", "\u09AA\u09C7\u09AF\u09BC\u09CD\u09B0\u09CD", "\u09AA\u09CD\u09B0\u09A4\u09BF", "\u09AA\u09CD\u09B0\u09A5\u09AE", "\u09AA\u09CD\u09B0\u09AD\u09C3\u09A4\u09BF", "\u09AA\u09CD\u09B0\u09AF\u09A8\u09CD\u09A4", "\u09AA\u09CD\u09B0\u09BE\u09A5\u09AE\u09BF\u0995", "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC", "\u09AA\u09CD\u09B0\u09BE\u09AF\u09BC", "\u09AB\u09B2\u09C7", "\u09AB\u09BF\u09B0\u09C7", "\u09AB\u09C7\u09B0", "\u09AC\u0995\u09CD\u09A4\u09AC\u09CD\u09AF", "\u09AC\u09A6\u09B2\u09C7", "\u09AC\u09A8", "\u09AC\u09B0\u0982", "\u09AC\u09B2\u09A4\u09C7", "\u09AC\u09B2\u09B2", "\u09AC\u09B2\u09B2\u09C7\u09A8", "\u09AC\u09B2\u09BE", "\u09AC\u09B2\u09C7", "\u09AC\u09B2\u09C7\u099B\u09C7\u09A8", "\u09AC\u09B2\u09C7\u09A8", "\u09AC\u09B8\u09C7", "\u09AC\u09B9\u09C1", "\u09AC\u09BE", "\u09AC\u09BE\u09A6\u09C7", "\u09AC\u09BE\u09B0", "\u09AC\u09BF", "\u09AC\u09BF\u09A8\u09BE", "\u09AC\u09BF\u09AD\u09BF\u09A8\u09CD\u09A8", "\u09AC\u09BF\u09B6\u09C7\u09B7", "\u09AC\u09BF\u09B7\u09AF\u09BC\u099F\u09BF", "\u09AC\u09C7\u09B6", "\u09AC\u09C7\u09B6\u09BF", "\u09AC\u09CD\u09AF\u09AC\u09B9\u09BE\u09B0", "\u09AC\u09CD\u09AF\u09BE\u09AA\u09BE\u09B0\u09C7", "\u09AD\u09BE\u09AC\u09C7", "\u09AD\u09BE\u09AC\u09C7\u0987", "\u09AE\u09A4\u09CB", "\u09AE\u09A4\u09CB\u0987", "\u09AE\u09A7\u09CD\u09AF\u09AD\u09BE\u0997\u09C7", "\u09AE\u09A7\u09CD\u09AF\u09C7", "\u09AE\u09A7\u09CD\u09AF\u09C7\u0987", "\u09AE\u09A7\u09CD\u09AF\u09C7\u0993", "\u09AE\u09A8\u09C7", "\u09AE\u09BE\u09A4\u09CD\u09B0", "\u09AE\u09BE\u09A7\u09CD\u09AF\u09AE\u09C7", "\u09AE\u09CB\u099F", "\u09AE\u09CB\u099F\u09C7\u0987", "\u09AF\u0996\u09A8", "\u09AF\u09A4", "\u09AF\u09A4\u099F\u09BE", "\u09AF\u09A5\u09C7\u09B7\u09CD\u099F", "\u09AF\u09A6\u09BF", "\u09AF\u09A6\u09BF\u0993", "\u09AF\u09BE", "\u09AF\u09BE\u0981\u09B0", "\u09AF\u09BE\u0981\u09B0\u09BE", "\u09AF\u09BE\u0993\u09AF\u09BC\u09BE", "\u09AF\u09BE\u0993\u09AF\u09BC\u09BE\u09B0", "\u09AF\u09BE\u0993\u09AF\u09BC\u09BE", "\u09AF\u09BE\u0995\u09C7", "\u09AF\u09BE\u099A\u09CD\u099B\u09C7", "\u09AF\u09BE\u09A4\u09C7", "\u09AF\u09BE\u09A6\u09C7\u09B0", "\u09AF\u09BE\u09A8", "\u09AF\u09BE\u09AC\u09C7", "\u09AF\u09BE\u09AF\u09BC", "\u09AF\u09BE\u09B0", "\u09AF\u09BE\u09B0\u09BE", "\u09AF\u09BF\u09A8\u09BF", "\u09AF\u09C7", "\u09AF\u09C7\u0996\u09BE\u09A8\u09C7", "\u09AF\u09C7\u09A4\u09C7", "\u09AF\u09C7\u09A8", "\u09AF\u09C7\u09AE\u09A8", "\u09B0", "\u09B0\u0995\u09AE", "\u09B0\u09AF\u09BC\u09C7\u099B\u09C7", "\u09B0\u09BE\u0996\u09BE", "\u09B0\u09C7\u0996\u09C7", "\u09B2\u0995\u09CD\u09B7", "\u09B6\u09C1\u09A7\u09C1", "\u09B6\u09C1\u09B0\u09C1", "\u09B8\u0999\u09CD\u0997\u09C7", "\u09B8\u0999\u09CD\u0997\u09C7\u0993", "\u09B8\u09AC", "\u09B8\u09AC\u09BE\u09B0", "\u09B8\u09AE\u09B8\u09CD\u09A4", "\u09B8\u09AE\u09CD\u09AA\u09CD\u09B0\u09A4\u09BF", "\u09B8\u09B9", "\u09B8\u09B9\u09BF\u09A4", "\u09B8\u09BE\u09A7\u09BE\u09B0\u09A3", "\u09B8\u09BE\u09AE\u09A8\u09C7", "\u09B8\u09BF", "\u09B8\u09C1\u09A4\u09B0\u09BE\u0982", "\u09B8\u09C7", "\u09B8\u09C7\u0987", "\u09B8\u09C7\u0996\u09BE\u09A8", "\u09B8\u09C7\u0996\u09BE\u09A8\u09C7", "\u09B8\u09C7\u099F\u09BE", "\u09B8\u09C7\u099F\u09BE\u0987", "\u09B8\u09C7\u099F\u09BE\u0993", "\u09B8\u09C7\u099F\u09BF", "\u09B8\u09CD\u09AA\u09B7\u09CD\u099F", "\u09B8\u09CD\u09AC\u09AF\u09BC\u0982", "\u09B9\u0987\u09A4\u09C7", "\u09B9\u0987\u09AC\u09C7", "\u09B9\u0987\u09AF\u09BC\u09BE", "\u09B9\u0993\u09AF\u09BC\u09BE", "\u09B9\u0993\u09AF\u09BC\u09BE\u09AF\u09BC", "\u09B9\u0993\u09AF\u09BC\u09BE\u09B0", "\u09B9\u099A\u09CD\u099B\u09C7", "\u09B9\u09A4", "\u09B9\u09A4\u09C7", "\u09B9\u09A4\u09C7\u0987", "\u09B9\u09A8", "\u09B9\u09AC\u09C7", "\u09B9\u09AC\u09C7\u09A8", "\u09B9\u09AF\u09BC", "\u09B9\u09AF\u09BC\u09A4\u09CB", "\u09B9\u09AF\u09BC\u09A8\u09BF", "\u09B9\u09AF\u09BC\u09C7", "\u09B9\u09AF\u09BC\u09C7\u0987", "\u09B9\u09AF\u09BC\u09C7\u099B\u09BF\u09B2", "\u09B9\u09AF\u09BC\u09C7\u099B\u09C7", "\u09B9\u09AF\u09BC\u09C7\u099B\u09C7\u09A8", "\u09B9\u09B2", "\u09B9\u09B2\u09C7", "\u09B9\u09B2\u09C7\u0987", "\u09B9\u09B2\u09C7\u0993", "\u09B9\u09B2\u09CB", "\u09B9\u09BE\u099C\u09BE\u09B0", "\u09B9\u09BF\u09B8\u09BE\u09AC\u09C7", "\u09B9\u09C8\u09B2\u09C7", "\u09B9\u09CB\u0995", "\u09B9\u09AF\u09BC"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_bg.js
var require_stopwords_bg = __commonJS({
  "node_modules/stopword/lib/stopwords_bg.js"(exports) {
    var words = ["\u0430", "\u0430\u0432\u0442\u0435\u043D\u0442\u0438\u0447\u0435\u043D", "\u0430\u0437", "\u0430\u043A\u043E", "\u0430\u043B\u0430", "\u0431\u0435", "\u0431\u0435\u0437", "\u0431\u0435\u0448\u0435", "\u0431\u0438", "\u0431\u0438\u0432\u0448", "\u0431\u0438\u0432\u0448\u0430", "\u0431\u0438\u0432\u0448\u043E", "\u0431\u0438\u043B", "\u0431\u0438\u043B\u0430", "\u0431\u0438\u043B\u0438", "\u0431\u0438\u043B\u043E", "\u0431\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u044F", "\u0431\u043B\u0438\u0437\u043E", "\u0431\u044A\u0434\u0430\u0442", "\u0431\u044A\u0434\u0435", "\u0431\u044F\u0445\u0430", "\u0432", "\u0432\u0430\u0441", "\u0432\u0430\u0448", "\u0432\u0430\u0448\u0430", "\u0432\u0435\u0440\u043E\u044F\u0442\u043D\u043E", "\u0432\u0435\u0447\u0435", "\u0432\u0437\u0435\u043C\u0430", "\u0432\u0438", "\u0432\u0438\u0435", "\u0432\u0438\u043D\u0430\u0433\u0438", "\u0432\u043D\u0438\u043C\u0430\u0432\u0430", "\u0432\u0440\u0435\u043C\u0435", "\u0432\u0441\u0435", "\u0432\u0441\u0435\u043A\u0438", "\u0432\u0441\u0438\u0447\u043A\u0438", "\u0432\u0441\u0438\u0447\u043A\u043E", "\u0432\u0441\u044F\u043A\u0430", "\u0432\u044A\u0432", "\u0432\u044A\u043F\u0440\u0435\u043A\u0438", "\u0432\u044A\u0440\u0445\u0443", "\u0433", "\u0433\u0438", "\u0433\u043B\u0430\u0432\u0435\u043D", "\u0433\u043B\u0430\u0432\u043D\u0430", "\u0433\u043B\u0430\u0432\u043D\u043E", "\u0433\u043B\u0430\u0441", "\u0433\u043E", "\u0433\u043E\u0434\u0438\u043D\u0430", "\u0433\u043E\u0434\u0438\u043D\u0438", "\u0433\u043E\u0434\u0438\u0448\u0435\u043D", "\u0434", "\u0434\u0430", "\u0434\u0430\u043B\u0438", "\u0434\u0432\u0430", "\u0434\u0432\u0430\u043C\u0430", "\u0434\u0432\u0430\u043C\u0430\u0442\u0430", "\u0434\u0432\u0435", "\u0434\u0432\u0435\u0442\u0435", "\u0434\u0435\u043D", "\u0434\u043D\u0435\u0441", "\u0434\u043D\u0438", "\u0434\u043E", "\u0434\u043E\u0431\u0440\u0430", "\u0434\u043E\u0431\u0440\u0435", "\u0434\u043E\u0431\u0440\u043E", "\u0434\u043E\u0431\u044A\u0440", "\u0434\u043E\u043A\u0430\u0442\u043E", "\u0434\u043E\u043A\u043E\u0433\u0430", "\u0434\u043E\u0440\u0438", "\u0434\u043E\u0441\u0435\u0433\u0430", "\u0434\u043E\u0441\u0442\u0430", "\u0434\u0440\u0443\u0433", "\u0434\u0440\u0443\u0433\u0430", "\u0434\u0440\u0443\u0433\u0438", "\u0435", "\u0435\u0432\u0442\u0438\u043D", "\u0435\u0434\u0432\u0430", "\u0435\u0434\u0438\u043D", "\u0435\u0434\u043D\u0430", "\u0435\u0434\u043D\u0430\u043A\u0432\u0430", "\u0435\u0434\u043D\u0430\u043A\u0432\u0438", "\u0435\u0434\u043D\u0430\u043A\u044A\u0432", "\u0435\u0434\u043D\u043E", "\u0435\u043A\u0438\u043F", "\u0435\u0442\u043E", "\u0436\u0438\u0432\u043E\u0442", "\u0437\u0430", "\u0437\u0430\u0431\u0430\u0432\u044F\u043C", "\u0437\u0430\u0434", "\u0437\u0430\u0435\u0434\u043D\u043E", "\u0437\u0430\u0440\u0430\u0434\u0438", "\u0437\u0430\u0441\u0435\u0433\u0430", "\u0437\u0430\u0441\u043F\u0430\u043B", "\u0437\u0430\u0442\u043E\u0432\u0430", "\u0437\u0430\u0449\u043E", "\u0437\u0430\u0449\u043E\u0442\u043E", "\u0438", "\u0438\u0437", "\u0438\u043B\u0438", "\u0438\u043C", "\u0438\u043C\u0430", "\u0438\u043C\u0430\u0442", "\u0438\u0441\u043A\u0430", "\u0439", "\u043A\u0430\u0437\u0430", "\u043A\u0430\u043A", "\u043A\u0430\u043A\u0432\u0430", "\u043A\u0430\u043A\u0432\u043E", "\u043A\u0430\u043A\u0442\u043E", "\u043A\u0430\u043A\u044A\u0432", "\u043A\u0430\u0442\u043E", "\u043A\u043E\u0433\u0430", "\u043A\u043E\u0433\u0430\u0442\u043E", "\u043A\u043E\u0435\u0442\u043E", "\u043A\u043E\u0438\u0442\u043E", "\u043A\u043E\u0439", "\u043A\u043E\u0439\u0442\u043E", "\u043A\u043E\u043B\u043A\u043E", "\u043A\u043E\u044F\u0442\u043E", "\u043A\u044A\u0434\u0435", "\u043A\u044A\u0434\u0435\u0442\u043E", "\u043A\u044A\u043C", "\u043B\u0435\u0441\u0435\u043D", "\u043B\u0435\u0441\u043D\u043E", "\u043B\u0438", "\u043B\u043E\u0448", "\u043C", "\u043C\u0430\u0439", "\u043C\u0430\u043B\u043A\u043E", "\u043C\u0435", "\u043C\u0435\u0436\u0434\u0443", "\u043C\u0435\u043A", "\u043C\u0435\u043D", "\u043C\u0435\u0441\u0435\u0446", "\u043C\u0438", "\u043C\u043D\u043E\u0433\u043E", "\u043C\u043D\u043E\u0437\u0438\u043D\u0430", "\u043C\u043E\u0433\u0430", "\u043C\u043E\u0433\u0430\u0442", "\u043C\u043E\u0436\u0435", "\u043C\u043E\u043A\u044A\u0440", "\u043C\u043E\u043B\u044F", "\u043C\u043E\u043C\u0435\u043D\u0442\u0430", "\u043C\u0443", "\u043D", "\u043D\u0430", "\u043D\u0430\u0434", "\u043D\u0430\u0437\u0430\u0434", "\u043D\u0430\u0439", "\u043D\u0430\u043F\u0440\u0430\u0432\u0438", "\u043D\u0430\u043F\u0440\u0435\u0434", "\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440", "\u043D\u0430\u0441", "\u043D\u0435", "\u043D\u0435\u0433\u043E", "\u043D\u0435\u0449\u043E", "\u043D\u0435\u044F", "\u043D\u0438", "\u043D\u0438\u0435", "\u043D\u0438\u043A\u043E\u0439", "\u043D\u0438\u0442\u043E", "\u043D\u0438\u0449\u043E", "\u043D\u043E", "\u043D\u043E\u0432", "\u043D\u043E\u0432\u0430", "\u043D\u043E\u0432\u0438", "\u043D\u043E\u0432\u0438\u043D\u0430", "\u043D\u044F\u043A\u043E\u0438", "\u043D\u044F\u043A\u043E\u0439", "\u043D\u044F\u043A\u043E\u043B\u043A\u043E", "\u043D\u044F\u043C\u0430", "\u043E\u0431\u0430\u0447\u0435", "\u043E\u043A\u043E\u043B\u043E", "\u043E\u0441\u0432\u0435\u043D", "\u043E\u0441\u043E\u0431\u0435\u043D\u043E", "\u043E\u0442", "\u043E\u0442\u0433\u043E\u0440\u0435", "\u043E\u0442\u043D\u043E\u0432\u043E", "\u043E\u0449\u0435", "\u043F\u0430\u043A", "\u043F\u043E", "\u043F\u043E\u0432\u0435\u0447\u0435", "\u043F\u043E\u0432\u0435\u0447\u0435\u0442\u043E", "\u043F\u043E\u0434", "\u043F\u043E\u043D\u0435", "\u043F\u043E\u0440\u0430\u0434\u0438", "\u043F\u043E\u0441\u043B\u0435", "\u043F\u043E\u0447\u0442\u0438", "\u043F\u0440\u0430\u0432\u0438", "\u043F\u0440\u0435\u0434", "\u043F\u0440\u0435\u0434\u0438", "\u043F\u0440\u0435\u0437", "\u043F\u0440\u0438", "\u043F\u044A\u043A", "\u043F\u044A\u0440\u0432\u0430\u0442\u0430", "\u043F\u044A\u0440\u0432\u0438", "\u043F\u044A\u0440\u0432\u043E", "\u043F\u044A\u0442\u0438", "\u0440\u0430\u0432\u0435\u043D", "\u0440\u0430\u0432\u043D\u0430", "\u0441", "\u0441\u0430", "\u0441\u0430\u043C", "\u0441\u0430\u043C\u043E", "\u0441\u0435", "\u0441\u0435\u0433\u0430", "\u0441\u0438", "\u0441\u0438\u043D", "\u0441\u043A\u043E\u0440\u043E", "\u0441\u043B\u0435\u0434", "\u0441\u043B\u0435\u0434\u0432\u0430\u0449", "\u0441\u043C\u0435", "\u0441\u043C\u044F\u0445", "\u0441\u043F\u043E\u0440\u0435\u0434", "\u0441\u0440\u0435\u0434", "\u0441\u0440\u0435\u0449\u0443", "\u0441\u0442\u0435", "\u0441\u044A\u043C", "\u0441\u044A\u0441", "\u0441\u044A\u0449\u043E", "\u0442", "\u0442.\u043D.", "\u0442\u0430\u0437\u0438", "\u0442\u0430\u043A\u0430", "\u0442\u0430\u043A\u0438\u0432\u0430", "\u0442\u0430\u043A\u044A\u0432", "\u0442\u0430\u043C", "\u0442\u0432\u043E\u0439", "\u0442\u0435", "\u0442\u0435\u0437\u0438", "\u0442\u0438", "\u0442\u043E", "\u0442\u043E\u0432\u0430", "\u0442\u043E\u0433\u0430\u0432\u0430", "\u0442\u043E\u0437\u0438", "\u0442\u043E\u0439", "\u0442\u043E\u043B\u043A\u043E\u0432\u0430", "\u0442\u043E\u0447\u043D\u043E", "\u0442\u0440\u0438", "\u0442\u0440\u044F\u0431\u0432\u0430", "\u0442\u0443\u043A", "\u0442\u044A\u0439", "\u0442\u044F", "\u0442\u044F\u0445", "\u0443", "\u0443\u0442\u0440\u0435", "\u0445\u0430\u0440\u0435\u0441\u0432\u0430", "\u0445\u0438\u043B\u044F\u0434\u0438", "\u0447", "\u0447\u0430\u0441\u0430", "\u0447\u0435", "\u0447\u0435\u0441\u0442\u043E", "\u0447\u0440\u0435\u0437", "\u0449\u0435", "\u0449\u043E\u043C", "\u044E\u043C\u0440\u0443\u043A", "\u044F", "\u044F\u043A"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_br.js
var require_stopwords_br = __commonJS({
  "node_modules/stopword/lib/stopwords_br.js"(exports) {
    var words = ["a", "ainda", "alem", "ambas", "ambos", "antes", "ao", "aonde", "aos", "apos", "aquele", "aqueles", "as", "assim", "com", "como", "contra", "contudo", "cuja", "cujas", "cujo", "cujos", "da", "das", "de", "dela", "dele", "deles", "demais", "depois", "desde", "desta", "deste", "dispoe", "dispoem", "diversa", "diversas", "diversos", "do", "dos", "durante", "e", "ela", "elas", "ele", "eles", "em", "entao", "entre", "essa", "essas", "esse", "esses", "esta", "estas", "este", "estes", "ha", "isso", "isto", "logo", "mais", "mas", "mediante", "menos", "mesma", "mesmas", "mesmo", "mesmos", "na", "nao", "nas", "nem", "nesse", "neste", "nos", "o", "os", "ou", "outra", "outras", "outro", "outros", "pelas", "pelo", "pelos", "perante", "pois", "por", "porque", "portanto", "propios", "proprio", "quais", "qual", "qualquer", "quando", "quanto", "que", "quem", "quer", "se", "seja", "sem", "sendo", "seu", "seus", "sob", "sobre", "sua", "suas", "tal", "tambem", "teu", "teus", "toda", "todas", "todo", "todos", "tua", "tuas", "tudo", "um", "uma", "umas", "uns"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ca.js
var require_stopwords_ca = __commonJS({
  "node_modules/stopword/lib/stopwords_ca.js"(exports) {
    var words = ["a", "abans", "ac\xED", "ah", "aix\xED", "aix\xF2", "al", "aleshores", "algun", "alguna", "algunes", "alguns", "alhora", "all\xE0", "all\xED", "all\xF2", "als", "altra", "altre", "altres", "amb", "ambdues", "ambd\xF3s", "apa", "aquell", "aquella", "aquelles", "aquells", "aquest", "aquesta", "aquestes", "aquests", "aqu\xED", "baix", "cada", "cadascuna", "cadascunes", "cadascuns", "cadasc\xFA", "com", "contra", "d'un", "d'una", "d'unes", "d'uns", "dalt", "de", "del", "dels", "des", "despr\xE9s", "dins", "dintre", "donat", "doncs", "durant", "e", "eh", "el", "els", "em", "en", "encara", "ens", "entre", "eren", "es", "esta", "estaven", "esteu", "est\xE0", "est\xE0vem", "est\xE0veu", "et", "etc", "ets", "fins", "fora", "gaireb\xE9", "ha", "han", "has", "havia", "he", "hem", "heu", "hi", "ho", "i", "igual", "iguals", "ja", "l'hi", "la", "les", "li", "li'n", "llavors", "m'he", "ma", "mal", "malgrat", "mateix", "mateixa", "mateixes", "mateixos", "me", "mentre", "meu", "meus", "meva", "meves", "molt", "molta", "moltes", "molts", "mon", "mons", "m\xE9s", "n'he", "n'hi", "ne", "ni", "no", "nogensmenys", "nom\xE9s", "nosaltres", "nostra", "nostre", "nostres", "o", "oh", "oi", "on", "pas", "pel", "pels", "per", "perqu\xE8", "per\xF2", "poc", "poca", "pocs", "poques", "potser", "propi", "qual", "quals", "quan", "quant", "que", "quelcom", "qui", "quin", "quina", "quines", "quins", "qu\xE8", "s'ha", "s'han", "sa", "semblant", "semblants", "ses", "seu", "seus", "seva", "seves", "si", "sobre", "sobretot", "solament", "sols", "son", "sons", "sota", "sou", "s\xF3c", "s\xF3n", "t'ha", "t'han", "t'he", "ta", "tal", "tamb\xE9", "tampoc", "tan", "tant", "tanta", "tantes", "teu", "teus", "teva", "teves", "ton", "tons", "tot", "tota", "totes", "tots", "un", "una", "unes", "uns", "us", "va", "vaig", "vam", "van", "vas", "veu", "vosaltres", "vostra", "vostre", "vostres", "\xE9rem", "\xE9reu", "\xE9s"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_cs.js
var require_stopwords_cs = __commonJS({
  "node_modules/stopword/lib/stopwords_cs.js"(exports) {
    var words = ["a", "aby", "ahoj", "aj", "ale", "anebo", "ani", "ano", "asi", "aspo\u0148", "atd", "atp", "a\u010Dkoli", "a\u017E", "bez", "beze", "bl\xEDzko", "bohu\u017Eel", "brzo", "bude", "budem", "budeme", "budete", "bude\u0161", "budou", "budu", "by", "byl", "byla", "byli", "bylo", "byly", "bys", "b\xFDt", "b\u011Bhem", "chce", "chceme", "chcete", "chce\u0161", "chci", "cht\xEDt", "cht\u011Bj\xED", "chut'", "chuti", "co", "co\u017E", "cz", "daleko", "dal\u0161\xED", "den", "deset", "devaten\xE1ct", "dev\u011Bt", "dnes", "do", "dobr\xFD", "docela", "dva", "dvacet", "dvan\xE1ct", "dv\u011B", "d\xE1l", "d\xE1le", "d\u011Bkovat", "d\u011Bkujeme", "d\u011Bkuji", "ho", "hodn\u011B", "i", "jak", "jakmile", "jako", "jako\u017E", "jde", "je", "jeden", "jeden\xE1ct", "jedna", "jedno", "jednou", "jedou", "jeho", "jeho\u017E", "jej", "jejich", "jej\xED", "jeliko\u017E", "jemu", "jen", "jenom", "jestli", "jestli\u017Ee", "je\u0161t\u011B", "je\u017E", "ji", "jich", "jimi", "jinak", "jin\xE9", "ji\u017E", "jsem", "jse\u0161", "jsi", "jsme", "jsou", "jste", "j\xE1", "j\xED", "j\xEDm", "j\xED\u017E", "k", "kam", "kde", "kdo", "kdy", "kdy\u017E", "ke", "kolik", "krom\u011B", "kterou", "kter\xE1", "kter\xE9", "kter\xFD", "kte\u0159\xED", "kv\u016Fli", "maj\xED", "mezi", "mi", "mne", "mnou", "mn\u011B", "moc", "mohl", "mohou", "moje", "moji", "mo\u017En\xE1", "mus\xED", "my", "m\xE1", "m\xE1lo", "m\xE1m", "m\xE1me", "m\xE1te", "m\xE1\u0161", "m\xE9", "m\xED", "m\xEDt", "m\u011B", "m\u016Fj", "m\u016F\u017Ee", "na", "nad", "nade", "napi\u0161te", "naproti", "na\u010De\u017E", "na\u0161e", "na\u0161i", "ne", "nebo", "nebyl", "nebyla", "nebyli", "nebyly", "ned\u011Blaj\xED", "ned\u011Bl\xE1", "ned\u011Bl\xE1m", "ned\u011Bl\xE1me", "ned\u011Bl\xE1te", "ned\u011Bl\xE1\u0161", "neg", "nejsi", "nejsou", "nemaj\xED", "nem\xE1me", "nem\xE1te", "nem\u011Bl", "nen\xED", "nesta\u010D\xED", "nevad\xED", "ne\u017E", "nic", "nich", "nimi", "nov\xE9", "nov\xFD", "nula", "n\xE1m", "n\xE1mi", "n\xE1s", "n\xE1\u0161", "n\xEDm", "n\u011B", "n\u011Bco", "n\u011Bjak", "n\u011Bkde", "n\u011Bkdo", "n\u011Bmu", "n\u011Bmu\u017E", "o", "od", "ode", "on", "ona", "oni", "ono", "ony", "osm", "osmn\xE1ct", "pak", "patn\xE1ct", "po", "pod", "podle", "pokud", "potom", "pouze", "pozd\u011B", "po\u0159\xE1d", "prav\xE9", "pro", "prost\u011B", "pros\xEDm", "proti", "proto", "proto\u017Ee", "pro\u010D", "prvn\xED", "pta", "p\u011Bt", "p\u0159ed", "p\u0159es", "p\u0159ese", "p\u0159i", "p\u0159i\u010Dem\u017E", "re", "rovn\u011B", "s", "se", "sedm", "sedmn\xE1ct", "si", "skoro", "sm\xED", "sm\u011Bj\xED", "snad", "spolu", "sta", "sto", "strana", "st\xE9", "sv\xE9", "sv\xFDch", "sv\xFDm", "sv\xFDmi", "ta", "tady", "tak", "takhle", "taky", "tak\xE9", "tak\u017Ee", "tam", "tamhle", "tamhleto", "tamto", "tato", "tebe", "tebou", "ted'", "tedy", "ten", "tento", "teto", "ti", "tipy", "tis\xEDc", "tis\xEDce", "to", "tob\u011B", "tohle", "toho", "tohoto", "tom", "tomto", "tomu", "tomuto", "toto", "tro\u0161ku", "tu", "tuto", "tvoje", "tv\xE1", "tv\xE9", "tv\u016Fj", "ty", "tyto", "t\xE9ma", "t\xEDm", "t\xEDmto", "t\u011B", "t\u011Bm", "t\u011Bmu", "t\u0159eba", "t\u0159i", "t\u0159in\xE1ct", "u", "ur\u010Dit\u011B", "u\u017E", "v", "va\u0161e", "va\u0161i", "ve", "vedle", "ve\u010Der", "vlastn\u011B", "vy", "v\xE1m", "v\xE1mi", "v\xE1s", "v\xE1\u0161", "v\xEDce", "v\u0161ak", "v\u0161echno", "v\u0161ichni", "v\u016Fbec", "v\u017Edy", "z", "za", "zat\xEDmco", "za\u010D", "zda", "zde", "ze", "zpr\xE1vy", "zp\u011Bt", "\u010Dau", "\u010Di", "\u010Dl\xE1nku", "\u010Dl\xE1nky", "\u010Dtrn\xE1ct", "\u010Dty\u0159i", "\u0161est", "\u0161estn\xE1ct", "\u017Ee"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_da.js
var require_stopwords_da = __commonJS({
  "node_modules/stopword/lib/stopwords_da.js"(exports) {
    var words = ["er", "jeg", "det", "du", "ikke", "i", "at", "en", "og", "har", "vi", "til", "p\xE5", "hvad", "med", "mig", "s\xE5", "for", "de", "dig", "der", "den", "han", "kan", "af", "vil", "var", "her", "et", "skal", "ved", "nu", "men", "om", "ja", "som", "nej", "min", "noget", "ham", "hun", "bare", "kom", "v\xE6re", "din", "hvor", "dem", "ud", "os", "hvis", "m\xE5", "se", "godt", "have", "fra", "ville", "okay", "lige", "op", "alle", "lad", "hvorfor", "sig", "hvordan", "f\xE5", "kunne", "eller", "hvem", "man", "bliver", "havde", "da", "ingen", "efter", "n\xE5r", "alt", "jo", "to", "mit", "ind", "hej", "aldrig", "lidt", "nogen", "over", "ogs\xE5", "mand", "far", "skulle", "selv", "f\xE5r", "hans", "ser", "vores", "jer", "s\xE5dan", "dit", "kun", "deres", "ned", "mine", "komme", "tage", "denne", "sige", "dette", "blive", "helt", "fordi", "end", "tag", "f\xF8r", "fik", "dine", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_de.js
var require_stopwords_de = __commonJS({
  "node_modules/stopword/lib/stopwords_de.js"(exports) {
    var words = ["a", "ab", "aber", "ach", "acht", "achte", "achten", "achter", "achtes", "ag", "alle", "allein", "allem", "allen", "aller", "allerdings", "alles", "allgemeinen", "als", "also", "am", "an", "ander", "andere", "anderem", "anderen", "anderer", "anderes", "anderm", "andern", "anderr", "anders", "au", "auch", "auf", "aus", "ausser", "ausserdem", "au\xDFer", "au\xDFerdem", "b", "bald", "bei", "beide", "beiden", "beim", "beispiel", "bekannt", "bereits", "besonders", "besser", "besten", "bin", "bis", "bisher", "bist", "c", "d", "d.h", "da", "dabei", "dadurch", "daf\xFCr", "dagegen", "daher", "dahin", "dahinter", "damals", "damit", "danach", "daneben", "dank", "dann", "daran", "darauf", "daraus", "darf", "darfst", "darin", "darum", "darunter", "dar\xFCber", "das", "dasein", "daselbst", "dass", "dasselbe", "davon", "davor", "dazu", "dazwischen", "da\xDF", "dein", "deine", "deinem", "deinen", "deiner", "deines", "dem", "dementsprechend", "demgegen\xFCber", "demgem\xE4ss", "demgem\xE4\xDF", "demselben", "demzufolge", "den", "denen", "denn", "denselben", "der", "deren", "derer", "derjenige", "derjenigen", "dermassen", "derma\xDFen", "derselbe", "derselben", "des", "deshalb", "desselben", "dessen", "deswegen", "dich", "die", "diejenige", "diejenigen", "dies", "diese", "dieselbe", "dieselben", "diesem", "diesen", "dieser", "dieses", "dir", "doch", "dort", "drei", "drin", "dritte", "dritten", "dritter", "drittes", "du", "durch", "durchaus", "durfte", "durften", "d\xFCrfen", "d\xFCrft", "e", "eben", "ebenso", "ehrlich", "ei", "ei, ", "eigen", "eigene", "eigenen", "eigener", "eigenes", "ein", "einander", "eine", "einem", "einen", "einer", "eines", "einig", "einige", "einigem", "einigen", "einiger", "einiges", "einmal", "eins", "elf", "en", "ende", "endlich", "entweder", "er", "ernst", "erst", "erste", "ersten", "erster", "erstes", "es", "etwa", "etwas", "euch", "euer", "eure", "eurem", "euren", "eurer", "eures", "f", "folgende", "fr\xFCher", "f\xFCnf", "f\xFCnfte", "f\xFCnften", "f\xFCnfter", "f\xFCnftes", "f\xFCr", "g", "gab", "ganz", "ganze", "ganzen", "ganzer", "ganzes", "gar", "gedurft", "gegen", "gegen\xFCber", "gehabt", "gehen", "geht", "gekannt", "gekonnt", "gemacht", "gemocht", "gemusst", "genug", "gerade", "gern", "gesagt", "geschweige", "gewesen", "gewollt", "geworden", "gibt", "ging", "gleich", "gott", "gross", "grosse", "grossen", "grosser", "grosses", "gro\xDF", "gro\xDFe", "gro\xDFen", "gro\xDFer", "gro\xDFes", "gut", "gute", "guter", "gutes", "h", "hab", "habe", "haben", "habt", "hast", "hat", "hatte", "hatten", "hattest", "hattet", "heisst", "her", "heute", "hier", "hin", "hinter", "hoch", "h\xE4tte", "h\xE4tten", "i", "ich", "ihm", "ihn", "ihnen", "ihr", "ihre", "ihrem", "ihren", "ihrer", "ihres", "im", "immer", "in", "indem", "infolgedessen", "ins", "irgend", "ist", "j", "ja", "jahr", "jahre", "jahren", "je", "jede", "jedem", "jeden", "jeder", "jedermann", "jedermanns", "jedes", "jedoch", "jemand", "jemandem", "jemanden", "jene", "jenem", "jenen", "jener", "jenes", "jetzt", "k", "kam", "kann", "kannst", "kaum", "kein", "keine", "keinem", "keinen", "keiner", "keines", "kleine", "kleinen", "kleiner", "kleines", "kommen", "kommt", "konnte", "konnten", "kurz", "k\xF6nnen", "k\xF6nnt", "k\xF6nnte", "l", "lang", "lange", "leicht", "leide", "lieber", "los", "m", "machen", "macht", "machte", "mag", "magst", "mahn", "mal", "man", "manche", "manchem", "manchen", "mancher", "manches", "mann", "mehr", "mein", "meine", "meinem", "meinen", "meiner", "meines", "mensch", "menschen", "mich", "mir", "mit", "mittel", "mochte", "mochten", "morgen", "muss", "musst", "musste", "mussten", "mu\xDF", "mu\xDFt", "m\xF6chte", "m\xF6gen", "m\xF6glich", "m\xF6gt", "m\xFCssen", "m\xFCsst", "m\xFC\xDFt", "n", "na", "nach", "nachdem", "nahm", "nat\xFCrlich", "neben", "nein", "neue", "neuen", "neun", "neunte", "neunten", "neunter", "neuntes", "nicht", "nichts", "nie", "niemand", "niemandem", "niemanden", "noch", "nun", "nur", "o", "ob", "oben", "oder", "offen", "oft", "ohne", "ordnung", "p", "q", "r", "recht", "rechte", "rechten", "rechter", "rechtes", "richtig", "rund", "s", "sa", "sache", "sagt", "sagte", "sah", "satt", "schlecht", "schluss", "schon", "sechs", "sechste", "sechsten", "sechster", "sechstes", "sehr", "sei", "seid", "seien", "sein", "seine", "seinem", "seinen", "seiner", "seines", "seit", "seitdem", "selbst", "sich", "sie", "sieben", "siebente", "siebenten", "siebenter", "siebentes", "sind", "so", "solang", "solche", "solchem", "solchen", "solcher", "solches", "soll", "sollen", "sollst", "sollt", "sollte", "sollten", "sondern", "sonst", "soweit", "sowie", "sp\xE4ter", "startseite", "statt", "steht", "suche", "t", "tag", "tage", "tagen", "tat", "teil", "tel", "tritt", "trotzdem", "tun", "u", "uhr", "um", "und", "und?", "uns", "unse", "unsem", "unsen", "unser", "unsere", "unserer", "unses", "unter", "v", "vergangenen", "viel", "viele", "vielem", "vielen", "vielleicht", "vier", "vierte", "vierten", "vierter", "viertes", "vom", "von", "vor", "w", "wahr?", "wann", "war", "waren", "warst", "wart", "warum", "was", "weg", "wegen", "weil", "weit", "weiter", "weitere", "weiteren", "weiteres", "welche", "welchem", "welchen", "welcher", "welches", "wem", "wen", "wenig", "wenige", "weniger", "weniges", "wenigstens", "wenn", "wer", "werde", "werden", "werdet", "weshalb", "wessen", "wie", "wieder", "wieso", "will", "willst", "wir", "wird", "wirklich", "wirst", "wissen", "wo", "woher", "wohin", "wohl", "wollen", "wollt", "wollte", "wollten", "worden", "wurde", "wurden", "w\xE4hrend", "w\xE4hrenddem", "w\xE4hrenddessen", "w\xE4re", "w\xFCrde", "w\xFCrden", "x", "y", "z", "z.b", "zehn", "zehnte", "zehnten", "zehnter", "zehntes", "zeit", "zu", "zuerst", "zugleich", "zum", "zun\xE4chst", "zur", "zur\xFCck", "zusammen", "zwanzig", "zwar", "zwei", "zweite", "zweiten", "zweiter", "zweites", "zwischen", "zw\xF6lf", "\xFCber", "\xFCberhaupt", "\xFCbrigens"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_el.js
var require_stopwords_el = __commonJS({
  "node_modules/stopword/lib/stopwords_el.js"(exports) {
    var words = ["\u03B1\u03BB\u03BB\u03B1", "\u03B1\u03BD", "\u03B1\u03BD\u03C4\u03B9", "\u03B1\u03C0\u03BF", "\u03B1\u03C5\u03C4\u03B1", "\u03B1\u03C5\u03C4\u03B5\u03C3", "\u03B1\u03C5\u03C4\u03B7", "\u03B1\u03C5\u03C4\u03BF", "\u03B1\u03C5\u03C4\u03BF\u03B9", "\u03B1\u03C5\u03C4\u03BF\u03C3", "\u03B1\u03C5\u03C4\u03BF\u03C5\u03C3", "\u03B1\u03C5\u03C4\u03C9\u03BD", "\u03B3\u03B9\u03B1", "\u03B4\u03B5", "\u03B4\u03B5\u03BD", "\u03B5\u03B1\u03BD", "\u03B5\u03B9\u03BC\u03B1\u03B9", "\u03B5\u03B9\u03BC\u03B1\u03C3\u03C4\u03B5", "\u03B5\u03B9\u03BD\u03B1\u03B9", "\u03B5\u03B9\u03C3\u03B1\u03B9", "\u03B5\u03B9\u03C3\u03C4\u03B5", "\u03B5\u03BA\u03B5\u03B9\u03BD\u03B1", "\u03B5\u03BA\u03B5\u03B9\u03BD\u03B5\u03C3", "\u03B5\u03BA\u03B5\u03B9\u03BD\u03B7", "\u03B5\u03BA\u03B5\u03B9\u03BD\u03BF", "\u03B5\u03BA\u03B5\u03B9\u03BD\u03BF\u03B9", "\u03B5\u03BA\u03B5\u03B9\u03BD\u03BF\u03C3", "\u03B5\u03BA\u03B5\u03B9\u03BD\u03BF\u03C5\u03C3", "\u03B5\u03BA\u03B5\u03B9\u03BD\u03C9\u03BD", "\u03B5\u03BD\u03C9", "\u03B5\u03C0\u03B9", "\u03B7", "\u03B8\u03B1", "\u03B9\u03C3\u03C9\u03C3", "\u03BA", "\u03BA\u03B1\u03B9", "\u03BA\u03B1\u03C4\u03B1", "\u03BA\u03B9", "\u03BC\u03B1", "\u03BC\u03B5", "\u03BC\u03B5\u03C4\u03B1", "\u03BC\u03B7", "\u03BC\u03B7\u03BD", "\u03BD\u03B1", "\u03BF", "\u03BF\u03B9", "\u03BF\u03BC\u03C9\u03C3", "\u03BF\u03C0\u03C9\u03C3", "\u03BF\u03C3\u03BF", "\u03BF\u03C4\u03B9", "\u03C0\u03B1\u03C1\u03B1", "\u03C0\u03BF\u03B9\u03B1", "\u03C0\u03BF\u03B9\u03B5\u03C3", "\u03C0\u03BF\u03B9\u03BF", "\u03C0\u03BF\u03B9\u03BF\u03B9", "\u03C0\u03BF\u03B9\u03BF\u03C3", "\u03C0\u03BF\u03B9\u03BF\u03C5\u03C3", "\u03C0\u03BF\u03B9\u03C9\u03BD", "\u03C0\u03BF\u03C5", "\u03C0\u03C1\u03BF\u03C3", "\u03C0\u03C9\u03C3", "\u03C3\u03B5", "\u03C3\u03C4\u03B7", "\u03C3\u03C4\u03B7\u03BD", "\u03C3\u03C4\u03BF", "\u03C3\u03C4\u03BF\u03BD", "\u03C4\u03B1", "\u03C4\u03B7\u03BD", "\u03C4\u03B7\u03C3", "\u03C4\u03BF", "\u03C4\u03BF\u03BD", "\u03C4\u03BF\u03C4\u03B5", "\u03C4\u03BF\u03C5", "\u03C4\u03C9\u03BD", "\u03C9\u03C3"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_eo.js
var require_stopwords_eo = __commonJS({
  "node_modules/stopword/lib/stopwords_eo.js"(exports) {
    var words = ["adia\u016D", "ajn", "al", "ankora\u016D", "anta\u016D", "a\u016D", "bonan", "bonvole", "bonvolu", "bv", "ci", "cia", "cian", "cin", "d-ro", "da", "de", "dek", "deka", "do", "doktor'", "doktoro", "du", "dua", "dum", "eble", "ekz", "ekzemple", "en", "estas", "estis", "estos", "estu", "estus", "e\u0109", "f-no", "feli\u0109an", "for", "fra\u016Dlino", "ha", "havas", "havis", "havos", "havu", "havus", "he", "ho", "hu", "ili", "ilia", "ilian", "ilin", "inter", "io", "ion", "iu", "iujn", "iun", "ja", "jam", "je", "jes", "k", "kaj", "ke", "kio", "kion", "kiu", "kiujn", "kiun", "kvankam", "kvar", "kvara", "kvaza\u016D", "kvin", "kvina", "la", "li", "lia", "lian", "lin", "malanta\u016D", "male", "malgra\u016D", "mem", "mi", "mia", "mian", "min", "minus", "na\u016D", "na\u016Da", "ne", "nek", "nenio", "nenion", "neniu", "neniun", "nepre", "ni", "nia", "nian", "nin", "nu", "nun", "nur", "ok", "oka", "oni", "onia", "onian", "onin", "plej", "pli", "plu", "plus", "por", "post", "preter", "s-no", "s-ro", "se", "sed", "sep", "sepa", "ses", "sesa", "si", "sia", "sian", "sin", "sinjor'", "sinjorino", "sinjoro", "sub", "super", "supren", "sur", "tamen", "tio", "tion", "tiu", "tiujn", "tiun", "tra", "tri", "tria", "tuj", "tute", "unu", "unua", "ve", "ver\u015Dajne", "vi", "via", "vian", "vin", "\u0109i", "\u0109io", "\u0109ion", "\u0109iu", "\u0109iujn", "\u0109iun", "\u0109u", "\u011Di", "\u011Dia", "\u011Dian", "\u011Din", "\u011Dis", "\u0135us", "\u015Di", "\u015Dia", "\u015Din"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_es.js
var require_stopwords_es = __commonJS({
  "node_modules/stopword/lib/stopwords_es.js"(exports) {
    var words = ["a", "un", "el", "ella", "y", "sobre", "de", "la", "que", "en", "los", "del", "se", "las", "por", "un", "para", "con", "no", "una", "su", "al", "lo", "como", "m\xE1s", "pero", "sus", "le", "ya", "o", "porque", "cuando", "muy", "sin", "sobre", "tambi\xE9n", "me", "hasta", "donde", "quien", "desde", "nos", "durante", "uno", "ni", "contra", "ese", "eso", "m\xED", "qu\xE9", "otro", "\xE9l", "cual", "poco", "mi", "t\xFA", "te", "ti", "s\xED", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_et.js
var require_stopwords_et = __commonJS({
  "node_modules/stopword/lib/stopwords_et.js"(exports) {
    var words = ["aga", "ei", "et", "ja", "jah", "kas", "kui", "k\xF5ik", "ma", "me", "mida", "midagi", "mind", "minu", "mis", "mu", "mul", "mulle", "nad", "nii", "oled", "olen", "oli", "oma", "on", "pole", "sa", "seda", "see", "selle", "siin", "siis", "ta", "te", "\xE4ra"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_eu.js
var require_stopwords_eu = __commonJS({
  "node_modules/stopword/lib/stopwords_eu.js"(exports) {
    var words = ["al", "anitz", "arabera", "asko", "baina", "bat", "batean", "batek", "bati", "batzuei", "batzuek", "batzuetan", "batzuk", "bera", "beraiek", "berau", "berauek", "bere", "berori", "beroriek", "beste", "bezala", "da", "dago", "dira", "ditu", "du", "dute", "edo", "egin", "ere", "eta", "eurak", "ez", "gainera", "gu", "gutxi", "guzti", "haiei", "haiek", "haietan", "hainbeste", "hala", "han", "handik", "hango", "hara", "hari", "hark", "hartan", "hau", "hauei", "hauek", "hauetan", "hemen", "hemendik", "hemengo", "hi", "hona", "honek", "honela", "honetan", "honi", "hor", "hori", "horiei", "horiek", "horietan", "horko", "horra", "horrek", "horrela", "horretan", "horri", "hortik", "hura", "izan", "ni", "noiz", "nola", "non", "nondik", "nongo", "nor", "nora", "ze", "zein", "zen", "zenbait", "zenbat", "zer", "zergatik", "ziren", "zituen", "zu", "zuek", "zuen", "zuten"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_fa.js
var require_stopwords_fa = __commonJS({
  "node_modules/stopword/lib/stopwords_fa.js"(exports) {
    var words = ["\u0627\u0632", "\u0628\u0627", "\u0628\u0647", "\u0628\u0631\u0627\u06CC", "\u0648", "\u0628\u0627\u06CC\u062F", "\u0634\u0627\u06CC\u062F", "\u0627\u06A9\u0646\u0648\u0646", "\u0627\u06AF\u0631", "\u0627\u06AF\u0631\u0686\u0647", "\u0627\u0644\u0627", "\u0627\u0645\u0627", "\u0627\u0646\u062F\u0631", "\u0627\u06CC\u0646\u06A9\u0647", "\u0628\u0627\u0631\u06CC", "\u0628\u0627\u0644\u0639\u06A9\u0633", "\u0628\u062F\u0648\u0646", "\u0628\u0631", "\u0628\u0644\u06A9\u0647", "\u0628\u0646\u0627\u0628\u0631\u0627\u06CC\u0646", "\u0628\u06CC", "\u067E\u0633", "\u062A\u0627", "\u062C\u0632", "\u0686\u0646\u0627\u0646\u0686\u0647", "\u0686\u0647", "\u0686\u0648\u0646", "\u062F\u0631", "\u0631\u0627", "\u0631\u0648\u06CC", "\u0632\u06CC\u0631\u0627", "\u0633\u067E\u0633", "\u063A\u06CC\u0631", "\u06A9\u0647", "\u0644\u06CC\u06A9\u0646", "\u0645\u0627\u0646\u0646\u062F", "\u0645\u062B\u0644", "\u0645\u06AF\u0631", "\u0646\u0647", "\u0646\u06CC\u0632", "\u0647\u0631\u0686\u0646\u062F", "\u0647\u0645", "\u0647\u0645\u0627\u0646", "\u0648\u0627\u0646\u06AF\u0647\u06CC", "\u0648\u0644\u06CC", "\u0648\u0644\u0648", "\u0647\u0645\u0627\u0646\u0646\u062F", "\u0647\u0645\u0686\u0648", "\u061F", "!", "\u066A", ".", "\u060C", "\u061B", ":", ";", ",", "\xD7", "\xF7", "\xBB", "\xAB", "\u06F1", "\u06F2", "\u06F3", "\u06F4", "\u06F5", "\u06F6", "\u06F7", "\u06F8", "\u06F9", "\u06F0"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_fr.js
var require_stopwords_fr = __commonJS({
  "node_modules/stopword/lib/stopwords_fr.js"(exports) {
    var words = ["\xEAtre", "avoir", "faire", "a", "au", "aux", "avec", "ce", "ces", "dans", "de", "des", "du", "elle", "en", "et", "eux", "il", "je", "la", "le", "leur", "lui", "ma", "mais", "me", "m\xEAme", "mes", "moi", "mon", "ne", "nos", "notre", "nous", "on", "ou", "o\xF9", "par", "pas", "pour", "qu", "que", "qui", "sa", "se", "ses", "son", "sur", "ta", "te", "tes", "toi", "ton", "tu", "un", "une", "vos", "votre", "vous", "c", "d", "j", "l", "\xE0", "m", "n", "s", "t", "y", "\xE9t\xE9", "\xE9t\xE9e", "\xE9t\xE9es", "\xE9t\xE9s", "\xE9tant", "suis", "es", "est", "sommes", "\xEAtes", "sont", "serai", "seras", "sera", "serons", "serez", "seront", "serais", "serait", "serions", "seriez", "seraient", "\xE9tais", "\xE9tait", "\xE9tions", "\xE9tiez", "\xE9taient", "fus", "fut", "f\xFBmes", "f\xFBtes", "furent", "sois", "soit", "soyons", "soyez", "soient", "fusse", "fusses", "f\xFBt", "fussions", "fussiez", "fussent", "ayant", "eu", "eue", "eues", "eus", "ai", "as", "avons", "avez", "ont", "aurai", "auras", "aura", "aurons", "aurez", "auront", "aurais", "aurait", "aurions", "auriez", "auraient", "avais", "avait", "avions", "aviez", "avaient", "eut", "e\xFBmes", "e\xFBtes", "eurent", "aie", "aies", "ait", "ayons", "ayez", "aient", "eusse", "eusses", "e\xFBt", "eussions", "eussiez", "eussent", "ceci", "cela", "cet", "cette", "ici", "ils", "les", "leurs", "quel", "quels", "quelle", "quelles", "sans", "soi"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ga.js
var require_stopwords_ga = __commonJS({
  "node_modules/stopword/lib/stopwords_ga.js"(exports) {
    var words = ["a", "ach", "ag", "agus", "an", "aon", "ar", "arna", "as", "b'", "ba", "beirt", "bh\xFAr", "caoga", "ceathair", "ceathrar", "chomh", "cht\xF3", "chuig", "chun", "cois", "c\xE9ad", "c\xFAig", "c\xFAigear", "d'", "daichead", "dar", "de", "deich", "deichni\xFAr", "den", "dh\xE1", "do", "don", "dt\xED", "d\xE1", "d\xE1r", "d\xF3", "faoi", "faoin", "faoina", "faoin\xE1r", "fara", "fiche", "gach", "gan", "go", "gur", "haon", "hocht", "i", "iad", "idir", "in", "ina", "ins", "in\xE1r", "is", "le", "leis", "lena", "len\xE1r", "m'", "mar", "mo", "m\xE9", "na", "nach", "naoi", "naon\xFAr", "n\xE1", "n\xED", "n\xEDor", "n\xF3", "n\xF3cha", "ocht", "ochtar", "os", "roimh", "sa", "seacht", "seachtar", "seacht\xF3", "seasca", "seisear", "siad", "sibh", "sinn", "sna", "s\xE9", "s\xED", "tar", "thar", "th\xFA", "tri\xFAr", "tr\xED", "tr\xEDna", "tr\xEDn\xE1r", "tr\xEDocha", "t\xFA", "um", "\xE1r", "\xE9", "\xE9is", "\xED", "\xF3", "\xF3n", "\xF3na", "\xF3n\xE1r"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_gl.js
var require_stopwords_gl = __commonJS({
  "node_modules/stopword/lib/stopwords_gl.js"(exports) {
    var words = ["a", "al\xED", "ao", "aos", "aquel", "aquela", "aquelas", "aqueles", "aquilo", "aqu\xED", "as", "as\xED", "a\xEDnda", "ben", "cando", "che", "co", "coa", "coas", "comigo", "con", "connosco", "contigo", "convosco", "cos", "cun", "cunha", "cunhas", "cuns", "da", "dalgunha", "dalgunhas", "dalg\xFAn", "dalg\xFAns", "das", "de", "del", "dela", "delas", "deles", "desde", "deste", "do", "dos", "dun", "dunha", "dunhas", "duns", "e", "el", "ela", "elas", "eles", "en", "era", "eran", "esa", "esas", "ese", "eses", "esta", "estaba", "estar", "este", "estes", "estiven", "estou", "est\xE1", "est\xE1n", "eu", "facer", "foi", "foron", "fun", "hab\xEDa", "hai", "iso", "isto", "la", "las", "lle", "lles", "lo", "los", "mais", "me", "meu", "meus", "min", "mi\xF1a", "mi\xF1as", "moi", "na", "nas", "neste", "nin", "no", "non", "nos", "nosa", "nosas", "noso", "nosos", "nun", "nunha", "nunhas", "nuns", "n\xF3s", "o", "os", "ou", "para", "pero", "pode", "pois", "pola", "polas", "polo", "polos", "por", "que", "se", "sen\xF3n", "ser", "seu", "seus", "sexa", "sido", "sobre", "s\xFAa", "s\xFAas", "tam\xE9n", "tan", "te", "ten", "ter", "teu", "teus", "te\xF1en", "te\xF1o", "ti", "tido", "tiven", "ti\xF1a", "t\xFAa", "t\xFAas", "un", "unha", "unhas", "uns", "vos", "vosa", "vosas", "voso", "vosos", "v\xF3s", "\xE1", "\xE9", "\xF3", "\xF3s"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_fi.js
var require_stopwords_fi = __commonJS({
  "node_modules/stopword/lib/stopwords_fi.js"(exports) {
    var words = ["0", "ja", "on", "1", "oli", "h\xE4n", "vuonna", "2", "my\xF6s", "joka", "3", "se", "sek\xE4", "sen", "mutta", "4", "ei", "ovat", "h\xE4nen", "n", "kanssa", "vuoden", "j\xE4lkeen", "ett\xE4", "5", "s", "tai", "jonka", "jossa", "6", "mukaan", "kun", "muun", "muassa", "h\xE4net", "olivat", "kuitenkin", "noin", "vuosina", "7", "aikana", "lis\xE4ksi", "kaksi", "kuin", "ollut", "the", "my\xF6hemmin", "8", "eli", "10", "vain", "teki", "mm", "jotka", "ennen", "ensimm\xE4inen", "a", "9", "jo", "kuten", "yksi", "ensimm\xE4isen", "vastaan", "t\xE4m\xE4n", "vuodesta", "sit\xE4", "000", "voi", "luvun", "luvulla", "of", "ole", "kauden", "osa", "esimerkiksi", "jolloin", "yli", "de", "kaudella", "eri", "sill\xE4", "kolme", "he", "vuotta"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ha.js
var require_stopwords_ha = __commonJS({
  "node_modules/stopword/lib/stopwords_ha.js"(exports) {
    var words = ["ta", "da", "ya", "sai", "ba", "yi", "na", "kuma", "ma", "ji", "cikin", "in", "ni", "wata", "wani", "ce", "tana", "don", "za", "sun", "amma", "ga", "ina", "ne", "tselane", "mai", "suka", "wannan", "a", "ko", "lokacin", "su", "take", "kaka", "shi", "yake", "yana", "mulongo", "mata", "ka", "ban", "ita", "tafi", "shanshani", "kai", "da\u0257i", "mi", "\u0199ato", "fara", "rana"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_he.js
var require_stopwords_he = __commonJS({
  "node_modules/stopword/lib/stopwords_he.js"(exports) {
    var words = ["\u05D0\u05D1\u05DC", "\u05D0\u05D5", "\u05D0\u05D5\u05DC\u05D9", "\u05D0\u05D5\u05EA\u05D4", "\u05D0\u05D5\u05EA\u05D5", "\u05D0\u05D5\u05EA\u05D9", "\u05D0\u05D5\u05EA\u05DA", "\u05D0\u05D5\u05EA\u05DD", "\u05D0\u05D5\u05EA\u05DF", "\u05D0\u05D5\u05EA\u05E0\u05D5", "\u05D0\u05D6", "\u05D0\u05D7\u05E8", "\u05D0\u05D7\u05E8\u05D5\u05EA", "\u05D0\u05D7\u05E8\u05D9", "\u05D0\u05D7\u05E8\u05D9\u05DB\u05DF", "\u05D0\u05D7\u05E8\u05D9\u05DD", "\u05D0\u05D7\u05E8\u05EA", "\u05D0\u05D9", "\u05D0\u05D9\u05D6\u05D4", "\u05D0\u05D9\u05DA", "\u05D0\u05D9\u05DF", "\u05D0\u05D9\u05E4\u05D4", "\u05D0\u05D9\u05EA\u05D4", "\u05D0\u05D9\u05EA\u05D5", "\u05D0\u05D9\u05EA\u05D9", "\u05D0\u05D9\u05EA\u05DA", "\u05D0\u05D9\u05EA\u05DB\u05DD", "\u05D0\u05D9\u05EA\u05DB\u05DF", "\u05D0\u05D9\u05EA\u05DD", "\u05D0\u05D9\u05EA\u05DF", "\u05D0\u05D9\u05EA\u05E0\u05D5", "\u05D0\u05DA", "\u05D0\u05DC", "\u05D0\u05DC\u05D4", "\u05D0\u05DC\u05D5", "\u05D0\u05DD", "\u05D0\u05E0\u05D7\u05E0\u05D5", "\u05D0\u05E0\u05D9", "\u05D0\u05E1", "\u05D0\u05E3", "\u05D0\u05E6\u05DC", "\u05D0\u05E9\u05E8", "\u05D0\u05EA", "\u05D0\u05EA\u05D4", "\u05D0\u05EA\u05DB\u05DD", "\u05D0\u05EA\u05DB\u05DF", "\u05D0\u05EA\u05DD", "\u05D0\u05EA\u05DF", "\u05D1\u05D0\u05D9\u05D6\u05D5\u05DE\u05D9\u05D3\u05D4", "\u05D1\u05D0\u05DE\u05E6\u05E2", "\u05D1\u05D0\u05DE\u05E6\u05E2\u05D5\u05EA", "\u05D1\u05D2\u05DC\u05DC", "\u05D1\u05D9\u05DF", "\u05D1\u05DC\u05D9", "\u05D1\u05DE\u05D9\u05D3\u05D4", "\u05D1\u05DE\u05E7\u05D5\u05DD\u05E9\u05D1\u05D5", "\u05D1\u05E8\u05DD", "\u05D1\u05E9\u05D1\u05D9\u05DC", "\u05D1\u05E9\u05E2\u05D4\u05E9", "\u05D1\u05EA\u05D5\u05DA", "\u05D2\u05DD", "\u05D3\u05E8\u05DA", "\u05D4\u05D5\u05D0", "\u05D4\u05D9\u05D0", "\u05D4\u05D9\u05D4", "\u05D4\u05D9\u05DB\u05DF", "\u05D4\u05D9\u05EA\u05D4", "\u05D4\u05D9\u05EA\u05D9", "\u05D4\u05DD", "\u05D4\u05DF", "\u05D4\u05E0\u05D4", "\u05D4\u05E1\u05D9\u05D1\u05D4\u05E9\u05D1\u05D2\u05DC\u05DC\u05D4", "\u05D4\u05E8\u05D9", "\u05D5\u05D0\u05D9\u05DC\u05D5", "\u05D5\u05D0\u05EA", "\u05D6\u05D0\u05EA", "\u05D6\u05D4", "\u05D6\u05D5\u05EA", "\u05D9\u05D4\u05D9\u05D4", "\u05D9\u05D5\u05DB\u05DC", "\u05D9\u05D5\u05DB\u05DC\u05D5", "\u05D9\u05D5\u05EA\u05E8\u05DE\u05D3\u05D9", "\u05D9\u05DB\u05D5\u05DC", "\u05D9\u05DB\u05D5\u05DC\u05D4", "\u05D9\u05DB\u05D5\u05DC\u05D5\u05EA", "\u05D9\u05DB\u05D5\u05DC\u05D9\u05DD", "\u05D9\u05DB\u05DC", "\u05D9\u05DB\u05DC\u05D4", "\u05D9\u05DB\u05DC\u05D5", "\u05D9\u05E9", "\u05DB\u05D0\u05DF", "\u05DB\u05D0\u05E9\u05E8", "\u05DB\u05D5\u05DC\u05DD", "\u05DB\u05D5\u05DC\u05DF", "\u05DB\u05D6\u05D4", "\u05DB\u05D9", "\u05DB\u05D9\u05E6\u05D3", "\u05DB\u05DA", "\u05DB\u05DB\u05D4", "\u05DB\u05DC", "\u05DB\u05DC\u05DC", "\u05DB\u05DE\u05D5", "\u05DB\u05DF", "\u05DB\u05E4\u05D9", "\u05DB\u05E9", "\u05DC\u05D0", "\u05DC\u05D0\u05D5", "\u05DC\u05D0\u05D9\u05D6\u05D5\u05EA\u05DB\u05DC\u05D9\u05EA", "\u05DC\u05D0\u05DF", "\u05DC\u05D1\u05D9\u05DF", "\u05DC\u05D4", "\u05DC\u05D4\u05D9\u05D5\u05EA", "\u05DC\u05D4\u05DD", "\u05DC\u05D4\u05DF", "\u05DC\u05D5", "\u05DC\u05D9", "\u05DC\u05DB\u05DD", "\u05DC\u05DB\u05DF", "\u05DC\u05DE\u05D4", "\u05DC\u05DE\u05D8\u05D4", "\u05DC\u05DE\u05E2\u05DC\u05D4", "\u05DC\u05DE\u05E7\u05D5\u05DD\u05E9\u05D1\u05D5", "\u05DC\u05DE\u05E8\u05D5\u05EA", "\u05DC\u05E0\u05D5", "\u05DC\u05E2\u05D1\u05E8", "\u05DC\u05E2\u05D9\u05DB\u05DF", "\u05DC\u05E4\u05D9\u05DB\u05DA", "\u05DC\u05E4\u05E0\u05D9", "\u05DE\u05D0\u05D3", "\u05DE\u05D0\u05D7\u05D5\u05E8\u05D9", "\u05DE\u05D0\u05D9\u05D6\u05D5\u05E1\u05D9\u05D1\u05D4", "\u05DE\u05D0\u05D9\u05DF", "\u05DE\u05D0\u05D9\u05E4\u05D4", "\u05DE\u05D1\u05DC\u05D9", "\u05DE\u05D1\u05E2\u05D3", "\u05DE\u05D3\u05D5\u05E2", "\u05DE\u05D4", "\u05DE\u05D4\u05D9\u05DB\u05DF", "\u05DE\u05D5\u05DC", "\u05DE\u05D7\u05D5\u05E5", "\u05DE\u05D9", "\u05DE\u05DB\u05D0\u05DF", "\u05DE\u05DB\u05D9\u05D5\u05D5\u05DF", "\u05DE\u05DC\u05D1\u05D3", "\u05DE\u05DF", "\u05DE\u05E0\u05D9\u05DF", "\u05DE\u05E1\u05D5\u05D2\u05DC", "\u05DE\u05E2\u05D8", "\u05DE\u05E2\u05D8\u05D9\u05DD", "\u05DE\u05E2\u05DC", "\u05DE\u05E6\u05D3", "\u05DE\u05E7\u05D5\u05DD\u05D1\u05D5", "\u05DE\u05EA\u05D7\u05EA", "\u05DE\u05EA\u05D9", "\u05E0\u05D2\u05D3", "\u05E0\u05D2\u05E8", "\u05E0\u05D5", "\u05E2\u05D3", "\u05E2\u05D6", "\u05E2\u05DC", "\u05E2\u05DC\u05D9", "\u05E2\u05DC\u05D9\u05D4", "\u05E2\u05DC\u05D9\u05D4\u05DD", "\u05E2\u05DC\u05D9\u05D4\u05DF", "\u05E2\u05DC\u05D9\u05D5", "\u05E2\u05DC\u05D9\u05DA", "\u05E2\u05DC\u05D9\u05DB\u05DD", "\u05E2\u05DC\u05D9\u05E0\u05D5", "\u05E2\u05DD", "\u05E2\u05E6\u05DE\u05D4", "\u05E2\u05E6\u05DE\u05D4\u05DD", "\u05E2\u05E6\u05DE\u05D4\u05DF", "\u05E2\u05E6\u05DE\u05D5", "\u05E2\u05E6\u05DE\u05D9", "\u05E2\u05E6\u05DE\u05DD", "\u05E2\u05E6\u05DE\u05DF", "\u05E2\u05E6\u05DE\u05E0\u05D5", "\u05E4\u05D4", "\u05E8\u05E7", "\u05E9\u05D5\u05D1", "\u05E9\u05DC", "\u05E9\u05DC\u05D4", "\u05E9\u05DC\u05D4\u05DD", "\u05E9\u05DC\u05D4\u05DF", "\u05E9\u05DC\u05D5", "\u05E9\u05DC\u05D9", "\u05E9\u05DC\u05DA", "\u05E9\u05DC\u05DB\u05D4", "\u05E9\u05DC\u05DB\u05DD", "\u05E9\u05DC\u05DB\u05DF", "\u05E9\u05DC\u05E0\u05D5", "\u05E9\u05DD", "\u05EA\u05D4\u05D9\u05D4", "\u05EA\u05D7\u05EA"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_hi.js
var require_stopwords_hi = __commonJS({
  "node_modules/stopword/lib/stopwords_hi.js"(exports) {
    var words = ["\u0905\u0902\u0926\u0930", "\u0905\u0924", "\u0905\u0926\u093F", "\u0905\u092A", "\u0905\u092A\u0928\u093E", "\u0905\u092A\u0928\u093F", "\u0905\u092A\u0928\u0940", "\u0905\u092A\u0928\u0947", "\u0905\u092D\u093F", "\u0905\u092D\u0940", "\u0906\u0926\u093F", "\u0906\u092A", "\u0907\u0902\u0939\u093F\u0902", "\u0907\u0902\u0939\u0947\u0902", "\u0907\u0902\u0939\u094B\u0902", "\u0907\u0924\u092F\u093E\u0926\u093F", "\u0907\u0924\u094D\u092F\u093E\u0926\u093F", "\u0907\u0928", "\u0907\u0928\u0915\u093E", "\u0907\u0928\u094D\u0939\u0940\u0902", "\u0907\u0928\u094D\u0939\u0947\u0902", "\u0907\u0928\u094D\u0939\u094B\u0902", "\u0907\u0938", "\u0907\u0938\u0915\u093E", "\u0907\u0938\u0915\u093F", "\u0907\u0938\u0915\u0940", "\u0907\u0938\u0915\u0947", "\u0907\u0938\u092E\u0947\u0902", "\u0907\u0938\u093F", "\u0907\u0938\u0940", "\u0907\u0938\u0947", "\u0909\u0902\u0939\u093F\u0902", "\u0909\u0902\u0939\u0947\u0902", "\u0909\u0902\u0939\u094B\u0902", "\u0909\u0928", "\u0909\u0928\u0915\u093E", "\u0909\u0928\u0915\u093F", "\u0909\u0928\u0915\u0940", "\u0909\u0928\u0915\u0947", "\u0909\u0928\u0915\u094B", "\u0909\u0928\u094D\u0939\u0940\u0902", "\u0909\u0928\u094D\u0939\u0947\u0902", "\u0909\u0928\u094D\u0939\u094B\u0902", "\u0909\u0938", "\u0909\u0938\u0915\u0947", "\u0909\u0938\u093F", "\u0909\u0938\u0940", "\u0909\u0938\u0947", "\u090F\u0915", "\u090F\u0935\u0902", "\u090F\u0938", "\u090F\u0938\u0947", "\u0910\u0938\u0947", "\u0913\u0930", "\u0914\u0930", "\u0915\u0907", "\u0915\u0908", "\u0915\u0930", "\u0915\u0930\u0924\u093E", "\u0915\u0930\u0924\u0947", "\u0915\u0930\u0928\u093E", "\u0915\u0930\u0928\u0947", "\u0915\u0930\u0947\u0902", "\u0915\u0939\u0924\u0947", "\u0915\u0939\u093E", "\u0915\u093E", "\u0915\u093E\u092B\u093F", "\u0915\u093E\u092B\u093C\u0940", "\u0915\u093F", "\u0915\u093F\u0902\u0939\u0947\u0902", "\u0915\u093F\u0902\u0939\u094B\u0902", "\u0915\u093F\u0924\u0928\u093E", "\u0915\u093F\u0928\u094D\u0939\u0947\u0902", "\u0915\u093F\u0928\u094D\u0939\u094B\u0902", "\u0915\u093F\u092F\u093E", "\u0915\u093F\u0930", "\u0915\u093F\u0938", "\u0915\u093F\u0938\u093F", "\u0915\u093F\u0938\u0940", "\u0915\u093F\u0938\u0947", "\u0915\u0940", "\u0915\u0941\u091B", "\u0915\u0941\u0932", "\u0915\u0947", "\u0915\u094B", "\u0915\u094B\u0907", "\u0915\u094B\u0908", "\u0915\u094B\u0928", "\u0915\u094B\u0928\u0938\u093E", "\u0915\u094C\u0928", "\u0915\u094C\u0928\u0938\u093E", "\u0917\u092F\u093E", "\u0918\u0930", "\u091C\u092C", "\u091C\u0939\u093E\u0901", "\u091C\u0939\u093E\u0902", "\u091C\u093E", "\u091C\u093F\u0902\u0939\u0947\u0902", "\u091C\u093F\u0902\u0939\u094B\u0902", "\u091C\u093F\u0924\u0928\u093E", "\u091C\u093F\u0927\u0930", "\u091C\u093F\u0928", "\u091C\u093F\u0928\u094D\u0939\u0947\u0902", "\u091C\u093F\u0928\u094D\u0939\u094B\u0902", "\u091C\u093F\u0938", "\u091C\u093F\u0938\u0947", "\u091C\u0940\u0927\u0930", "\u091C\u0947\u0938\u093E", "\u091C\u0947\u0938\u0947", "\u091C\u0948\u0938\u093E", "\u091C\u0948\u0938\u0947", "\u091C\u094B", "\u0924\u0915", "\u0924\u092C", "\u0924\u0930\u0939", "\u0924\u093F\u0902\u0939\u0947\u0902", "\u0924\u093F\u0902\u0939\u094B\u0902", "\u0924\u093F\u0928", "\u0924\u093F\u0928\u094D\u0939\u0947\u0902", "\u0924\u093F\u0928\u094D\u0939\u094B\u0902", "\u0924\u093F\u0938", "\u0924\u093F\u0938\u0947", "\u0924\u094B", "\u0925\u093E", "\u0925\u093F", "\u0925\u0940", "\u0925\u0947", "\u0926\u092C\u093E\u0930\u093E", "\u0926\u0935\u093E\u0930\u093E", "\u0926\u093F\u092F\u093E", "\u0926\u0941\u0938\u0930\u093E", "\u0926\u0941\u0938\u0930\u0947", "\u0926\u0942\u0938\u0930\u0947", "\u0926\u094B", "\u0926\u094D\u0935\u093E\u0930\u093E", "\u0928", "\u0928\u0939\u093F\u0902", "\u0928\u0939\u0940\u0902", "\u0928\u093E", "\u0928\u093F\u091A\u0947", "\u0928\u093F\u0939\u093E\u092F\u0924", "\u0928\u0940\u091A\u0947", "\u0928\u0947", "\u092A\u0930", "\u092A\u0939\u0932\u0947", "\u092A\u0941\u0930\u093E", "\u092A\u0942\u0930\u093E", "\u092A\u0947", "\u092B\u093F\u0930", "\u092C\u0928\u093F", "\u092C\u0928\u0940", "\u092C\u0939\u093F", "\u092C\u0939\u0940", "\u092C\u0939\u0941\u0924", "\u092C\u093E\u0926", "\u092C\u093E\u0932\u093E", "\u092C\u093F\u0932\u0915\u0941\u0932", "\u092D\u093F", "\u092D\u093F\u0924\u0930", "\u092D\u0940", "\u092D\u0940\u0924\u0930", "\u092E\u0917\u0930", "\u092E\u093E\u0928\u094B", "\u092E\u0947", "\u092E\u0947\u0902", "\u092F\u0926\u093F", "\u092F\u0939", "\u092F\u0939\u093E\u0901", "\u092F\u0939\u093E\u0902", "\u092F\u0939\u093F", "\u092F\u0939\u0940", "\u092F\u093E", "\u092F\u093F\u0939", "\u092F\u0947", "\u0930\u0916\u0947\u0902", "\u0930\u0935\u093E\u0938\u093E", "\u0930\u0939\u093E", "\u0930\u0939\u0947", "\u0931\u094D\u0935\u093E\u0938\u093E", "\u0932\u093F\u090F", "\u0932\u093F\u092F\u0947", "\u0932\u0947\u0915\u093F\u0928", "\u0935", "\u0935\u0917\u0947\u0930\u0939", "\u0935\u0930\u0917", "\u0935\u0930\u094D\u0917", "\u0935\u0939", "\u0935\u0939\u093E\u0901", "\u0935\u0939\u093E\u0902", "\u0935\u0939\u093F\u0902", "\u0935\u0939\u0940\u0902", "\u0935\u093E\u0932\u0947", "\u0935\u0941\u0939", "\u0935\u0947", "\u0935\u0917\u093C\u0948\u0930\u0939", "\u0938\u0902\u0917", "\u0938\u0915\u0924\u093E", "\u0938\u0915\u0924\u0947", "\u0938\u092C\u0938\u0947", "\u0938\u092D\u093F", "\u0938\u092D\u0940", "\u0938\u093E\u0925", "\u0938\u093E\u092C\u0941\u0924", "\u0938\u093E\u092D", "\u0938\u093E\u0930\u093E", "\u0938\u0947", "\u0938\u094B", "\u0939\u093F", "\u0939\u0940", "\u0939\u0941\u0905", "\u0939\u0941\u0906", "\u0939\u0941\u0907", "\u0939\u0941\u0908", "\u0939\u0941\u090F", "\u0939\u0947", "\u0939\u0947\u0902", "\u0939\u0948", "\u0939\u0948\u0902", "\u0939\u094B", "\u0939\u094B\u0924\u093E", "\u0939\u094B\u0924\u093F", "\u0939\u094B\u0924\u0940", "\u0939\u094B\u0924\u0947", "\u0939\u094B\u0928\u093E", "\u0939\u094B\u0928\u0947"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_hr.js
var require_stopwords_hr = __commonJS({
  "node_modules/stopword/lib/stopwords_hr.js"(exports) {
    var words = ["a", "ako", "ali", "bi", "bih", "bila", "bili", "bilo", "bio", "bismo", "biste", "biti", "bumo", "da", "do", "du\u017E", "ga", "ho\u0107e", "ho\u0107emo", "ho\u0107ete", "ho\u0107e\u0161", "ho\u0107u", "i", "iako", "ih", "ili", "iz", "ja", "je", "jedna", "jedne", "jedno", "jer", "jesam", "jesi", "jesmo", "jest", "jeste", "jesu", "jim", "joj", "jo\u0161", "ju", "kada", "kako", "kao", "koja", "koje", "koji", "kojima", "koju", "kroz", "li", "me", "mene", "meni", "mi", "mimo", "moj", "moja", "moje", "mu", "na", "nad", "nakon", "nam", "nama", "nas", "na\u0161", "na\u0161a", "na\u0161e", "na\u0161eg", "ne", "nego", "neka", "neki", "nekog", "neku", "nema", "netko", "ne\u0107e", "ne\u0107emo", "ne\u0107ete", "ne\u0107e\u0161", "ne\u0107u", "ne\u0161to", "ni", "nije", "nikoga", "nikoje", "nikoju", "nisam", "nisi", "nismo", "niste", "nisu", "njega", "njegov", "njegova", "njegovo", "njemu", "njezin", "njezina", "njezino", "njih", "njihov", "njihova", "njihovo", "njim", "njima", "njoj", "nju", "no", "o", "od", "odmah", "on", "ona", "oni", "ono", "ova", "pa", "pak", "po", "pod", "pored", "prije", "s", "sa", "sam", "samo", "se", "sebe", "sebi", "si", "smo", "ste", "su", "sve", "svi", "svog", "svoj", "svoja", "svoje", "svom", "ta", "tada", "taj", "tako", "te", "tebe", "tebi", "ti", "to", "toj", "tome", "tu", "tvoj", "tvoja", "tvoje", "u", "uz", "vam", "vama", "vas", "va\u0161", "va\u0161a", "va\u0161e", "ve\u0107", "vi", "vrlo", "za", "zar", "\u0107e", "\u0107emo", "\u0107ete", "\u0107e\u0161", "\u0107u", "\u0161to"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_hu.js
var require_stopwords_hu = __commonJS({
  "node_modules/stopword/lib/stopwords_hu.js"(exports) {
    var words = ["a", "abba", "abban", "abb\xF3l", "addig", "ahhoz", "ahogy", "ahol", "aki", "akik", "akkor", "ak\xE1r", "alapj\xE1n", "alatt", "alatta", "alattad", "alattam", "alattatok", "alattuk", "alattunk", "al\xE1", "al\xE1d", "al\xE1juk", "al\xE1m", "al\xE1nk", "al\xE1tok", "al\xF3l", "al\xF3la", "al\xF3lad", "al\xF3lam", "al\xF3latok", "al\xF3luk", "al\xF3lunk", "amely", "amelybol", "amelyek", "amelyekben", "amelyeket", "amelyet", "amelyik", "amelynek", "ami", "amikor", "amit", "amolyan", "amott", "am\xEDg", "annak", "ann\xE1l", "arra", "arr\xF3l", "att\xF3l", "az", "aznap", "azok", "azokat", "azokba", "azokban", "azokb\xF3l", "azokhoz", "azokig", "azokkal", "azokk\xE1", "azoknak", "azokn\xE1l", "azokon", "azokra", "azokr\xF3l", "azokt\xF3l", "azok\xE9rt", "azon", "azonban", "azonnal", "azt", "azt\xE1n", "azut\xE1n", "azzal", "azz\xE1", "az\xE9rt", "bal", "balra", "ban", "be", "bel\xE9", "bel\xE9d", "bel\xE9j\xFCk", "bel\xE9m", "bel\xE9nk", "bel\xE9tek", "bel\xFCl", "bel\u0151le", "bel\u0151led", "bel\u0151lem", "bel\u0151letek", "bel\u0151l\xFCk", "bel\u0151l\xFCnk", "ben", "benne", "benned", "bennem", "bennetek", "benn\xFCk", "benn\xFCnk", "b\xE1r", "b\xE1rcsak", "b\xE1rmilyen", "b\xFAcs\xFA", "cikk", "cikkek", "cikkeket", "csak", "csakhogy", "csup\xE1n", "de", "dehogy", "e", "ebbe", "ebben", "ebb\u0151l", "eddig", "egy", "egyebek", "egyebet", "egyed\xFCl", "egyel\u0151re", "egyes", "egyet", "egyetlen", "egyik", "egym\xE1s", "egyre", "egyszerre", "egy\xE9b", "egy\xFCtt", "eg\xE9sz", "eg\xE9szen", "ehhez", "ekkor", "el", "eleinte", "ellen", "ellenes", "elleni", "ellen\xE9re", "elmondta", "els\u0151", "els\u0151k", "els\u0151sorban", "els\u0151t", "el\xE9", "el\xE9d", "el\xE9g", "el\xE9j\xFCk", "el\xE9m", "el\xE9nk", "el\xE9tek", "el\u0151", "el\u0151bb", "el\u0151l", "el\u0151le", "el\u0151led", "el\u0151lem", "el\u0151letek", "el\u0151l\xFCk", "el\u0151l\xFCnk", "el\u0151sz\xF6r", "el\u0151tt", "el\u0151tte", "el\u0151tted", "el\u0151ttem", "el\u0151ttetek", "el\u0151tt\xFCk", "el\u0151tt\xFCnk", "el\u0151z\u0151", "emilyen", "engem", "ennek", "ennyi", "enn\xE9l", "eny\xE9m", "erre", "err\u0151l", "esetben", "ett\u0151l", "ez", "ezek", "ezekbe", "ezekben", "ezekb\u0151l", "ezeken", "ezeket", "ezekhez", "ezekig", "ezekkel", "ezekk\xE9", "ezeknek", "ezekn\xE9l", "ezekre", "ezekr\u0151l", "ezekt\u0151l", "ezek\xE9rt", "ezen", "ezent\xFAl", "ezer", "ezret", "ezt", "ezut\xE1n", "ezzel", "ezz\xE9", "ez\xE9rt", "fel", "fele", "felek", "felet", "felett", "fel\xE9", "fent", "fenti", "f\xE9l", "f\xF6l\xE9", "gyakran", "ha", "hall\xF3", "hamar", "hanem", "harmadik", "harmadikat", "harminc", "hat", "hatodik", "hatodikat", "hatot", "hatvan", "helyett", "hetedik", "hetediket", "hetet", "hetven", "hirtelen", "hiszen", "hi\xE1ba", "hogy", "hogyan", "hol", "holnap", "holnapot", "honnan", "hova", "hozz\xE1", "hozz\xE1d", "hozz\xE1juk", "hozz\xE1m", "hozz\xE1nk", "hozz\xE1tok", "hurr\xE1", "huszadik", "h\xE1ny", "h\xE1nyszor", "h\xE1rmat", "h\xE1rom", "h\xE1t", "h\xE1tha", "h\xE1tuls\xF3", "h\xE9t", "h\xFAsz", "ide", "ide-\u043Eda", "id\xE9n", "igaz\xE1n", "igen", "ill", "illetve", "ilyen", "ilyenkor", "imm\xE1r", "ink\xE1bb", "is", "ism\xE9t", "ison", "itt", "jelenleg", "jobban", "jobbra", "j\xF3", "j\xF3l", "j\xF3lesik", "j\xF3val", "j\xF6v\u0151re", "kell", "kellene", "kellett", "kelljen", "keress\xFCnk", "kereszt\xFCl", "ketten", "kett\u0151", "kett\u0151t", "kev\xE9s", "ki", "kiben", "kib\u0151l", "kicsit", "kicsoda", "kihez", "kik", "kikbe", "kikben", "kikb\u0151l", "kiken", "kiket", "kikhez", "kikkel", "kikk\xE9", "kiknek", "kikn\xE9l", "kikre", "kikr\u0151l", "kikt\u0151l", "kik\xE9rt", "kilenc", "kilencedik", "kilencediket", "kilencet", "kilencven", "kin", "kinek", "kin\xE9l", "kire", "kir\u0151l", "kit", "kit\u0151l", "kivel", "kiv\xE9", "ki\xE9", "ki\xE9rt", "kor\xE1bban", "k\xE9pest", "k\xE9rem", "k\xE9rlek", "k\xE9sz", "k\xE9s\u0151", "k\xE9s\u0151bb", "k\xE9s\u0151n", "k\xE9t", "k\xE9tszer", "k\xEDv\xFCl", "k\xF6r\xFCl", "k\xF6sz\xF6nhet\u0151en", "k\xF6sz\xF6n\xF6m", "k\xF6zben", "k\xF6zel", "k\xF6zepesen", "k\xF6zep\xE9n", "k\xF6z\xE9", "k\xF6z\xF6tt", "k\xF6z\xFCl", "k\xFCl\xF6n", "k\xFCl\xF6nben", "k\xFCl\xF6nb\xF6z\u0151", "k\xFCl\xF6nb\xF6z\u0151bb", "k\xFCl\xF6nb\xF6z\u0151ek", "lassan", "le", "legal\xE1bb", "legyen", "lehet", "lehetetlen", "lehetett", "lehet\u0151leg", "lehet\u0151s\xE9g", "lenne", "lenni", "lenn\xE9k", "lenn\xE9nek", "lesz", "leszek", "lesznek", "lesz\xFCnk", "lett", "lettek", "lettem", "lett\xFCnk", "l\xE9v\u0151", "ma", "maga", "magad", "magam", "magatokat", "magukat", "magunkat", "mag\xE1t", "mai", "majd", "majdnem", "manaps\xE1g", "meg", "megcsin\xE1l", "megcsin\xE1lnak", "megint", "megvan", "mellett", "mellette", "melletted", "mellettem", "mellettetek", "mellett\xFCk", "mellett\xFCnk", "mell\xE9", "mell\xE9d", "mell\xE9j\xFCk", "mell\xE9m", "mell\xE9nk", "mell\xE9tek", "mell\u0151l", "mell\u0151le", "mell\u0151led", "mell\u0151lem", "mell\u0151letek", "mell\u0151l\xFCk", "mell\u0151l\xFCnk", "mely", "melyek", "melyik", "mennyi", "mert", "mi", "miatt", "miatta", "miattad", "miattam", "miattatok", "miattuk", "miattunk", "mibe", "miben", "mib\u0151l", "mihez", "mik", "mikbe", "mikben", "mikb\u0151l", "miken", "miket", "mikhez", "mikkel", "mikk\xE9", "miknek", "mikn\xE9l", "mikor", "mikre", "mikr\u0151l", "mikt\u0151l", "mik\xE9rt", "milyen", "min", "mind", "mindegyik", "mindegyiket", "minden", "mindenesetre", "mindenki", "mindent", "minden\xFCtt", "mindig", "mindketten", "minek", "minket", "mint", "mintha", "min\xE9l", "mire", "mir\u0151l", "mit", "mit\u0151l", "mivel", "miv\xE9", "mi\xE9rt", "mondta", "most", "mostan\xE1ig", "m\xE1r", "m\xE1s", "m\xE1sik", "m\xE1sikat", "m\xE1snap", "m\xE1sodik", "m\xE1sodszor", "m\xE1sok", "m\xE1sokat", "m\xE1st", "m\xE9g", "m\xE9gis", "m\xEDg", "m\xF6g\xE9", "m\xF6g\xE9d", "m\xF6g\xE9j\xFCk", "m\xF6g\xE9m", "m\xF6g\xE9nk", "m\xF6g\xE9tek", "m\xF6g\xF6tt", "m\xF6g\xF6tte", "m\xF6g\xF6tted", "m\xF6g\xF6ttem", "m\xF6g\xF6ttetek", "m\xF6g\xF6tt\xFCk", "m\xF6g\xF6tt\xFCnk", "m\xF6g\xFCl", "m\xF6g\xFCle", "m\xF6g\xFCled", "m\xF6g\xFClem", "m\xF6g\xFCletek", "m\xF6g\xFCl\xFCk", "m\xF6g\xFCl\xFCnk", "m\xFAltkor", "m\xFAlva", "na", "nagy", "nagyobb", "nagyon", "naponta", "napot", "ne", "negyedik", "negyediket", "negyven", "neked", "nekem", "neki", "nekik", "nektek", "nek\xFCnk", "nem", "nemcsak", "nemr\xE9g", "nincs", "nyolc", "nyolcadik", "nyolcadikat", "nyolcat", "nyolcvan", "n\xE1la", "n\xE1lad", "n\xE1lam", "n\xE1latok", "n\xE1luk", "n\xE1lunk", "n\xE9gy", "n\xE9gyet", "n\xE9ha", "n\xE9h\xE1ny", "n\xE9lk\xFCl", "o", "oda", "ok", "olyan", "onnan", "ott", "pedig", "persze", "p\xE1r", "p\xE9ld\xE1ul", "rajta", "rajtad", "rajtam", "rajtatok", "rajtuk", "rajtunk", "rendben", "rosszul", "r\xE1", "r\xE1d", "r\xE1juk", "r\xE1m", "r\xE1nk", "r\xE1tok", "r\xE9gen", "r\xE9g\xF3ta", "r\xE9sz\xE9re", "r\xF3la", "r\xF3lad", "r\xF3lam", "r\xF3latok", "r\xF3luk", "r\xF3lunk", "r\xF6gt\xF6n", "s", "saj\xE1t", "se", "sem", "semmi", "semmilyen", "semmis\xE9g", "senki", "soha", "sok", "sokan", "sokat", "sokkal", "sokszor", "sok\xE1ig", "sor\xE1n", "stb.", "szemben", "szerbusz", "szerint", "szerinte", "szerinted", "szerintem", "szerintetek", "szerint\xFCk", "szerint\xFCnk", "szervusz", "szinte", "sz\xE1m\xE1ra", "sz\xE1z", "sz\xE1zadik", "sz\xE1zat", "sz\xE9pen", "sz\xE9t", "sz\xEDves", "sz\xEDvesen", "sz\xEDveskedj\xE9k", "s\u0151t", "tal\xE1n", "tavaly", "te", "tegnap", "tegnapel\u0151tt", "teh\xE1t", "tele", "teljes", "tess\xE9k", "ti", "tied", "titeket", "tizedik", "tizediket", "tizenegy", "tizenegyedik", "tizenhat", "tizenh\xE1rom", "tizenh\xE9t", "tizenkettedik", "tizenkett\u0151", "tizenkilenc", "tizenk\xE9t", "tizennyolc", "tizenn\xE9gy", "tizen\xF6t", "tizet", "tov\xE1bb", "tov\xE1bbi", "tov\xE1bb\xE1", "t\xE1vol", "t\xE9ged", "t\xE9nyleg", "t\xEDz", "t\xF6bb", "t\xF6bbi", "t\xF6bbsz\xF6r", "t\xFAl", "t\u0151le", "t\u0151led", "t\u0151lem", "t\u0151letek", "t\u0151l\xFCk", "t\u0151l\xFCnk", "ugyanakkor", "ugyanez", "ugyanis", "ugye", "urak", "uram", "urat", "utolj\xE1ra", "utols\xF3", "ut\xE1n", "ut\xE1na", "vagy", "vagyis", "vagyok", "vagytok", "vagyunk", "vajon", "valahol", "valaki", "valakit", "valamelyik", "valami", "valamint", "val\xF3", "van", "vannak", "vele", "veled", "velem", "veletek", "vel\xFCk", "vel\xFCnk", "vissza", "viszl\xE1t", "viszont", "viszontl\xE1t\xE1sra", "volna", "voln\xE1nak", "voln\xE9k", "volt", "voltak", "voltam", "voltunk", "v\xE9gre", "v\xE9g\xE9n", "v\xE9g\xFCl", "\xE1ltal", "\xE1ltal\xE1ban", "\xE1m", "\xE1t", "\xE9ljen", "\xE9n", "\xE9ppen", "\xE9rte", "\xE9rted", "\xE9rtem", "\xE9rtetek", "\xE9rt\xFCk", "\xE9rt\xFCnk", "\xE9s", "\xE9v", "\xE9vben", "\xE9ve", "\xE9vek", "\xE9ves", "\xE9vi", "\xE9vvel", "\xEDgy", "\xF3ta", "\xF6n", "\xF6nbe", "\xF6nben", "\xF6nb\u0151l", "\xF6nh\xF6z", "\xF6nnek", "\xF6nnel", "\xF6nn\xE9l", "\xF6nre", "\xF6nr\u0151l", "\xF6nt", "\xF6nt\u0151l", "\xF6n\xE9rt", "\xF6n\xF6k", "\xF6n\xF6kbe", "\xF6n\xF6kben", "\xF6n\xF6kb\u0151l", "\xF6n\xF6ket", "\xF6n\xF6kh\xF6z", "\xF6n\xF6kkel", "\xF6n\xF6knek", "\xF6n\xF6kn\xE9l", "\xF6n\xF6kre", "\xF6n\xF6kr\u0151l", "\xF6n\xF6kt\u0151l", "\xF6n\xF6k\xE9rt", "\xF6n\xF6k\xF6n", "\xF6n\xF6n", "\xF6ssze", "\xF6t", "\xF6tven", "\xF6t\xF6dik", "\xF6t\xF6diket", "\xF6t\xF6t", "\xFAgy", "\xFAgyis", "\xFAgynevezett", "\xFAj", "\xFAjabb", "\xFAjra", "\xFAr", "\u0151", "\u0151k", "\u0151ket", "\u0151t"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_hy.js
var require_stopwords_hy = __commonJS({
  "node_modules/stopword/lib/stopwords_hy.js"(exports) {
    var words = ["\u0561\u0575\u0564", "\u0561\u0575\u056C", "\u0561\u0575\u0576", "\u0561\u0575\u057D", "\u0564\u0578\u0582", "\u0564\u0578\u0582\u0584", "\u0565\u0574", "\u0565\u0576", "\u0565\u0576\u0584", "\u0565\u057D", "\u0565\u0584", "\u0567", "\u0567\u056B", "\u0567\u056B\u0576", "\u0567\u056B\u0576\u0584", "\u0567\u056B\u0580", "\u0567\u056B\u0584", "\u0567\u0580", "\u0568\u057D\u057F", "\u0569", "\u056B", "\u056B\u0576", "\u056B\u057D\u056F", "\u056B\u0580", "\u056F\u0561\u0574", "\u0570\u0561\u0574\u0561\u0580", "\u0570\u0565\u057F", "\u0570\u0565\u057F\u0578", "\u0574\u0565\u0576\u0584", "\u0574\u0565\u057B", "\u0574\u056B", "\u0576", "\u0576\u0561", "\u0576\u0561\u0587", "\u0576\u0580\u0561", "\u0576\u0580\u0561\u0576\u0584", "\u0578\u0580", "\u0578\u0580\u0568", "\u0578\u0580\u0578\u0576\u0584", "\u0578\u0580\u057A\u0565\u057D", "\u0578\u0582", "\u0578\u0582\u0574", "\u057A\u056B\u057F\u056B", "\u057E\u0580\u0561", "\u0587"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_id.js
var require_stopwords_id = __commonJS({
  "node_modules/stopword/lib/stopwords_id.js"(exports) {
    var words = ["ada", "adalah", "adanya", "adapun", "agak", "agaknya", "agar", "akan", "akankah", "akhir", "akhiri", "akhirnya", "aku", "akulah", "amat", "amatlah", "anda", "andalah", "antar", "antara", "antaranya", "apa", "apaan", "apabila", "apakah", "apalagi", "apatah", "artinya", "asal", "asalkan", "atas", "atau", "ataukah", "ataupun", "awal", "awalnya", "bagai", "bagaikan", "bagaimana", "bagaimanakah", "bagaimanapun", "bagi", "bagian", "bahkan", "bahwa", "bahwasanya", "bakal", "bakalan", "balik", "banyak", "bapak", "baru", "bawah", "beberapa", "begini", "beginian", "beginikah", "beginilah", "begitu", "begitukah", "begitulah", "begitupun", "bekerja", "belakang", "belakangan", "belum", "belumlah", "benar", "benarkah", "benarlah", "berada", "berakhir", "berakhirlah", "berakhirnya", "berapa", "berapakah", "berapalah", "berapapun", "berarti", "berawal", "berbagai", "berdatangan", "beri", "berikan", "berikut", "berikutnya", "berjumlah", "berkali-kali", "berkata", "berkehendak", "berkeinginan", "berkenaan", "berlainan", "berlalu", "berlangsung", "berlebihan", "bermacam", "bermacam-macam", "bermaksud", "bermula", "bersama", "bersama-sama", "bersiap", "bersiap-siap", "bertanya", "bertanya-tanya", "berturut", "berturut-turut", "bertutur", "berujar", "berupa", "besar", "betul", "betulkah", "biasa", "biasanya", "bila", "bilakah", "bisa", "bisakah", "boleh", "bolehkah", "bolehlah", "buat", "bukan", "bukankah", "bukanlah", "bukannya", "bulan", "bung", "cara", "caranya", "cukup", "cukupkah", "cukuplah", "cuma", "dahulu", "dalam", "dan", "dapat", "dari", "daripada", "datang", "dekat", "demi", "demikian", "demikianlah", "dengan", "depan", "di", "dia", "diakhiri", "diakhirinya", "dialah", "diantara", "diantaranya", "diberi", "diberikan", "diberikannya", "dibuat", "dibuatnya", "didapat", "didatangkan", "digunakan", "diibaratkan", "diibaratkannya", "diingat", "diingatkan", "diinginkan", "dijawab", "dijelaskan", "dijelaskannya", "dikarenakan", "dikatakan", "dikatakannya", "dikerjakan", "diketahui", "diketahuinya", "dikira", "dilakukan", "dilalui", "dilihat", "dimaksud", "dimaksudkan", "dimaksudkannya", "dimaksudnya", "diminta", "dimintai", "dimisalkan", "dimulai", "dimulailah", "dimulainya", "dimungkinkan", "dini", "dipastikan", "diperbuat", "diperbuatnya", "dipergunakan", "diperkirakan", "diperlihatkan", "diperlukan", "diperlukannya", "dipersoalkan", "dipertanyakan", "dipunyai", "diri", "dirinya", "disampaikan", "disebut", "disebutkan", "disebutkannya", "disini", "disinilah", "ditambahkan", "ditandaskan", "ditanya", "ditanyai", "ditanyakan", "ditegaskan", "ditujukan", "ditunjuk", "ditunjuki", "ditunjukkan", "ditunjukkannya", "ditunjuknya", "dituturkan", "dituturkannya", "diucapkan", "diucapkannya", "diungkapkan", "dong", "dulu", "empat", "enggak", "enggaknya", "entah", "entahlah", "guna", "gunakan", "hal", "hampir", "hanya", "hanyalah", "harus", "haruslah", "harusnya", "hendak", "hendaklah", "hendaknya", "hingga", "ia", "ialah", "ibarat", "ibaratkan", "ibaratnya", "ikut", "ingat", "ingat-ingat", "ingin", "inginkah", "inginkan", "ini", "inikah", "inilah", "itu", "itukah", "itulah", "jadi", "jadilah", "jadinya", "jangan", "jangankan", "janganlah", "jauh", "jawab", "jawaban", "jawabnya", "jelas", "jelaskan", "jelaslah", "jelasnya", "jika", "jikalau", "juga", "jumlah", "jumlahnya", "justru", "kala", "kalau", "kalaulah", "kalaupun", "kalian", "kami", "kamilah", "kamu", "kamulah", "kan", "kapan", "kapankah", "kapanpun", "karena", "karenanya", "kasus", "kata", "katakan", "katakanlah", "katanya", "ke", "keadaan", "kebetulan", "kecil", "kedua", "keduanya", "keinginan", "kelamaan", "kelihatan", "kelihatannya", "kelima", "keluar", "kembali", "kemudian", "kemungkinan", "kemungkinannya", "kenapa", "kepada", "kepadanya", "kesampaian", "keseluruhan", "keseluruhannya", "keterlaluan", "ketika", "khususnya", "kini", "kinilah", "kira", "kira-kira", "kiranya", "kita", "kitalah", "kok", "kurang", "lagi", "lagian", "lah", "lain", "lainnya", "lalu", "lama", "lamanya", "lanjut", "lanjutnya", "lebih", "lewat", "lima", "luar", "macam", "maka", "makanya", "makin", "malah", "malahan", "mampu", "mampukah", "mana", "manakala", "manalagi", "masa", "masalah", "masalahnya", "masih", "masihkah", "masing", "masing-masing", "mau", "maupun", "melainkan", "melakukan", "melalui", "melihat", "melihatnya", "memang", "memastikan", "memberi", "memberikan", "membuat", "memerlukan", "memihak", "meminta", "memintakan", "memisalkan", "memperbuat", "mempergunakan", "memperkirakan", "memperlihatkan", "mempersiapkan", "mempersoalkan", "mempertanyakan", "mempunyai", "memulai", "memungkinkan", "menaiki", "menambahkan", "menandaskan", "menanti", "menanti-nanti", "menantikan", "menanya", "menanyai", "menanyakan", "mendapat", "mendapatkan", "mendatang", "mendatangi", "mendatangkan", "menegaskan", "mengakhiri", "mengapa", "mengatakan", "mengatakannya", "mengenai", "mengerjakan", "mengetahui", "menggunakan", "menghendaki", "mengibaratkan", "mengibaratkannya", "mengingat", "mengingatkan", "menginginkan", "mengira", "mengucapkan", "mengucapkannya", "mengungkapkan", "menjadi", "menjawab", "menjelaskan", "menuju", "menunjuk", "menunjuki", "menunjukkan", "menunjuknya", "menurut", "menuturkan", "menyampaikan", "menyangkut", "menyatakan", "menyebutkan", "menyeluruh", "menyiapkan", "merasa", "mereka", "merekalah", "merupakan", "meski", "meskipun", "meyakini", "meyakinkan", "minta", "mirip", "misal", "misalkan", "misalnya", "mula", "mulai", "mulailah", "mulanya", "mungkin", "mungkinkah", "nah", "naik", "namun", "nanti", "nantinya", "nyaris", "nyatanya", "oleh", "olehnya", "pada", "padahal", "padanya", "paling", "panjang", "pantas", "para", "pasti", "pastilah", "penting", "pentingnya", "per", "percuma", "perlu", "perlukah", "perlunya", "pernah", "persoalan", "pertama", "pertama-tama", "pertanyaan", "pertanyakan", "pihak", "pihaknya", "pukul", "pula", "pun", "punya", "rasa", "rasanya", "rata", "rupanya", "saat", "saatnya", "saja", "sajalah", "saling", "sama", "sama-sama", "sambil", "sampai", "sampai-sampai", "sampaikan", "sana", "sangat", "sangatlah", "satu", "saya", "sayalah", "se", "sebab", "sebabnya", "sebagai", "sebagaimana", "sebagainya", "sebagian", "sebaik", "sebaik-baiknya", "sebaiknya", "sebaliknya", "sebanyak", "sebegini", "sebegitu", "sebelum", "sebelumnya", "sebenarnya", "seberapa", "sebesar", "sebetulnya", "sebisanya", "sebuah", "sebut", "sebutlah", "sebutnya", "secara", "secukupnya", "sedang", "sedangkan", "sedemikian", "sedikit", "sedikitnya", "seenaknya", "segala", "segalanya", "segera", "seharusnya", "sehingga", "seingat", "sejak", "sejauh", "sejenak", "sejumlah", "sekadar", "sekadarnya", "sekali", "sekali-kali", "sekalian", "sekaligus", "sekalipun", "sekarang", "sekarang", "sekecil", "seketika", "sekiranya", "sekitar", "sekitarnya", "sekurang-kurangnya", "sekurangnya", "sela", "selain", "selaku", "selalu", "selama", "selama-lamanya", "selamanya", "selanjutnya", "seluruh", "seluruhnya", "semacam", "semakin", "semampu", "semampunya", "semasa", "semasih", "semata", "semata-mata", "semaunya", "sementara", "semisal", "semisalnya", "sempat", "semua", "semuanya", "semula", "sendiri", "sendirian", "sendirinya", "seolah", "seolah-olah", "seorang", "sepanjang", "sepantasnya", "sepantasnyalah", "seperlunya", "seperti", "sepertinya", "sepihak", "sering", "seringnya", "serta", "serupa", "sesaat", "sesama", "sesampai", "sesegera", "sesekali", "seseorang", "sesuatu", "sesuatunya", "sesudah", "sesudahnya", "setelah", "setempat", "setengah", "seterusnya", "setiap", "setiba", "setibanya", "setidak-tidaknya", "setidaknya", "setinggi", "seusai", "sewaktu", "siap", "siapa", "siapakah", "siapapun", "sini", "sinilah", "soal", "soalnya", "suatu", "sudah", "sudahkah", "sudahlah", "supaya", "tadi", "tadinya", "tahu", "tahun", "tak", "tambah", "tambahnya", "tampak", "tampaknya", "tandas", "tandasnya", "tanpa", "tanya", "tanyakan", "tanyanya", "tapi", "tegas", "tegasnya", "telah", "tempat", "tengah", "tentang", "tentu", "tentulah", "tentunya", "tepat", "terakhir", "terasa", "terbanyak", "terdahulu", "terdapat", "terdiri", "terhadap", "terhadapnya", "teringat", "teringat-ingat", "terjadi", "terjadilah", "terjadinya", "terkira", "terlalu", "terlebih", "terlihat", "termasuk", "ternyata", "tersampaikan", "tersebut", "tersebutlah", "tertentu", "tertuju", "terus", "terutama", "tetap", "tetapi", "tiap", "tiba", "tiba-tiba", "tidak", "tidakkah", "tidaklah", "tiga", "tinggi", "toh", "tunjuk", "turut", "tutur", "tuturnya", "ucap", "ucapnya", "ujar", "ujarnya", "umum", "umumnya", "ungkap", "ungkapnya", "untuk", "usah", "usai", "waduh", "wah", "wahai", "waktu", "waktunya", "walau", "walaupun", "wong", "yaitu", "yakin", "yakni", "yang"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_it.js
var require_stopwords_it = __commonJS({
  "node_modules/stopword/lib/stopwords_it.js"(exports) {
    var words = ["ad", "al", "allo", "ai", "agli", "all", "agl", "alla", "alle", "con", "col", "coi", "da", "dal", "dallo", "dai", "dagli", "dall", "dagl", "dalla", "dalle", "di", "del", "dello", "dei", "degli", "dell", "degl", "della", "delle", "in", "nel", "nello", "nei", "negli", "nell", "negl", "nella", "nelle", "su", "sul", "sullo", "sui", "sugli", "sull", "sugl", "sulla", "sulle", "per", "tra", "contro", "io", "tu", "lui", "lei", "noi", "voi", "loro", "mio", "mia", "miei", "mie", "tuo", "tua", "tuoi", "tue", "suo", "sua", "suoi", "sue", "nostro", "nostra", "nostri", "nostre", "vostro", "vostra", "vostri", "vostre", "mi", "ti", "ci", "vi", "lo", "la", "li", "le", "gli", "ne", "il", "un", "uno", "una", "ma", "ed", "se", "perch\xE9", "anche", "come", "dov", "dove", "che", "chi", "cui", "non", "pi\xF9", "quale", "quanto", "quanti", "quanta", "quante", "quello", "quelli", "quella", "quelle", "questo", "questi", "questa", "queste", "si", "tutto", "tutti", "a", "c", "e", "i", "l", "o", "ho", "hai", "ha", "abbiamo", "avete", "hanno", "abbia", "abbiate", "abbiano", "avr\xF2", "avrai", "avr\xE0", "avremo", "avrete", "avranno", "avrei", "avresti", "avrebbe", "avremmo", "avreste", "avrebbero", "avevo", "avevi", "aveva", "avevamo", "avevate", "avevano", "ebbi", "avesti", "ebbe", "avemmo", "aveste", "ebbero", "avessi", "avesse", "avessimo", "avessero", "avendo", "avuto", "avuta", "avuti", "avute", "sono", "sei", "\xE8", "siamo", "siete", "sia", "siate", "siano", "sar\xF2", "sarai", "sar\xE0", "saremo", "sarete", "saranno", "sarei", "saresti", "sarebbe", "saremmo", "sareste", "sarebbero", "ero", "eri", "era", "eravamo", "eravate", "erano", "fui", "fosti", "fu", "fummo", "foste", "furono", "fossi", "fosse", "fossimo", "fossero", "essendo", "faccio", "fai", "facciamo", "fanno", "faccia", "facciate", "facciano", "far\xF2", "farai", "far\xE0", "faremo", "farete", "faranno", "farei", "faresti", "farebbe", "faremmo", "fareste", "farebbero", "facevo", "facevi", "faceva", "facevamo", "facevate", "facevano", "feci", "facesti", "fece", "facemmo", "faceste", "fecero", "facessi", "facesse", "facessimo", "facessero", "facendo", "sto", "stai", "sta", "stiamo", "stanno", "stia", "stiate", "stiano", "star\xF2", "starai", "star\xE0", "staremo", "starete", "staranno", "starei", "staresti", "starebbe", "staremmo", "stareste", "starebbero", "stavo", "stavi", "stava", "stavamo", "stavate", "stavano", "stetti", "stesti", "stette", "stemmo", "steste", "stettero", "stessi", "stesse", "stessimo", "stessero", "stando", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ja.js
var require_stopwords_ja = __commonJS({
  "node_modules/stopword/lib/stopwords_ja.js"(exports) {
    var words = ["\u306E", "\u306B", "\u306F", "\u3092", "\u305F", "\u304C", "\u3067", "\u3066", "\u3068", "\u3057", "\u308C", "\u3055", "\u3042\u308B", "\u3044\u308B", "\u3082", "\u3059\u308B", "\u304B\u3089", "\u306A", "\u3053\u3068", "\u3068\u3057\u3066", "\u3044", "\u3084", "\u308C\u308B", "\u306A\u3069", "\u306A\u3063", "\u306A\u3044", "\u3053\u306E", "\u305F\u3081", "\u305D\u306E", "\u3042\u3063", "\u3088\u3046", "\u307E\u305F", "\u3082\u306E", "\u3068\u3044\u3046", "\u3042\u308A", "\u307E\u3067", "\u3089\u308C", "\u306A\u308B", "\u3078", "\u304B", "\u3060", "\u3053\u308C", "\u306B\u3088\u3063\u3066", "\u306B\u3088\u308A", "\u304A\u308A", "\u3088\u308A", "\u306B\u3088\u308B", "\u305A", "\u306A\u308A", "\u3089\u308C\u308B", "\u306B\u304A\u3044\u3066", "\u3070", "\u306A\u304B\u3063", "\u306A\u304F", "\u3057\u304B\u3057", "\u306B\u3064\u3044\u3066", "\u305B", "\u3060\u3063", "\u305D\u306E\u5F8C", "\u3067\u304D\u308B", "\u305D\u308C", "\u3046", "\u306E\u3067", "\u306A\u304A", "\u306E\u307F", "\u3067\u304D", "\u304D", "\u3064", "\u306B\u304A\u3051\u308B", "\u304A\u3088\u3073", "\u3044\u3046", "\u3055\u3089\u306B", "\u3067\u3082", "\u3089", "\u305F\u308A", "\u305D\u306E\u4ED6", "\u306B\u95A2\u3059\u308B", "\u305F\u3061", "\u307E\u3059", "\u3093", "\u306A\u3089", "\u306B\u5BFE\u3057\u3066", "\u7279\u306B", "\u305B\u308B", "\u53CA\u3073", "\u3053\u308C\u3089", "\u3068\u304D", "\u3067\u306F", "\u306B\u3066", "\u307B\u304B", "\u306A\u304C\u3089", "\u3046\u3061", "\u305D\u3057\u3066", "\u3068\u3068\u3082\u306B", "\u305F\u3060\u3057", "\u304B\u3064\u3066", "\u305D\u308C\u305E\u308C", "\u307E\u305F\u306F", "\u304A", "\u307B\u3069", "\u3082\u306E\u306E", "\u306B\u5BFE\u3059\u308B", "\u307B\u3068\u3093\u3069", "\u3068\u5171\u306B", "\u3068\u3044\u3063\u305F", "\u3067\u3059", "\u3068\u3082", "\u3068\u3053\u308D", "\u3053\u3053"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ko.js
var require_stopwords_ko = __commonJS({
  "node_modules/stopword/lib/stopwords_ko.js"(exports) {
    var words = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "\uFF10", "\uFF11", "\uFF12", "\uFF13", "\uFF14", "\uFF15", "\uFF16", "\uFF17", "\uFF18", "\uFF19", "\uAC00", "\uAC00\uAE4C\uC2A4\uB85C", "\uAC00\uB839", "\uAC01", "\uAC01\uAC01", "\uAC01\uC790", "\uAC01\uC885", "\uAC16\uACE0\uB9D0\uD558\uC790\uBA74", "\uAC19\uB2E4", "\uAC19\uC774", "\uAC1C\uC758\uCE58\uC54A\uACE0", "\uAC70\uB2C8\uC640", "\uAC70\uBC14", "\uAC70\uC758", "\uAC83", "\uAC83\uACFC \uAC19\uC774", "\uAC83\uB4E4", "\uAC8C\uB2E4\uAC00", "\uAC8C\uC6B0\uB2E4", "\uACA8\uC6B0", "\uACAC\uC9C0\uC5D0\uC11C", "\uACB0\uACFC\uC5D0 \uC774\uB974\uB2E4", "\uACB0\uAD6D", "\uACB0\uB860\uC744 \uB0BC \uC218 \uC788\uB2E4", "\uACB8\uC0AC\uACB8\uC0AC", "\uACE0\uB824\uD558\uBA74", "\uACE0\uB85C", "\uACE7", "\uACF5\uB3D9\uC73C\uB85C", "\uACFC", "\uACFC\uC5F0", "\uAD00\uACC4\uAC00 \uC788\uB2E4", "\uAD00\uACC4\uC5C6\uC774", "\uAD00\uB828\uC774 \uC788\uB2E4", "\uAD00\uD558\uC5EC", "\uAD00\uD55C", "\uAD00\uD574\uC11C\uB294", "\uAD6C", "\uAD6C\uCCB4\uC801\uC73C\uB85C", "\uAD6C\uD1A0\uD558\uB2E4", "\uADF8", "\uADF8\uB4E4", "\uADF8\uB54C", "\uADF8\uB798", "\uADF8\uB798\uB3C4", "\uADF8\uB798\uC11C", "\uADF8\uB7EC\uB098", "\uADF8\uB7EC\uB2C8", "\uADF8\uB7EC\uB2C8\uAE4C", "\uADF8\uB7EC\uBA74", "\uADF8\uB7EC\uBBC0\uB85C", "\uADF8\uB7EC\uD55C\uC989", "\uADF8\uB7F0 \uAE4C\uB2ED\uC5D0", "\uADF8\uB7F0\uB370", "\uADF8\uB7F0\uC989", "\uADF8\uB7FC", "\uADF8\uB7FC\uC5D0\uB3C4 \uBD88\uAD6C\uD558\uACE0", "\uADF8\uB807\uAC8C \uD568\uC73C\uB85C\uC368", "\uADF8\uB807\uC9C0", "\uADF8\uB807\uC9C0 \uC54A\uB2E4\uBA74", "\uADF8\uB807\uC9C0 \uC54A\uC73C\uBA74", "\uADF8\uB807\uC9C0\uB9CC", "\uADF8\uB807\uC9C0\uC54A\uC73C\uBA74", "\uADF8\uB9AC\uACE0", "\uADF8\uB9AC\uD558\uC5EC", "\uADF8\uB9CC\uC774\uB2E4", "\uADF8\uC5D0 \uB530\uB974\uB294", "\uADF8\uC704\uC5D0", "\uADF8\uC800", "\uADF8\uC911\uC5D0\uC11C", "\uADF8\uCE58\uC9C0 \uC54A\uB2E4", "\uADFC\uAC70\uB85C", "\uADFC\uAC70\uD558\uC5EC", "\uAE30\uB300\uC5EC", "\uAE30\uC810\uC73C\uB85C", "\uAE30\uC900\uC73C\uB85C", "\uAE30\uD0C0", "\uAE4C\uB2ED\uC73C\uB85C", "\uAE4C\uC545", "\uAE4C\uC9C0", "\uAE4C\uC9C0 \uBBF8\uCE58\uB2E4", "\uAE4C\uC9C0\uB3C4", "\uAF48\uB2F9", "\uB059\uB059", "\uB07C\uC775", "\uB098", "\uB098\uBA38\uC9C0\uB294", "\uB0A8\uB4E4", "\uB0A8\uC9D3", "\uB108", "\uB108\uD76C", "\uB108\uD76C\uB4E4", "\uB124", "\uB137", "\uB144", "\uB17C\uD558\uC9C0 \uC54A\uB2E4", "\uB180\uB77C\uB2E4", "\uB204\uAC00 \uC54C\uACA0\uB294\uAC00", "\uB204\uAD6C", "\uB2E4\uB978", "\uB2E4\uB978 \uBC29\uBA74\uC73C\uB85C", "\uB2E4\uB9CC", "\uB2E4\uC12F", "\uB2E4\uC18C", "\uB2E4\uC218", "\uB2E4\uC2DC \uB9D0\uD558\uC790\uBA74", "\uB2E4\uC2DC\uB9D0\uD558\uBA74", "\uB2E4\uC74C", "\uB2E4\uC74C\uC5D0", "\uB2E4\uC74C\uC73C\uB85C", "\uB2E8\uC9C0", "\uB2F5\uB2E4", "\uB2F9\uC2E0", "\uB2F9\uC7A5", "\uB300\uB85C \uD558\uB2E4", "\uB300\uD558\uBA74", "\uB300\uD558\uC5EC", "\uB300\uD574 \uB9D0\uD558\uC790\uBA74", "\uB300\uD574\uC11C", "\uB315\uADF8", "\uB354\uAD6C\uB098", "\uB354\uAD70\uB2E4\uB098", "\uB354\uB77C\uB3C4", "\uB354\uBD88\uC5B4", "\uB354\uC6B1\uB354", "\uB354\uC6B1\uC774\uB294", "\uB3C4\uB2EC\uD558\uB2E4", "\uB3C4\uCC29\uD558\uB2E4", "\uB3D9\uC2DC\uC5D0", "\uB3D9\uC548", "\uB41C\uBC14\uC5D0\uC57C", "\uB41C\uC774\uC0C1", "\uB450\uBC88\uC9F8\uB85C", "\uB458", "\uB465\uB465", "\uB4A4\uB530\uB77C", "\uB4A4\uC774\uC5B4", "\uB4E0\uAC04\uC5D0", "\uB4E4", "\uB4F1", "\uB4F1\uB4F1", "\uB529\uB3D9", "\uB530\uB77C", "\uB530\uB77C\uC11C", "\uB530\uC704", "\uB530\uC9C0\uC9C0 \uC54A\uB2E4", "\uB531", "\uB54C", "\uB54C\uAC00 \uB418\uC5B4", "\uB54C\uBB38\uC5D0", "\uB610", "\uB610\uD55C", "\uB69D\uB69D", "\uB77C \uD574\uB3C4", "\uB839", "\uB85C", "\uB85C \uC778\uD558\uC5EC", "\uB85C\uBD80\uD130", "\uB85C\uC368", "\uB959", "\uB97C", "\uB9C8\uC74C\uB300\uB85C", "\uB9C8\uC800", "\uB9C8\uC800\uB3C4", "\uB9C8\uCE58", "\uB9C9\uB860\uD558\uACE0", "\uB9CC \uBABB\uD558\uB2E4", "\uB9CC\uC57D", "\uB9CC\uC57D\uC5D0", "\uB9CC\uC740 \uC544\uB2C8\uB2E4", "\uB9CC\uC774 \uC544\uB2C8\uB2E4", "\uB9CC\uC77C", "\uB9CC\uD07C", "\uB9D0\uD558\uC790\uBA74", "\uB9D0\uD560\uAC83\uB3C4 \uC5C6\uACE0", "\uB9E4", "\uB9E4\uBC88", "\uBA54\uC4F0\uAC81\uB2E4", "\uBA87", "\uBAA8", "\uBAA8\uB450", "\uBB34\uB835", "\uBB34\uB98E\uC4F0\uACE0", "\uBB34\uC2A8", "\uBB34\uC5C7", "\uBB34\uC5C7\uB54C\uBB38\uC5D0", "\uBB3C\uB860", "\uBC0F", "\uBC14\uAFB8\uC5B4\uB9D0\uD558\uBA74", "\uBC14\uAFB8\uC5B4\uB9D0\uD558\uC790\uBA74", "\uBC14\uAFB8\uC5B4\uC11C \uB9D0\uD558\uBA74", "\uBC14\uAFB8\uC5B4\uC11C \uD55C\uB2E4\uBA74", "\uBC14\uAFD4 \uB9D0\uD558\uBA74", "\uBC14\uB85C", "\uBC14\uC640\uAC19\uC774", "\uBC16\uC5D0 \uC548\uB41C\uB2E4", "\uBC18\uB300\uB85C", "\uBC18\uB300\uB85C \uB9D0\uD558\uC790\uBA74", "\uBC18\uB4DC\uC2DC", "\uBC84\uAE08", "\uBCF4\uB294\uB370\uC11C", "\uBCF4\uB2E4\uB354", "\uBCF4\uB4DC\uB4DD", "\uBCF8\uB300\uB85C", "\uBD10", "\uBD10\uB77C", "\uBD80\uB958\uC758 \uC0AC\uB78C\uB4E4", "\uBD80\uD130", "\uBD88\uAD6C\uD558\uACE0", "\uBD88\uBB38\uD558\uACE0", "\uBD95\uBD95", "\uBE44\uAC71\uAC70\uB9AC\uB2E4", "\uBE44\uAD50\uC801", "\uBE44\uAE38\uC218 \uC5C6\uB2E4", "\uBE44\uB85C\uC18C", "\uBE44\uB85D", "\uBE44\uC2B7\uD558\uB2E4", "\uBE44\uCD94\uC5B4 \uBCF4\uC544", "\uBE44\uD558\uBA74", "\uBFD0\uB9CC \uC544\uB2C8\uB77C", "\uBFD0\uB9CC\uC544\uB2C8\uB77C", "\uBFD0\uC774\uB2E4", "\uC090\uAC71", "\uC090\uAC71\uAC70\uB9AC\uB2E4", "\uC0AC", "\uC0BC", "\uC0C1\uB300\uC801\uC73C\uB85C \uB9D0\uD558\uC790\uBA74", "\uC0DD\uAC01\uD55C\uB300\uB85C", "\uC124\uB839", "\uC124\uB9C8", "\uC124\uC0AC", "\uC14B", "\uC18C\uC0DD", "\uC18C\uC778", "\uC1A8", "\uC27F", "\uC2B5\uB2C8\uAE4C", "\uC2B5\uB2C8\uB2E4", "\uC2DC\uAC01", "\uC2DC\uAC04", "\uC2DC\uC791\uD558\uC5EC", "\uC2DC\uCD08\uC5D0", "\uC2DC\uD0A4\uB2E4", "\uC2E4\uB85C", "\uC2EC\uC9C0\uC5B4", "\uC544", "\uC544\uB2C8", "\uC544\uB2C8\uB098\uB2E4\uB97C\uAC00", "\uC544\uB2C8\uB77C\uBA74", "\uC544\uB2C8\uBA74", "\uC544\uB2C8\uC5C8\uB2E4\uBA74", "\uC544\uB798\uC717", "\uC544\uBB34\uAC70\uB098", "\uC544\uBB34\uB3C4", "\uC544\uC57C", "\uC544\uC6B8\uB7EC", "\uC544\uC774", "\uC544\uC774\uACE0", "\uC544\uC774\uAD6C", "\uC544\uC774\uC57C", "\uC544\uC774\uCFE0", "\uC544\uD558", "\uC544\uD649", "\uC548 \uADF8\uB7EC\uBA74", "\uC54A\uAE30 \uC704\uD558\uC5EC", "\uC54A\uAE30 \uC704\uD574\uC11C", "\uC54C \uC218 \uC788\uB2E4", "\uC54C\uC558\uC5B4", "\uC557", "\uC55E\uC5D0\uC11C", "\uC55E\uC758\uAC83", "\uC57C", "\uC57D\uAC04", "\uC591\uC790", "\uC5B4", "\uC5B4\uAE30\uC5EC\uCC28", "\uC5B4\uB290", "\uC5B4\uB290 \uB144\uB3C4", "\uC5B4\uB290\uAC83", "\uC5B4\uB290\uACF3", "\uC5B4\uB290\uB54C", "\uC5B4\uB290\uCABD", "\uC5B4\uB290\uD574", "\uC5B4\uB514", "\uC5B4\uB54C", "\uC5B4\uB5A0\uD55C", "\uC5B4\uB5A4", "\uC5B4\uB5A4\uAC83", "\uC5B4\uB5A4\uAC83\uB4E4", "\uC5B4\uB5BB\uAC8C", "\uC5B4\uB5BB\uD574", "\uC5B4\uC774", "\uC5B4\uC9F8\uC11C", "\uC5B4\uCA0B\uB4E0", "\uC5B4\uCA54\uC218 \uC5C6\uB2E4", "\uC5B4\uCC0C", "\uC5B4\uCC0C\uB40F\uB4E0", "\uC5B4\uCC0C\uB40F\uC5B4", "\uC5B4\uCC0C\uD558\uB4E0\uC9C0", "\uC5B4\uCC0C\uD558\uC5EC", "\uC5B8\uC81C", "\uC5B8\uC820\uAC00", "\uC5BC\uB9C8", "\uC5BC\uB9C8 \uC548 \uB418\uB294 \uAC83", "\uC5BC\uB9C8\uAC04", "\uC5BC\uB9C8\uB098", "\uC5BC\uB9C8\uB4E0\uC9C0", "\uC5BC\uB9C8\uB9CC\uD07C", "\uC5BC\uB9C8\uD07C", "\uC5C9\uC5C9", "\uC5D0", "\uC5D0 \uAC00\uC11C", "\uC5D0 \uB2EC\uB824 \uC788\uB2E4", "\uC5D0 \uB300\uD574", "\uC5D0 \uC788\uB2E4", "\uC5D0 \uD55C\uD558\uB2E4", "\uC5D0\uAC8C", "\uC5D0\uC11C", "\uC5EC", "\uC5EC\uAE30", "\uC5EC\uB35F", "\uC5EC\uB7EC\uBD84", "\uC5EC\uBCF4\uC2DC\uC624", "\uC5EC\uBD80", "\uC5EC\uC12F", "\uC5EC\uC804\uD788", "\uC5EC\uCC28", "\uC5F0\uAD00\uB418\uB2E4", "\uC5F0\uC774\uC11C", "\uC601", "\uC601\uCC28", "\uC606\uC0AC\uB78C", "\uC608", "\uC608\uB97C \uB4E4\uBA74", "\uC608\uB97C \uB4E4\uC790\uBA74", "\uC608\uCEE8\uB300", "\uC608\uD558\uBA74", "\uC624", "\uC624\uB85C\uC9C0", "\uC624\uB974\uB2E4", "\uC624\uC790\uB9C8\uC790", "\uC624\uC9C1", "\uC624\uD638", "\uC624\uD788\uB824", "\uC640", "\uC640 \uAC19\uC740 \uC0AC\uB78C\uB4E4", "\uC640\uB974\uB974", "\uC640\uC544", "\uC65C", "\uC65C\uB0D0\uD558\uBA74", "\uC678\uC5D0\uB3C4", "\uC694\uB9CC\uD07C", "\uC694\uB9CC\uD55C \uAC83", "\uC694\uB9CC\uD55C\uAC78", "\uC694\uCEE8\uB300", "\uC6B0\uB974\uB974", "\uC6B0\uB9AC", "\uC6B0\uB9AC\uB4E4", "\uC6B0\uC120", "\uC6B0\uC5D0 \uC885\uD569\uD55C\uAC83\uACFC\uAC19\uC774", "\uC6B4\uC6B4", "\uC6D4", "\uC704\uC5D0\uC11C \uC11C\uC220\uD55C\uBC14\uC640\uAC19\uC774", "\uC704\uD558\uC5EC", "\uC704\uD574\uC11C", "\uC719\uC719", "\uC721", "\uC73C\uB85C", "\uC73C\uB85C \uC778\uD558\uC5EC", "\uC73C\uB85C\uC11C", "\uC73C\uB85C\uC368", "\uC744", "\uC751", "\uC751\uB2F9", "\uC758", "\uC758\uAC70\uD558\uC5EC", "\uC758\uC9C0\uD558\uC5EC", "\uC758\uD574", "\uC758\uD574\uB418\uB2E4", "\uC758\uD574\uC11C", "\uC774", "\uC774 \uB418\uB2E4", "\uC774 \uB54C\uBB38\uC5D0", "\uC774 \uBC16\uC5D0", "\uC774 \uC678\uC5D0", "\uC774 \uC815\uB3C4\uC758", "\uC774\uAC83", "\uC774\uACF3", "\uC774\uB54C", "\uC774\uB77C\uBA74", "\uC774\uB798", "\uC774\uB7EC\uC774\uB7EC\uD558\uB2E4", "\uC774\uB7EC\uD55C", "\uC774\uB7F0", "\uC774\uB7F4\uC815\uB3C4\uB85C", "\uC774\uB807\uAC8C \uB9CE\uC740 \uAC83", "\uC774\uB807\uAC8C\uB418\uBA74", "\uC774\uB807\uAC8C\uB9D0\uD558\uC790\uBA74", "\uC774\uB807\uAD6C\uB098", "\uC774\uB85C \uC778\uD558\uC5EC", "\uC774\uB974\uAE30\uAE4C\uC9C0", "\uC774\uB9AC\uD558\uC5EC", "\uC774\uB9CC\uD07C", "\uC774\uBC88", "\uC774\uBD10", "\uC774\uC0C1", "\uC774\uC5B4\uC11C", "\uC774\uC5C8\uB2E4", "\uC774\uC640 \uAC19\uB2E4", "\uC774\uC640 \uAC19\uC740", "\uC774\uC640 \uBC18\uB300\uB85C", "\uC774\uC640\uAC19\uB2E4\uBA74", "\uC774\uC678\uC5D0\uB3C4", "\uC774\uC6A9\uD558\uC5EC", "\uC774\uC720\uB9CC\uC73C\uB85C", "\uC774\uC820", "\uC774\uC9C0\uB9CC", "\uC774\uCABD", "\uC774\uCC9C\uAD6C", "\uC774\uCC9C\uC721", "\uC774\uCC9C\uCE60", "\uC774\uCC9C\uD314", "\uC778 \uB4EF\uD558\uB2E4", "\uC778\uC820", "\uC77C", "\uC77C\uAC83\uC774\uB2E4", "\uC77C\uACF1", "\uC77C\uB2E8", "\uC77C\uB54C", "\uC77C\uBC18\uC801\uC73C\uB85C", "\uC77C\uC9C0\uB77C\uB3C4", "\uC784\uC5D0 \uD2C0\uB9BC\uC5C6\uB2E4", "\uC785\uAC01\uD558\uC5EC", "\uC785\uC7A5\uC5D0\uC11C", "\uC787\uB530\uB77C", "\uC788\uB2E4", "\uC790", "\uC790\uAE30", "\uC790\uAE30\uC9D1", "\uC790\uB9C8\uC790", "\uC790\uC2E0", "\uC7A0\uAE50", "\uC7A0\uC2DC", "\uC800", "\uC800\uAC83", "\uC800\uAC83\uB9CC\uD07C", "\uC800\uAE30", "\uC800\uCABD", "\uC800\uD76C", "\uC804\uBD80", "\uC804\uC790", "\uC804\uD6C4", "\uC810\uC5D0\uC11C \uBCF4\uC544", "\uC815\uB3C4\uC5D0 \uC774\uB974\uB2E4", "\uC81C", "\uC81C\uAC01\uAE30", "\uC81C\uC678\uD558\uACE0", "\uC870\uAE08", "\uC870\uCC28", "\uC870\uCC28\uB3C4", "\uC878\uC878", "\uC880", "\uC88B\uC544", "\uC88D\uC88D", "\uC8FC\uB8E9\uC8FC\uB8E9", "\uC8FC\uC800\uD558\uC9C0 \uC54A\uACE0", "\uC904\uC740 \uBAB0\uB78F\uB2E4", "\uC904\uC740\uBAA8\uB978\uB2E4", "\uC911\uC5D0\uC11C", "\uC911\uC758\uD558\uB098", "\uC988\uC74C\uD558\uC5EC", "\uC989", "\uC989\uC2DC", "\uC9C0\uB4E0\uC9C0", "\uC9C0\uB9CC", "\uC9C0\uB9D0\uACE0", "\uC9C4\uC9DC\uB85C", "\uCABD\uC73C\uB85C", "\uCC28\uB77C\uB9AC", "\uCC38", "\uCC38\uB098", "\uCCAB\uBC88\uC9F8\uB85C", "\uCCC7", "\uCD1D\uC801\uC73C\uB85C", "\uCD1D\uC801\uC73C\uB85C \uB9D0\uD558\uBA74", "\uCD1D\uC801\uC73C\uB85C \uBCF4\uBA74", "\uCE60", "\uCF78\uCF78", "\uCF85\uCF85", "\uCFF5", "\uD0C0\uB2E4", "\uD0C0\uC778", "\uD0D5\uD0D5", "\uD1A0\uD558\uB2E4", "\uD1B5\uD558\uC5EC", "\uD22D", "\uD264", "\uD2C8\uD0C0", "\uD30D", "\uD314", "\uD37D", "\uD384\uB801", "\uD558", "\uD558\uAC8C\uB420\uAC83\uC774\uB2E4", "\uD558\uAC8C\uD558\uB2E4", "\uD558\uACA0\uB294\uAC00", "\uD558\uACE0 \uC788\uB2E4", "\uD558\uACE0\uC788\uC5C8\uB2E4", "\uD558\uACE4\uD558\uC600\uB2E4", "\uD558\uAD6C\uB098", "\uD558\uAE30 \uB54C\uBB38\uC5D0", "\uD558\uAE30 \uC704\uD558\uC5EC", "\uD558\uAE30\uB294\uD55C\uB370", "\uD558\uAE30\uB9CC \uD558\uBA74", "\uD558\uAE30\uBCF4\uB2E4\uB294", "\uD558\uAE30\uC5D0", "\uD558\uB098", "\uD558\uB290\uB2C8", "\uD558\uB294 \uAE40\uC5D0", "\uD558\uB294 \uD3B8\uC774 \uB0AB\uB2E4", "\uD558\uB294\uAC83\uB3C4", "\uD558\uB294\uAC83\uB9CC \uBABB\uD558\uB2E4", "\uD558\uB294\uAC83\uC774 \uB0AB\uB2E4", "\uD558\uB294\uBC14", "\uD558\uB354\uB77C\uB3C4", "\uD558\uB3C4\uB2E4", "\uD558\uB3C4\uB85D\uC2DC\uD0A4\uB2E4", "\uD558\uB3C4\uB85D\uD558\uB2E4", "\uD558\uB4E0\uC9C0", "\uD558\uB824\uACE0\uD558\uB2E4", "\uD558\uB9C8\uD130\uBA74", "\uD558\uBA74 \uD560\uC218\uB85D", "\uD558\uBA74\uB41C\uB2E4", "\uD558\uBA74\uC11C", "\uD558\uBB3C\uBA70", "\uD558\uC5EC\uAE08", "\uD558\uC5EC\uC57C", "\uD558\uC790\uB9C8\uC790", "\uD558\uC9C0 \uC54A\uB294\uB2E4\uBA74", "\uD558\uC9C0 \uC54A\uB3C4\uB85D", "\uD558\uC9C0\uB9C8", "\uD558\uC9C0\uB9C8\uB77C", "\uD558\uC9C0\uB9CC", "\uD558\uD558", "\uD55C \uAE4C\uB2ED\uC5D0", "\uD55C \uC774\uC720\uB294", "\uD55C \uD6C4", "\uD55C\uB2E4\uBA74", "\uD55C\uB2E4\uBA74 \uBAB0\uB77C\uB3C4", "\uD55C\uB370", "\uD55C\uB9C8\uB514", "\uD55C\uC801\uC774\uC788\uB2E4", "\uD55C\uCF20\uC73C\uB85C\uB294", "\uD55C\uD56D\uBAA9", "\uD560 \uB530\uB984\uC774\uB2E4", "\uD560 \uC0DD\uAC01\uC774\uB2E4", "\uD560 \uC904 \uC548\uB2E4", "\uD560 \uC9C0\uACBD\uC774\uB2E4", "\uD560 \uD798\uC774 \uC788\uB2E4", "\uD560\uB54C", "\uD560\uB9CC\uD558\uB2E4", "\uD560\uB9DD\uC815", "\uD560\uBFD0", "\uD560\uC218\uC788\uB2E4", "\uD560\uC218\uC788\uC5B4", "\uD560\uC904\uC54C\uB2E4", "\uD560\uC9C0\uB77C\uB3C4", "\uD560\uC9C0\uC5B8\uC815", "\uD568\uAED8", "\uD574\uB3C4\uB41C\uB2E4", "\uD574\uB3C4\uC88B\uB2E4", "\uD574\uBD10\uC694", "\uD574\uC11C\uB294 \uC548\uB41C\uB2E4", "\uD574\uC57C\uD55C\uB2E4", "\uD574\uC694", "\uD588\uC5B4\uC694", "\uD5A5\uD558\uB2E4", "\uD5A5\uD558\uC5EC", "\uD5A5\uD574\uC11C", "\uD5C8", "\uD5C8\uAC71", "\uD5C8\uD5C8", "\uD5C9", "\uD5C9\uD5C9", "\uD5D0\uB5A1\uD5D0\uB5A1", "\uD615\uC2DD\uC73C\uB85C \uC4F0\uC5EC", "\uD639\uC2DC", "\uD639\uC740", "\uD63C\uC790", "\uD6E8\uC52C", "\uD718\uC775", "\uD734", "\uD750\uD750", "\uD765", "\uD798\uC785\uC5B4", "\uFE3F", "\uFF5E", "\uFFE5"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_la.js
var require_stopwords_la = __commonJS({
  "node_modules/stopword/lib/stopwords_la.js"(exports) {
    var words = ["a", "ab", "ac", "ad", "at", "atque", "aut", "autem", "cum", "de", "dum", "e", "erant", "erat", "est", "et", "etiam", "ex", "haec", "hic", "hoc", "in", "ita", "me", "nec", "neque", "non", "per", "qua", "quae", "quam", "qui", "quibus", "quidem", "quo", "quod", "re", "rebus", "rem", "res", "sed", "si", "sic", "sunt", "tamen", "tandem", "te", "ut", "vel"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_lgg.js
var require_stopwords_lgg = __commonJS({
  "node_modules/stopword/lib/stopwords_lgg.js"(exports) {
    var words = ["ma", "ni", "ri", "eri", "di", "yi", "si", "ba", "nga", "i", "ra", "ku", "be", "yo", "da", "azini", "dria", "ru", "azi", "mu", "te", "ndra", "diyi", "ima", "mi", "alu", "nde", "alia", "le", "vile", "dri", "pati", "aria", "bo", "e'yo", "tu", "kini", "dii", "ama", "eyi", "dika", "pi", "e", "angu", "e'do", "pie", "ka", "ti", "o'du", "du"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_lggo.js
var require_stopwords_lggo = __commonJS({
  "node_modules/stopword/lib/stopwords_lggo.js"(exports) {
    var words = ["\u0301", "\u0300", "n\u0268", "m\xE0", "r\u0268", "d\u0268", "\u0268", "\u0301n\u0268", "\xE8r\u0268", "\u0301\xE1'", "s\u0268", "\xE0z\u0268", "y\u0268", "r\xE1", "v\u0268", "nga", "be", "m\u0268", "\xE0", "d\xE0", "k\u0289", "b\xE1", " \u0301l\xE9", "m\xE1", "e", "yo", "\u0300y\u0268", "ma", "k\u0268", "\xE0l\u0289", "\u0301m\xE0", "r\u0289\u0301", "dr\u0268", "pat\xED", "a", "\xE8", "y\xF3", "te", "\u0300\xE1", "m\xE0", "m\xE2", "d\xE1l\xE9", "y\xED", "\u030C", "p\u0268", "e'y\xF3", "ndr\xE1a", "bo", "di", "dr\xEC\xE1"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_lv.js
var require_stopwords_lv = __commonJS({
  "node_modules/stopword/lib/stopwords_lv.js"(exports) {
    var words = ["aiz", "ap", "apak\u0161", "apak\u0161pus", "ar", "ar\u012B", "aug\u0161pus", "bet", "bez", "bija", "biji", "biju", "bij\u0101m", "bij\u0101t", "b\u016Bs", "b\u016Bsi", "b\u016Bsiet", "b\u016Bsim", "b\u016Bt", "b\u016B\u0161u", "caur", "diem\u017E\u0113l", "diezin", "dro\u0161i", "d\u0113\u013C", "esam", "esat", "esi", "esmu", "gan", "gar", "iekam", "iekams", "iek\u0101m", "iek\u0101ms", "iek\u0161", "iek\u0161pus", "ik", "ir", "it", "itin", "iz", "ja", "jau", "jeb", "jeb\u0161u", "jel", "jo", "j\u0101", "ka", "kam\u0113r", "kaut", "kol\u012Bdz", "kop\u0161", "k\u0101", "k\u013Cuva", "k\u013Cuvi", "k\u013Cuvu", "k\u013Cuv\u0101m", "k\u013Cuv\u0101t", "k\u013C\u016Bs", "k\u013C\u016Bsi", "k\u013C\u016Bsiet", "k\u013C\u016Bsim", "k\u013C\u016Bst", "k\u013C\u016Bstam", "k\u013C\u016Bstat", "k\u013C\u016Bsti", "k\u013C\u016Bstu", "k\u013C\u016Bt", "k\u013C\u016B\u0161u", "labad", "lai", "lejpus", "l\u012Bdz", "l\u012Bdzko", "ne", "neb\u016Bt", "nedz", "nek\u0101", "nevis", "nezin", "no", "nu", "n\u0113", "otrpus", "pa", "par", "pat", "pie", "pirms", "pret", "priek\u0161", "p\u0101r", "p\u0113c", "starp", "tad", "tak", "tapi", "taps", "tapsi", "tapsiet", "tapsim", "tapt", "tap\u0101t", "tap\u0161u", "ta\u010Du", "te", "tiec", "tiek", "tiekam", "tiekat", "tieku", "tik", "tika", "tikai", "tiki", "tikko", "tiklab", "tikl\u012Bdz", "tiks", "tiksiet", "tiksim", "tikt", "tiku", "tikvien", "tik\u0101m", "tik\u0101t", "tik\u0161u", "tom\u0113r", "topat", "turpretim", "turpret\u012B", "t\u0101", "t\u0101d\u0113\u013C", "t\u0101lab", "t\u0101p\u0113c", "un", "uz", "vai", "var", "varat", "var\u0113ja", "var\u0113ji", "var\u0113ju", "var\u0113j\u0101m", "var\u0113j\u0101t", "var\u0113s", "var\u0113si", "var\u0113siet", "var\u0113sim", "var\u0113t", "var\u0113\u0161u", "vien", "virs", "virspus", "vis", "vi\u0146pus", "zem", "\u0101rpus", "\u0161aipus"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_mr.js
var require_stopwords_mr = __commonJS({
  "node_modules/stopword/lib/stopwords_mr.js"(exports) {
    var words = ["\u0905\u0927\u093F\u0915", "\u0905\u0928\u0947\u0915", "\u0905\u0936\u0940", "\u0905\u0938\u0932\u092F\u093E\u091A\u0947", "\u0905\u0938\u0932\u0947\u0932\u094D\u092F\u093E", "\u0905\u0938\u093E", "\u0905\u0938\u0942\u0928", "\u0905\u0938\u0947", "\u0906\u091C", "\u0906\u0923\u093F", "\u0906\u0924\u093E", "\u0906\u092A\u0932\u094D\u092F\u093E", "\u0906\u0932\u093E", "\u0906\u0932\u0940", "\u0906\u0932\u0947", "\u0906\u0939\u0947", "\u0906\u0939\u0947\u0924", "\u090F\u0915", "\u090F\u0915\u093E", "\u0915\u092E\u0940", "\u0915\u0930\u0923\u092F\u093E\u0924", "\u0915\u0930\u0942\u0928", "\u0915\u093E", "\u0915\u093E\u092E", "\u0915\u093E\u092F", "\u0915\u093E\u0939\u0940", "\u0915\u093F\u0935\u093E", "\u0915\u0940", "\u0915\u0947\u0932\u093E", "\u0915\u0947\u0932\u0940", "\u0915\u0947\u0932\u0947", "\u0915\u094B\u091F\u0940", "\u0917\u0947\u0932\u094D\u092F\u093E", "\u0918\u0947\u090A\u0928", "\u091C\u093E\u0924", "\u091D\u093E\u0932\u093E", "\u091D\u093E\u0932\u0940", "\u091D\u093E\u0932\u0947", "\u091D\u093E\u0932\u0947\u0932\u094D\u092F\u093E", "\u091F\u093E", "\u0921\u0949", "\u0924\u0930", "\u0924\u0930\u0940", "\u0924\u0938\u0947\u091A", "\u0924\u093E", "\u0924\u0940", "\u0924\u0940\u0928", "\u0924\u0947", "\u0924\u094B", "\u0924\u094D\u092F\u093E", "\u0924\u094D\u092F\u093E\u091A\u093E", "\u0924\u094D\u092F\u093E\u091A\u0940", "\u0924\u094D\u092F\u093E\u091A\u094D\u092F\u093E", "\u0924\u094D\u092F\u093E\u0928\u093E", "\u0924\u094D\u092F\u093E\u0928\u0940", "\u0924\u094D\u092F\u093E\u092E\u0941\u0933\u0947", "\u0924\u094D\u0930\u0940", "\u0926\u093F\u0932\u0940", "\u0926\u094B\u0928", "\u0928", "\u0928\u093E\u0939\u0940", "\u0928\u093F\u0930\u094D\u0923\u094D\u092F", "\u092A\u0923", "\u092A\u092E", "\u092A\u0930\u092F\u0924\u0928", "\u092A\u093E\u091F\u0940\u0932", "\u092E", "\u092E\u093E\u0924\u094D\u0930", "\u092E\u093E\u0939\u093F\u0924\u0940", "\u092E\u0940", "\u092E\u0941\u092C\u0940", "\u092E\u094D\u0939\u0923\u091C\u0947", "\u092E\u094D\u0939\u0923\u093E\u0932\u0947", "\u092E\u094D\u0939\u0923\u0942\u0928", "\u092F\u093E", "\u092F\u093E\u091A\u093E", "\u092F\u093E\u091A\u0940", "\u092F\u093E\u091A\u094D\u092F\u093E", "\u092F\u093E\u0928\u093E", "\u092F\u093E\u0928\u0940", "\u092F\u0947\u0923\u093E\u0930", "\u092F\u0947\u0924", "\u092F\u0947\u0925\u0940\u0932", "\u092F\u0947\u0925\u0947", "\u0932\u093E\u0916", "\u0935", "\u0935\u094D\u092F\u0915\u0924", "\u0938\u0930\u094D\u0935", "\u0938\u093E\u0917\u093F\u0924\u094D\u0932\u0947", "\u0938\u0941\u0930\u0942", "\u0939\u091C\u093E\u0930", "\u0939\u093E", "\u0939\u0940", "\u0939\u0947", "\u0939\u094B\u0923\u093E\u0930", "\u0939\u094B\u0924", "\u0939\u094B\u0924\u093E", "\u0939\u094B\u0924\u0940", "\u0939\u094B\u0924\u0947"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_my.js
var require_stopwords_my = __commonJS({
  "node_modules/stopword/lib/stopwords_my.js"(exports) {
    var words = ["\u1021\u1015\u1031\u102B\u103A", "\u1021\u1014\u1000\u103A", "\u1021\u1019\u103C\u1032\u1010\u1019\u103A\u1038", "\u1021\u1010\u103D\u1004\u103A\u1038\u1010\u103D\u1004\u103A", "\u1019\u1000\u103C\u102C\u1019\u102E", "\u1019\u1010\u102D\u102F\u1004\u103A\u1019\u102E", "\u1012\u102B\u1037\u1021\u1015\u103C\u1004\u103A", "\u1021\u1031\u102C\u1000\u103A\u1019\u103E\u102C", "\u1021\u1011\u1032\u1019\u103E\u102C", "\u1018\u101A\u103A\u1010\u1031\u102C\u1037\u1019\u103B\u103E", "\u1019\u1000\u103C\u102C\u1001\u100F", "\u1010\u1031\u102C\u103A\u1010\u1031\u102C\u103A\u101C\u1031\u1038", "\u1005\u1009\u103A\u1010\u103D\u1004\u103A", "\u1014\u103E\u1004\u103A\u1037\u1021\u1010\u1030", "\u1014\u103E\u1004\u103A\u1037", "\u1014\u103E\u1004\u103A\u1037\u1010\u1000\u103D", "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A", "\u1000\u103B\u103D\u1014\u103A\u1019", "\u1004\u102B", "\u1000\u103B\u102F\u1015\u103A", "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A", "\u1000\u103B\u1014\u1031\u102C\u103A", "\u1000\u103B\u1019", "\u101E\u1030", "\u101E\u1030\u1019", "\u1011\u102D\u102F\u101F\u102C", "\u1011\u102D\u102F\u1021\u101B\u102C", "\u1024\u1021\u101B\u102C", "\u1011\u102D\u102F", "\u1044\u1004\u103A\u1038", "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1010\u102D\u102F\u1037", "\u1000\u103B\u103D\u1014\u103A\u1019\u1010\u102D\u102F\u1037", "\u1004\u102B\u1010\u102D\u102F\u1037", "\u1000\u103B\u102F\u1015\u103A\u1010\u102D\u102F\u1037", "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1010\u102D\u102F\u1037", "\u1000\u103B\u1014\u1031\u102C\u103A\u1010\u102D\u102F\u1037", "\u1000\u103B\u1019\u1010\u102D\u102F\u1037", "\u101E\u1004\u103A", "\u101E\u1004\u103A\u1010\u102D\u102F\u1037", "\u1014\u1004\u103A\u1010\u102D\u102F\u1037", "\u1019\u1004\u103A\u1038", "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037", "\u101E\u1030\u1010\u102D\u102F\u1037", "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1021\u102C\u1038", "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1000\u102D\u102F", "\u1000\u103B\u103D\u1014\u103A\u1019\u1000\u102D\u102F", "\u1004\u102B\u1000\u102D\u102F", "\u1000\u103B\u102F\u1015\u103A\u1000\u102D\u102F", "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1000\u102D\u102F", "\u101E\u1030\u1037\u1000\u102D\u102F", "\u101E\u1030\u1019\u1000\u102D\u102F", "\u1011\u102D\u102F\u1021\u101B\u102C\u1000\u102D\u102F", "\u101E\u1004\u103A\u1037\u1000\u102D\u102F", "\u101E\u1004\u103A\u1010\u102D\u102F\u1037\u1000\u102D\u102F", "\u1014\u1004\u103A\u1010\u102D\u102F\u1037\u1000\u102D\u102F", "\u1019\u1004\u103A\u1038\u1000\u102D\u102F", "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u1000\u102D\u102F", "\u1004\u102B\u1010\u102D\u102F\u1037\u1000\u102D\u102F", "\u1000\u103B\u102F\u1015\u103A\u1010\u102D\u102F\u1037\u1000\u102D\u102F", "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1010\u102D\u102F\u1037\u1000\u102D\u102F", "\u1019\u102D\u1019\u102D\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A", "\u1019\u102D\u1019\u102D\u1018\u102C\u101E\u102C", "\u1019\u1004\u103A\u1038\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A", "\u1019\u1004\u103A\u1038\u1018\u102C\u101E\u102C", "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A", "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u1018\u102C\u101E\u102C", "\u101E\u1030\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A", "\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A", "\u101E\u1030\u1019\u1000\u102D\u102F\u101A\u103A\u1010\u102D\u102F\u1004\u103A", "\u101E\u1030\u1037\u1018\u102C\u101E\u102C", "\u101E\u1030\u1037\u1000\u102D\u102F\u101A\u103A\u1000\u102D\u102F", "\u1000\u102D\u102F\u101A\u103A\u1037\u1000\u102D\u102F\u101A\u103A\u1000\u102D\u102F", "\u1019\u102D\u1019\u102D\u1000\u102D\u102F\u101A\u103A\u1000\u102D\u102F", "\u1044\u1004\u103A\u1038\u1015\u1004\u103A", "\u1011\u102D\u102F\u1021\u101B\u102C\u1015\u1004\u103A", "\u101E\u100A\u103A\u1037", "\u1019\u100A\u103A\u1037", "\u1010\u1032\u1037", "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u104F", "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u104F", "\u1000\u103B\u103D\u1014\u103A\u1019\u104F", "\u1000\u103B\u1014\u1031\u102C\u103A\u104F", "\u1000\u103B\u1019\u104F", "\u101E\u1030\u104F", "\u101E\u1030\u1019\u104F", "\u1011\u102D\u102F\u1021\u101B\u102C\u104F", "\u1011\u102D\u102F\u101F\u102C\u104F", "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1010\u102D\u102F\u1037\u104F", "\u1004\u102B\u1010\u102D\u102F\u1037\u104F", "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1010\u102D\u102F\u1037\u104F", "\u1000\u103B\u103D\u1014\u103A\u1019\u1010\u102D\u102F\u1037\u104F", "\u1000\u103B\u1014\u1031\u102C\u103A\u1010\u102D\u102F\u1037\u104F", "\u1000\u103B\u1019\u1010\u102D\u102F\u1037\u104F", "\u101E\u1004\u103A\u104F", "\u101E\u1004\u103A\u1010\u102D\u102F\u1037\u104F", "\u1019\u1004\u103A\u1038\u104F", "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u104F", "\u101E\u1030\u1010\u102D\u102F\u1037\u104F", "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1037\u101F\u102C", "\u1000\u103B\u103D\u1014\u103A\u1019\u101F\u102C", "\u1000\u103B\u1014\u1031\u102C\u103A\u104F\u101F\u102C", "\u1000\u103B\u1019\u104F\u101F\u102C", "\u1000\u103B\u1019\u101F\u102C", "\u1000\u103B\u1014\u1031\u102C\u103A\u101F\u102C", "\u101E\u1030\u101F\u102C", "\u101E\u1030\u1019\u101F\u102C", "\u101E\u1030\u1037\u101F\u102C", "\u1000\u103B\u103D\u1014\u102F\u103A\u1015\u103A\u1010\u102D\u102F\u1037\u101F\u102C", "\u1000\u103B\u103D\u1014\u103A\u1010\u1031\u102C\u103A\u1010\u102D\u102F\u1037\u101F\u102C", "\u1000\u103B\u103D\u1014\u103A\u1019\u1010\u102D\u102F\u1037\u101F\u102C", "\u101E\u1004\u103A\u1010\u102D\u102F\u1037\u101F\u102C", "\u1019\u1004\u103A\u1038\u1010\u102D\u102F\u1037\u101F\u102C", "\u101E\u1030\u1010\u102D\u102F\u1037\u101F\u102C", "\u101E\u1030\u1019\u1010\u102D\u102F\u1037\u101F\u102C", "\u1024\u1021\u101B\u102C", "\u101F\u1031\u102C\u1012\u102B", "\u101F\u1031\u102C\u1012\u102E", "\u101F\u1031\u102C\u1012\u102E\u101F\u102C", "\u1012\u102E\u101F\u102C", "\u1012\u102B", "\u1011\u102D\u102F\u1021\u101B\u102C", "\u1044\u1004\u103A\u1038\u1021\u101B\u102C", "\u101A\u1004\u103A\u1038\u1021\u101B\u102C", "\u1021\u1032\u1012\u102B", "\u101F\u102D\u102F\u101F\u102C", "\u1021\u1001\u103B\u102D\u102F\u1037", "\u1010\u1005\u103A\u1001\u102F\u1001\u102F", "\u1021\u1018\u101A\u103A\u1019\u1006\u102D\u102F", "\u1018\u101A\u103A\u1021\u101B\u102C\u1019\u1006\u102D\u102F", "\u1021\u1018\u101A\u103A\u1019\u100A\u103A\u101E\u1031\u102C", "\u1021\u1000\u103C\u1004\u103A", "\u1021\u101B\u102C\u101B\u102C\u1010\u102D\u102F\u1004\u103A\u1038", "\u1005\u102D\u102F\u1038\u1005\u1009\u103A\u1019\u103B\u103E", "\u1005\u102D\u102F\u1038\u1005\u1009\u103A\u1038\u1019\u103B\u103E", "\u1018\u101A\u103A\u101C\u1031\u102C\u1000\u103A\u1019\u1006\u102D\u102F", "\u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u101B\u102C", "\u1010\u1005\u102F\u1036\u1010\u101B\u102C", "\u1021\u101C\u103B\u1009\u103A\u1038\u1019\u101F\u102F\u1010\u103A", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1014\u103E\u1004\u103A\u1037\u1019\u103B\u103E\u1019\u101F\u102F\u1010\u103A", "\u1021\u101C\u103B\u1009\u103A\u1038\u1019\u101B\u103E\u102D\u101E\u1031\u102C", "\u1021\u1001\u103C\u102C\u1038\u1016\u103C\u1005\u103A\u101E\u1031\u102C", "\u1021\u1001\u103C\u102C\u1038\u101E\u1031\u102C", "\u1021\u1001\u103C\u102C\u1038\u1010\u1005\u103A\u1001\u102F", "\u1021\u1001\u103C\u102C\u1038\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A", "\u1021\u102C\u1038\u101C\u102F\u1036\u1038", "\u1021\u101B\u102C\u101B\u102C\u1010\u102D\u102F\u1004\u103A\u1038", "\u1021\u1000\u102F\u1014\u103A\u101C\u102F\u1036\u1038", "\u1021\u101C\u102F\u1036\u1038\u1005\u102F\u1036", "\u1021\u101B\u102C\u1001\u1015\u103A\u101E\u102D\u1019\u103A\u1038", "\u1010\u1005\u103A\u1001\u102F\u1005\u102E", "\u1021\u101E\u102E\u1038\u101E\u102E\u1038", "\u1010\u1005\u103A\u1026\u1038\u1026\u1038", "\u1010\u1005\u103A\u1001\u102F\u1001\u102F", "\u1000\u102D\u102F\u101A\u103A\u1005\u102E\u1000\u102D\u102F\u101A\u103A\u1004\u103E", "\u1000\u102D\u102F\u101A\u103A\u1005\u102E", "\u1010\u1005\u103A\u1026\u1038\u1005\u102E", "\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A\u1005\u102E", "\u1010\u1005\u103A\u1001\u102F\u1005\u102E", "\u1021\u1000\u102F\u1014\u103A", "\u1021\u1015\u103C\u100A\u103A\u1037\u1021\u1005\u102F\u1036", "\u101C\u102F\u1036\u1038\u101C\u102F\u1036\u1038", "\u1014\u103E\u1005\u103A\u1001\u102F\u101C\u102F\u1036\u1038", "\u1014\u103E\u1005\u103A\u101A\u1031\u102C\u1000\u103A\u101C\u102F\u1036\u1038", "\u1014\u103E\u1005\u103A\u1018\u1000\u103A\u101C\u102F\u1036\u1038", "\u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u101B\u102C", "\u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u1001\u102F", "\u1010\u1005\u102F\u1036\u1010\u1001\u102F", "\u1010\u1005\u103A\u1005\u102F\u1036\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A", "\u1010\u1005\u102F\u1036\u1010\u101A\u1031\u102C\u1000\u103A", "\u1010\u1005\u103A\u101A\u1031\u102C\u1000\u103A\u101A\u1031\u102C\u1000\u103A", "\u1019\u100A\u103A\u101E\u1030\u1019\u1006\u102D\u102F", "\u1018\u102C\u1019\u103B\u103E\u1019\u101B\u103E\u102D", "\u1018\u102C\u1019\u103E\u1019\u101B\u103E\u102D", "\u1021\u1018\u101A\u103A\u1021\u101B\u102C\u1019\u103B\u103E\u1019\u101B\u103E\u102D", "\u101C\u1030\u1010\u102D\u102F\u1004\u103A\u1038", "\u101C\u1030\u1010\u1000\u102C", "\u1014\u103E\u1004\u103A\u1037", "\u1015\u103C\u102E\u1038\u101C\u103B\u103E\u1004\u103A", "\u1044\u1004\u103A\u1038\u1014\u1031\u102C\u1000\u103A", "\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A", "\u101E\u102D\u102F\u1037\u1010\u100A\u103A\u1038\u1019\u101F\u102F\u1010\u103A", "\u101E\u102D\u102F\u1037\u1019\u101F\u102F\u1010\u103A\u101C\u103B\u103E\u1004\u103A", "\u1012\u102B\u1019\u103E\u1019\u101F\u102F\u1010\u103A", "\u1016\u103C\u1005\u103A\u1005\u1031", "\u101E\u102D\u102F\u1037\u1005\u1031\u1000\u102C\u1019\u1030", "\u1012\u102B\u1015\u1031\u1019\u101A\u103A\u1037", "\u1012\u102B\u1015\u1031\u1019\u1032\u1037", "\u1019\u103E\u1010\u1005\u103A\u1015\u102B\u1038", "\u1019\u103E\u101C\u103D\u1032\u101C\u103B\u103E\u1004\u103A", "\u1021\u1018\u101A\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037\u1006\u102D\u102F\u101E\u1031\u102C\u103A", "\u101E\u1031\u102C\u1000\u103C\u1031\u102C\u1004\u103A\u1037", "\u101E\u1016\u103C\u1004\u103A\u1037", "\u104D", "\u101E\u100A\u103A\u1037\u1021\u1010\u103D\u1000\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037", "\u101C\u103B\u103E\u1004\u103A", "\u1015\u102B\u1000", "\u1021\u1000\u101A\u103A\u104D", "\u101E\u1031\u102C\u103A\u1004\u103C\u102C\u1038\u101C\u100A\u103A\u1038", "\u1005\u1031\u1000\u102C\u1019\u1030", "\u1014\u100A\u103A\u1038\u1010\u1030", "\u1015\u1031\u1019\u101A\u103A\u1037", "\u1015\u1031\u1019\u1032\u1037", "\u1011\u102D\u102F\u1014\u100A\u103A\u1038\u1010\u1030\u1005\u103D\u102C", "\u1011\u102D\u102F\u1014\u100A\u103A\u1038\u1010\u1030", "\u1000\u1032\u1037\u101E\u102D\u102F\u1037", "\u101E\u1000\u1032\u1037\u101E\u102D\u102F\u1037", "\u101A\u1004\u103A\u1038\u1000\u1032\u1037\u101E\u102D\u102F\u1037", "\u1011\u102D\u102F\u1000\u1032\u1037\u101E\u102D\u102F\u1037", "\u1014\u103E\u1004\u103A\u1037\u1005\u1015\u103A\u101C\u103B\u1009\u103A\u1038\u104D", "\u1024\u1019\u103B\u103E", "\u1024\u1019\u103B\u103E\u101C\u1031\u102C\u1000\u103A", "\u1024\u1000\u1032\u1037\u101E\u102D\u102F\u1037", "\u1021\u1001\u102F\u101C\u1031\u102C\u1000\u103A\u1011\u102D", "\u1012\u102B\u1000\u1010\u1031\u102C\u1037", "\u1021\u1018\u101A\u103A\u1000\u1032\u1037\u101E\u101C\u102D\u102F\u1037", "\u1019\u100A\u103A\u1000\u1032\u1037\u101E\u102D\u102F\u1037", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1014\u103E\u1004\u103A\u1037", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1016\u103C\u1004\u103A\u1037", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1037\u1014\u103E\u1004\u103A\u1037\u1019\u1006\u102D\u102F", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1016\u103C\u1004\u103A\u1037\u1019\u1006\u102D\u102F", "\u1019\u100A\u103A\u101E\u102D\u102F\u1037", "\u1018\u101A\u103A\u101C\u102D\u102F\u101C\u1032", "\u101E\u102D\u102F\u1037\u1015\u1031\u1010\u100A\u103A\u1037", "\u101E\u102D\u102F\u1037\u1015\u1031\u1019\u100A\u103A\u1037", "\u1018\u101A\u103A\u1014\u100A\u103A\u1038\u1014\u103E\u1004\u103A\u1037", "\u1019\u100A\u103A\u101B\u103D\u1031\u1037\u1019\u100A\u103A\u1019\u103B\u103E", "\u1021\u1018\u101A\u103A\u1019\u103B\u103E\u101C\u1031\u102C\u1000\u103A", "\u1018\u101A\u103A\u101C\u1031\u102C\u1000\u103A", "\u1019\u100A\u103A\u101E\u1030", "\u1018\u101A\u103A\u101E\u1030", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u1000\u103C\u1031\u102C\u1004\u103A\u1038\u1000\u103C\u1031\u102C\u1004\u103A\u1037", "\u1018\u102C\u1021\u1010\u103D\u1000\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037", "\u1021\u1018\u101A\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u1010\u103D\u1000\u103A\u1000\u103C\u1031\u102C\u1004\u103A\u1037", "\u1018\u102C\u1000\u103C\u1031\u102C\u1004\u103A\u1037", "\u1018\u102C\u1021\u1010\u103D\u1000\u103A\u1014\u1032\u1037\u101C\u1032", "\u1019\u100A\u103A\u101E\u100A\u103A", "\u1018\u102C\u101C\u1032", "\u1021\u1018\u101A\u103A\u1021\u101B\u102C\u1014\u100A\u103A\u1038", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u1015\u103A\u1019\u103E\u102C", "\u1018\u101A\u103A\u1014\u1031\u101B\u102C\u1010\u103D\u1004\u103A", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u1031\u101B\u102C\u1010\u103D\u1004\u103A", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u1031\u101B\u102C\u101E\u102D\u102F\u1037", "\u1018\u101A\u103A\u1014\u1031\u101B\u102C\u101E\u102D\u102F\u1037", "\u1018\u101A\u103A\u1014\u1031\u101B\u102C\u1019\u103E\u102C", "\u1018\u101A\u103A\u101E\u1030\u104F", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u102C\u104F", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u1001\u102B", "\u1018\u101A\u103A\u1021\u1001\u103B\u102D\u1014\u103A", "\u1018\u101A\u103A\u1021\u1001\u102B", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u1001\u103B\u102D\u1014\u103A", "\u1018\u101A\u103A\u1010\u1031\u102C\u1037", "\u1019\u100A\u103A\u101E\u1030\u1000\u102D\u102F", "\u1019\u100A\u103A\u101E\u1030\u1000", "\u1018\u101A\u103A\u101E\u1030\u1037\u1000\u102D\u102F", "\u1019\u100A\u103A\u101E\u1030\u1019\u100A\u103A\u101D\u102B", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u102C", "\u1018\u101A\u103A\u1021\u101B\u102C", "\u1019\u100A\u103A\u101E\u102D\u102F\u1037\u1015\u1004\u103A\u1016\u103C\u1005\u103A\u1005\u1031", "\u1018\u101A\u103A\u101C\u102D\u102F\u1015\u1032\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A", "\u1019\u100A\u103A\u101B\u103D\u1031\u1037\u1019\u100A\u103A\u1019\u103B\u103E\u1016\u103C\u1005\u103A\u1005\u1031", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u100A\u103A\u1038\u1014\u103E\u1004\u103A\u1037\u1019\u1006\u102D\u102F", "\u1018\u101A\u103A\u1014\u100A\u103A\u1038\u1014\u1032\u1037\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A", "\u1019\u100A\u103A\u101E\u1030\u1019\u1006\u102D\u102F", "\u1018\u101A\u103A\u101E\u1030\u1019\u1006\u102D\u102F", "\u1021\u1018\u101A\u103A\u101E\u1030\u1019\u1006\u102D\u102F", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u102C\u1019\u1006\u102D\u102F", "\u1018\u102C\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u102C\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1021\u101B\u1015\u103A\u104C\u1019\u1006\u102D\u102F", "\u1019\u100A\u103A\u101E\u100A\u103A\u1037\u1014\u1031\u101B\u102C\u1019\u1006\u102D\u102F", "\u1018\u101A\u103A\u1021\u1001\u102B\u1019\u1006\u102D\u102F", "\u1018\u101A\u103A\u1021\u1001\u103B\u102D\u1014\u103A\u1019\u1006\u102D\u102F", "\u1018\u101A\u103A\u1021\u1001\u102B\u1016\u103C\u1005\u103A\u1016\u103C\u1005\u103A", "\u1021\u1001\u103B\u102D\u1014\u103A\u1021\u1001\u102B\u1019\u101B\u103D\u1031\u1038"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_nl.js
var require_stopwords_nl = __commonJS({
  "node_modules/stopword/lib/stopwords_nl.js"(exports) {
    var words = ["aan", "af", "al", "alles", "als", "altijd", "andere", "ben", "bij", "daar", "dan", "dat", "de", "der", "deze", "die", "dit", "doch", "doen", "door", "dus", "een", "eens", "en", "er", "ge", "geen", "geweest", "haar", "had", "heb", "hebben", "heeft", "hem", "het", "hier", "hij", "hoe", "hun", "iemand", "iets", "ik", "in", "is", "ja", "je ", "kan", "kon", "kunnen", "maar", "me", "meer", "men", "met", "mij", "mijn", "moet", "na", "naar", "niet", "niets", "nog", "nu", "of", "om", "omdat", "ons", "ook", "op", "over", "reeds", "te", "tegen", "toch", "toen", "tot", "u", "uit", "uw", "van", "veel", "voor", "want", "waren", "was", "wat", "we", "wel", "werd", "wezen", "wie", "wij", "wil", "worden", "zal", "ze", "zei", "zelf", "zich", "zij", "zijn", "zo", "zonder", "zou", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "$", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_", "-"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_no.js
var require_stopwords_no = __commonJS({
  "node_modules/stopword/lib/stopwords_no.js"(exports) {
    var words = ["og", "i", "jeg", "det", "at", "en", "et", "den", "til", "er", "som", "p\xE5", "de", "med", "han", "av", "ikke", "der", "s\xE5", "var", "meg", "seg", "men", "ett", "har", "om", "vi", "min", "mitt", "ha", "hadde", "hun", "n\xE5", "over", "da", "ved", "fra", "du", "ut", "sin", "dem", "oss", "opp", "man", "kan", "hans", "hvor", "eller", "hva", "skal", "selv", "sj\xF8l", "her", "alle", "vil", "bli", "ble", "blitt", "kunne", "inn", "n\xE5r", "kom", "noen", "noe", "ville", "dere", "som", "deres", "kun", "ja", "etter", "ned", "skulle", "denne", "for", "deg", "si", "sine", "sitt", "mot", "\xE5", "meget", "hvorfor", "dette", "disse", "uten", "hvordan", "ingen", "din", "ditt", "blir", "samme", "hvilken", "hvilke", "s\xE5nn", "inni", "mellom", "v\xE5r", "hver", "hvem", "vors", "hvis", "b\xE5de", "bare", "enn", "fordi", "f\xF8r", "mange", "ogs\xE5", "slik", "v\xE6rt", "v\xE6re", "begge", "siden", "henne", "hennar", "hennes", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_pa.js
var require_stopwords_pa = __commonJS({
  "node_modules/stopword/lib/stopwords_pa.js"(exports) {
    var words = ["\u0A26\u0A47", "0", "\u0A35\u0A3F\u0A71\u0A1A", "\u0A26\u0A3E", "\u0A05\u0A24\u0A47", "\u0A26\u0A40", "\u0A07\u0A71\u0A15", "\u0A28\u0A42\u0A70", "\u0A39\u0A48", "\u0A24\u0A4B\u0A02", "\u0A07\u0A38", "\u0A07\u0A39", "\u0A28\u0A47", "\u0A24\u0A47", "\u0A28\u0A3E\u0A32", "1", "\u0A32\u0A08", "\u0A35\u0A40", "\u0A38\u0A40", "\u0A35\u0A3F\u0A1A", "\u0A15\u0A3F", "\u0A1C\u0A4B", "\u0A09\u0A39", "\u0A09\u0A38", "\u0A39\u0A28", "\u0A1C\u0A3E\u0A02\u0A26\u0A3E", "\u0A15\u0A40\u0A24\u0A3E", "2", "\u0A17\u0A3F\u0A06", "\u0A39\u0A40", "\u0A15\u0A47", "\u0A1C\u0A3E\u0A02", "\u0A26\u0A40\u0A06\u0A02", "\u0A1C\u0A3F\u0A38", "\u0A15\u0A30\u0A28", "\u0A39\u0A4B", "\u0A15\u0A30", "\u0A06\u0A2A\u0A23\u0A47", "\u0A15\u0A40\u0A24\u0A40", "\u0A24\u0A4C\u0A30", "\u0A2C\u0A3E\u0A05\u0A26", "\u0A28\u0A39\u0A40\u0A02", "\u0A2D\u0A3E\u0A30\u0A24\u0A40", "\u0A2A\u0A3F\u0A70\u0A21", "3", "\u0A38\u0A3F\u0A70\u0A18", "\u0A09\u0A71\u0A24\u0A47", "\u0A38\u0A3E\u0A32", "\u0964", "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C", "\u0A38\u0A2D", "\u0A2D\u0A3E\u0A30\u0A24", "\u0A09\u0A28\u0A4D\u0A39\u0A3E\u0A02", "\u0A39\u0A41\u0A70\u0A26\u0A3E", "\u0A24\u0A71\u0A15", "\u0A07\u0A15", "\u0A39\u0A4B\u0A07\u0A06", "\u0A1C\u0A28\u0A2E", "\u0A2C\u0A39\u0A41\u0A24", "\u0A2A\u0A30", "\u0A26\u0A41\u0A06\u0A30\u0A3E", "\u0A30\u0A42\u0A2A", "4", "\u0A39\u0A4B\u0A30", "\u0A15\u0A70\u0A2E", "\u0A06\u0A2A\u0A23\u0A40", "\u0A24\u0A3E\u0A02", "\u0A38\u0A2E\u0A47\u0A02", "\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40", "\u0A17\u0A08", "\u0A26\u0A3F\u0A71\u0A24\u0A3E", "\u0A26\u0A4B", "\u0A15\u0A3F\u0A38\u0A47", "\u0A15\u0A08", "\u0A1C\u0A3E", "\u0A35\u0A3E\u0A32\u0A47", "\u0A38\u0A3C\u0A41\u0A30\u0A42", "5", "\u0A09\u0A38\u0A28\u0A47", "\u0A15\u0A3F\u0A39\u0A3E", "\u0A39\u0A4B\u0A23", "\u0A32\u0A4B\u0A15", "\u0A1C\u0A3E\u0A02\u0A26\u0A40", "\u0A35\u0A3F\u0A71\u0A1A\u0A4B\u0A02", "\u0A28\u0A3E\u0A2E", "\u0A1C\u0A26\u0A4B\u0A02", "\u0A2A\u0A39\u0A3F\u0A32\u0A3E\u0A02", "\u0A15\u0A30\u0A26\u0A3E", "\u0A39\u0A41\u0A70\u0A26\u0A40", "\u0A39\u0A4B\u0A0F", "\u0A38\u0A28", "\u0A35\u0A1C\u0A4B\u0A02", "\u0A30\u0A3E\u0A1C", "\u0A2E\u0A41\u0A71\u0A16", "\u0A15\u0A30\u0A26\u0A47", "\u0A15\u0A41\u0A1D", "\u0A38\u0A3E\u0A30\u0A47", "\u0A39\u0A41\u0A70\u0A26\u0A47", "\u0A38\u0A3C\u0A39\u0A3F\u0A30", "\u0A2D\u0A3E\u0A38\u0A3C\u0A3E", "6", "\u0A39\u0A4B\u0A08", "\u0A05\u0A28\u0A41\u0A38\u0A3E\u0A30", "\u0A38\u0A15\u0A26\u0A3E", "\u0A06\u0A2E", "\u0A35\u0A71\u0A16", "\u0A15\u0A4B\u0A08", "\u0A35\u0A3E\u0A30", "\u0A17\u0A0F", "\u0A16\u0A47\u0A24\u0A30", "\u0A1C\u0A40", "\u0A15\u0A3E\u0A30\u0A28", "\u0A15\u0A30\u0A15\u0A47", "\u0A1C\u0A3F\u0A35\u0A47\u0A02", "\u0A1C\u0A3C\u0A3F\u0A32\u0A4D\u0A39\u0A47", "\u0A32\u0A4B\u0A15\u0A3E\u0A02", "\u0A1A", "\u0A38\u0A3E\u0A39\u0A3F\u0A24", "\u0A38\u0A26\u0A40", "\u0A2C\u0A3E\u0A30\u0A47", "\u0A1C\u0A3E\u0A02\u0A26\u0A47", "\u0A35\u0A3E\u0A32\u0A3E", "\u0A1C\u0A3E\u0A23", "\u0A2A\u0A39\u0A3F\u0A32\u0A40", "\u0A2A\u0A4D\u0A30\u0A3E\u0A2A\u0A24", "\u0A30\u0A3F\u0A39\u0A3E", "\u0A35\u0A3E\u0A32\u0A40", "\u0A28\u0A3E\u0A02", "\u0A26\u0A4C\u0A30\u0A3E\u0A28", "\u0A24\u0A30\u0A4D\u0A39\u0A3E\u0A02", "7", "\u0A2F\u0A42\u0A28\u0A40\u0A35\u0A30\u0A38\u0A3F\u0A1F\u0A40", "\u0A28\u0A3E", "\u0A0F", "\u0A24\u0A3F\u0A70\u0A28", "\u0A07\u0A28\u0A4D\u0A39\u0A3E\u0A02", "\u0A17\u0A41\u0A30\u0A42", "\u0A07\u0A38\u0A28\u0A42\u0A70", "\u0A07\u0A39\u0A28\u0A3E\u0A02", "\u0A2A\u0A3F\u0A24\u0A3E", "\u0A32\u0A3F\u0A06", "\u0A38\u0A3C\u0A3E\u0A2E\u0A32", "\u0A38\u0A3C\u0A2C\u0A26", "\u0A05\u0A70\u0A17\u0A30\u0A47\u0A1C\u0A3C\u0A40", "\u0A09\u0A38\u0A28\u0A42\u0A70", "\u0A09\u0A39\u0A28\u0A3E\u0A02", "8", "\u0A38\u0A25\u0A3F\u0A24", "\u0A2B\u0A3F\u0A30", "\u0A1C\u0A40\u0A35\u0A28", "\u0A38\u0A15\u0A42\u0A32", "\u0A39\u0A41\u0A23", "\u0A26\u0A3F\u0A28", "\u0A15\u0A40\u0A24\u0A47", "\u0A06\u0A26\u0A3F", "\u0A35\u0A71\u0A27", "\u0A32\u0A48", "\u0A18\u0A30", "\u0A35\u0A71\u0A32", "\u0A26\u0A47\u0A38\u0A3C", "\u0A35\u0A32\u0A4B\u0A02", "\u0A2C\u0A23", "\u0A35\u0A40\u0A02", "\u0A2B\u0A3F\u0A32\u0A2E", "\u0A09\u0A2E\u0A30", "\u0A2C\u0A32\u0A3E\u0A15", "\u0A30\u0A39\u0A47", "10", "\u0A38\u0A3E\u0A39\u0A3F\u0A2C", "\u0A15\u0A30\u0A26\u0A40", "\u0A39\u0A30", "\u0A2A\u0A48\u0A26\u0A3E", "\u0A18\u0A71\u0A1F", "9", "\u0A32\u0A47\u0A16\u0A15", "\u0A39\u0A3F\u0A71\u0A38\u0A3E", "\u0A2B\u0A3C\u0A3F\u0A32\u0A2E", "\u0A2E\u0A4C\u0A24", "\u0A1C\u0A3F\u0A71\u0A25\u0A47", "\u0A35\u0A71\u0A21\u0A3E", "\u0A35\u0A3F\u0A16\u0A47", "\u0A06\u0A2A\u0A23\u0A3E", "\u0A2A\u0A39\u0A3F\u0A32\u0A3E", "\u0A35\u0A30\u0A24\u0A4B\u0A02", "\u0A06\u0A2A", "\u0A15\u0A30\u0A28\u0A3E", "\u0A35\u0A3F\u0A06\u0A39", "\u0A30\u0A39\u0A40", "\u0A30\u0A3E\u0A39\u0A40\u0A02", "\u0A26\u0A3F\u0A71\u0A24\u0A40", "\u0A09\u0A38\u0A26\u0A47", "\u0A2A\u0A30\u0A3F\u0A35\u0A3E\u0A30", "\u0A06", "\u0A26\u0A42\u0A1C\u0A47", "\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A3E", "\u0A2E\u0A70\u0A28\u0A3F\u0A06", "\u0A07\u0A38\u0A26\u0A47", "\u0A08", "\u0A15\u0A3E\u0A32\u0A1C", "\u0A38\u0A30\u0A15\u0A3E\u0A30", "\u0A07\u0A71\u0A25\u0A47", "\u0A2A\u0A3E\u0A15\u0A3F\u0A38\u0A24\u0A3E\u0A28", "\u0A38\u0A3C\u0A3E\u0A2E\u0A3F\u0A32", "\u0A35\u0A3F\u0A17\u0A3F\u0A06\u0A28", "\u0A09\u0A38\u0A26\u0A40", "\u0A2A\u0A47\u0A38\u0A3C", "\u0A15\u0A3F\u0A09\u0A02\u0A15\u0A3F", "\u0A2A\u0A39\u0A3F\u0A32\u0A47", "\u0A27\u0A30\u0A2E", "\u0A2E\u0A38\u0A3C\u0A39\u0A42\u0A30", "\u0A05\u0A70\u0A26\u0A30", "\u0A35\u0A3F\u0A1A\u0A4B\u0A02", "\u0A1C\u0A3F\u0A28\u0A4D\u0A39\u0A3E\u0A02", "\u0A1C\u0A3E\u0A23\u0A3F\u0A06", "\u0A2A\u0A3E\u0A23\u0A40", "\u0A07\u0A32\u0A3E\u0A35\u0A3E", "\u0A05\u0A30\u0A25", "\u0A1A\u0A3E\u0A30", "\u0A2A\u0A4D\u0A30\u0A38\u0A3F\u0A71\u0A27", "\u0A28\u0A3E\u0A35\u0A32", "\u0A35\u0A71\u0A21\u0A47", "\u0A35\u0A71\u0A32\u0A4B\u0A02", "\u0A15\u0A39\u0A3E\u0A23\u0A40", "\u0A35\u0A3F\u0A38\u0A3C\u0A35", "\u0A2E\u0A42\u0A32", "\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40", "\u0A38\u0A25\u0A3E\u0A28", "\u0A07\u0A24\u0A3F\u0A39\u0A3E\u0A38", "\u0A15\u0A41\u0A71\u0A1D", "\u0A35\u0A3F\u0A15\u0A3E\u0A38", "\u0A09\u0A71\u0A24\u0A30", "\u0A38\u0A3F\u0A71\u0A16\u0A3F\u0A06", "\u0A39\u0A3F\u0A70\u0A26\u0A40", "\u0A2A\u0A4D\u0A30\u0A2E\u0A41\u0A71\u0A16", "\u0A30\u0A1A\u0A28\u0A3E", "\u0A2C\u0A23\u0A3E\u0A07\u0A06", "\u0A35\u0A3F\u0A38\u0A3C\u0A47\u0A38\u0A3C", "\u0A21\u0A3E", "\u0A09\u0A71\u0A2A\u0A30", "\u0A2A\u0A71\u0A1B\u0A2E\u0A40", "\u0A26\u0A47\u0A23", "\u0A07\u0A38\u0A26\u0A3E", "\u0A38\u0A15\u0A26\u0A47", "\u0A30\u0A71\u0A16\u0A3F\u0A06", "\u0A15\u0A35\u0A40", "\u0A26\u0A3F\u0A71\u0A32\u0A40", "\u0A35\u0A71\u0A21\u0A40", "\u0A2D\u0A42\u0A2E\u0A3F\u0A15\u0A3E", "\u0A38\u0A2E\u0A3E\u0A1C", "\u0A15\u0A3E\u0A35\u0A3F", "\u0A15\u0A40", "\u0A15\u0A4B\u0A32", "\u0A26", "\u0A17\u0A71\u0A32", "\u0A38\u0A70\u0A38\u0A3E\u0A30", "\u0A2D\u0A3E\u0A17", "\u0A06\u0A08", "\u0A26\u0A71\u0A16\u0A23", "\u0A05\u0A71\u0A1C", "\u0A38\u0A3F\u0A71\u0A16", "\u0A15\u0A39\u0A3F\u0A70\u0A26\u0A47", "\u0A38\u0A70\u0A17\u0A40\u0A24", "\u0A15\u0A3F\u0A32\u0A4B\u0A2E\u0A40\u0A1F\u0A30", "\u0A1C\u0A3F\u0A39\u0A28\u0A3E\u0A02", "\u0A38\u0A2D\u0A3E", "\u0A1C\u0A3F\u0A38\u0A26\u0A3E", "\u0A1C\u0A28\u0A35\u0A30\u0A40", "\u0A15\u0A35\u0A3F\u0A24\u0A3E", "\u0A2E\u0A48\u0A02\u0A2C\u0A30", "\u0A32\u0A3F\u0A16\u0A3F\u0A06", "\u0A2E\u0A3E\u0A02", "\u0A15\u0A32\u0A3E", "\u0A2A\u0A70\u0A1C", "\u0A25\u0A3E\u0A02", "\u0A39\u0A47\u0A20", "\u0A1C\u0A3F\u0A06\u0A26\u0A3E", "\u0A35\u0A30\u0A24\u0A3F\u0A06", "\u0A2E\u0A3E\u0A30\u0A1A", "\u0A21\u0A40", "\u0A05\u0A15\u0A24\u0A42\u0A2C\u0A30", "\u0A24\u0A15", "\u0A28\u0A3E\u0A1F\u0A15", "\u0A2C\u0A40", "\u0A16\u0A3E\u0A38", "\u0A07\u0A38\u0A47", "\u0A06\u0A27\u0A41\u0A28\u0A3F\u0A15", "\u0A05\u0A17\u0A38\u0A24", "\u0A24\u0A3F\u0A06\u0A30", "\u0A2E\u0A3E\u0A24\u0A3E", "\u0A2C\u0A23\u0A3E\u0A09\u0A23", "\u0A28\u0A35\u0A70\u0A2C\u0A30", "\u0A35\u0A3F\u0A05\u0A15\u0A24\u0A40", "\u0A26\u0A71\u0A16\u0A23\u0A40", "\u0A26\u0A38\u0A70\u0A2C\u0A30", "\u0A06\u0A2B", "\u0A17\u0A40\u0A24", "\u0A17\u0A3F\u0A23\u0A24\u0A40", "\u0A15\u0A3E\u0A32", "\u0A16\u0A4B\u0A1C", "\u0A38\u0A3E\u0A32\u0A3E\u0A02", "\u0A2A\u0A42\u0A30\u0A40", "\u0A38\u0A2E\u0A3E\u0A02", "\u0A1C\u0A3C\u0A3F\u0A06\u0A26\u0A3E", "\u0A07\u0A38\u0A26\u0A40", "\u0A38\u0A15\u0A26\u0A40", "\u0A35\u0A3F\u0A1A\u0A15\u0A3E\u0A30", "\u0A30\u0A3E\u0A1C\u0A27\u0A3E\u0A28\u0A40", "\u0A09\u0A38\u0A26\u0A3E", "\u0A1C\u0A41\u0A32\u0A3E\u0A08", "\u0A1C\u0A42\u0A28", "\u0A05\u0A27\u0A40\u0A28", "\u0A38\u0A25\u0A3E\u0A2A\u0A28\u0A3E", "\u0A38\u0A47\u0A35\u0A3E", "\u0A2D\u0A3E\u0A35", "\u0A35\u0A30\u0A17", "\u0A1B\u0A4B\u0A1F\u0A47", "\u0A26\u0A3F\u0A70\u0A26\u0A3E", "\u0A38\u0A2E\u0A3E\u0A1C\u0A3F\u0A15", "\u0A39\u0A41\u0A70\u0A26\u0A40\u0A06\u0A02", "\u0A1F\u0A40\u0A2E", "\u0A14\u0A30\u0A24\u0A3E\u0A02", "\u0A05\u0A15\u0A38\u0A30", "\u0A2A\u0A4D\u0A30\u0A15\u0A3E\u0A38\u0A3C\u0A3F\u0A24", "\u0A09\u0A30\u0A26\u0A42", "\u0A30\u0A70\u0A17", "\u0A2A\u0A3E\u0A30\u0A1F\u0A40", "\u0A2C\u0A23\u0A3E", "\u0A2A\u0A4D\u0A30\u0A2D\u0A3E\u0A35", "\u0A38\u0A3C\u0A41\u0A30\u0A42\u0A06\u0A24", "\u0A32\u0A17\u0A2D\u0A17", "\u0A2E\u0A08", "\u0A38\u0A3F\u0A30\u0A2B", "\u0A28\u0A47\u0A5C\u0A47", "\u0A1C\u0A3F\u0A38\u0A28\u0A42\u0A70", "\u0A39\u0A3E\u0A32\u0A3E\u0A02\u0A15\u0A3F", "\u0A26\u0A42\u0A30", "\u0A38\u0A24\u0A70\u0A2C\u0A30", "\u0A15\u0A3F\u0A24\u0A3E\u0A2C", "\u0A15\u0A26\u0A47", "\u0A09\u0A71\u0A24\u0A30\u0A40", "\u0A2A\u0A4D\u0A30\u0A15\u0A3E\u0A30", "\u0A07\u0A38\u0A28\u0A47", "\u0A2A\u0A4D\u0A30\u0A26\u0A47\u0A38\u0A3C", "\u0A05\u0A71\u0A17\u0A47", "\u0A38\u0A70\u0A2F\u0A41\u0A15\u0A24", "\u0A2A\u0A5C\u0A4D\u0A39\u0A3E\u0A08", "\u0A35\u0A27\u0A47\u0A30\u0A47", "\u0A28\u0A3E\u0A32\u0A3C", "\u0A2E\u0A28\u0A41\u0A71\u0A16", "\u0A2C\u0A3E\u0A15\u0A40", "\u0A2A\u0A4D\u0A30\u0A27\u0A3E\u0A28", "\u0A26\u0A42\u0A1C\u0A40", "\u0A15\u0A41\u0A71\u0A32", "\u0A06\u0A2B\u0A3C", "\u0A05\u0A27\u0A3F\u0A10\u0A28", "\u0A30\u0A3E\u0A38\u0A3C\u0A1F\u0A30\u0A40", "\u0A2A\u0A41\u0A71\u0A24\u0A30", "\u0A05\u0A70\u0A24\u0A30\u0A30\u0A3E\u0A38\u0A3C\u0A1F\u0A30\u0A40", "\u0A27\u0A30\u0A24\u0A40", "\u0A15\u0A47\u0A02\u0A26\u0A30", "\u0A26\u0A47\u0A38\u0A3C\u0A3E\u0A02", "\u0A2E\u0A71\u0A27", "\u0A1C\u0A3C\u0A3F\u0A32\u0A4D\u0A39\u0A3E", "\u0A38\u0A3E\u0A30\u0A40\u0A06\u0A02", "\u0A2A\u0A71\u0A27\u0A30", "\u0A39\u0A4B\u0A35\u0A47", "\u0A1C\u0A47", "\u0A2D\u0A3E\u0A08", "\u0A30\u0A39\u0A3F\u0A23", "\u0A2A\u0A41\u0A30\u0A38\u0A15\u0A3E\u0A30", "\u0A38\u0A2D\u0A3F\u0A06\u0A1A\u0A3E\u0A30", "\u0A2A\u0A24\u0A3E", "\u0A2A\u0A3E\u0A38\u0A47", "\u0A28\u0A35\u0A47\u0A02", "\u0A15\u0A70\u0A2A\u0A28\u0A40", "\u0A2C\u0A3E\u0A39\u0A30", "\u0A35\u0A47\u0A32\u0A47", "\u0A38\u0A70\u0A28", "\u0A2A\u0A42\u0A30\u0A2C\u0A40", "\u0A35\u0A3F\u0A1A\u0A3E\u0A30", "\u0A15\u0A3E\u0A30\u0A1C", "\u0A2A\u0A40", "\u0A2E\u0A39\u0A71\u0A24\u0A35\u0A2A\u0A42\u0A30\u0A28", "\u0A26\u0A41\u0A28\u0A40\u0A06\u0A02", "\u0A27\u0A3E\u0A30\u0A2E\u0A3F\u0A15", "\u0A2E\u0A28\u0A41\u0A71\u0A16\u0A40", "\u0A38\u0A2E\u0A42\u0A39", "\u0A05\u0A1C\u0A3F\u0A39\u0A47", "\u0A32\u0A3E\u0A32", "\u0A26\u0A42\u0A1C\u0A3E", "\u0A2D\u0A30\u0A3E", "\u0A38\u0A4D\u0A30\u0A40", "\u0A05\u0A70\u0A24", "\u0A1C\u0A3E\u0A02\u0A26\u0A40\u0A06\u0A02", "\u0A38\u0A3C\u0A3E\u0A39", "\u0A30\u0A39\u0A3F\u0A70\u0A26\u0A47", "\u0A2E\u0A39\u0A3E\u0A28", "\u0A1A\u0A40\u0A28", "\u0A2E\u0A40\u0A1F\u0A30", "\u0A35\u0A30\u0A17\u0A47", "\u0A28\u0A3E\u0A32\u0A4B\u0A02", "\u0A39\u0A3E\u0A38\u0A32", "\u0A15\u0A3F\u0A38\u0A2E", "\u0A05\u0A1C\u0A3F\u0A39\u0A3E", "\u0A2C\u0A23\u0A3F\u0A06", "\u0A2D\u0A30", "\u0A1B\u0A71\u0A21", "\u0A32\u0A48\u0A23", "\u0A39\u0A3F\u0A71\u0A38\u0A47", "\u0A1F\u0A40", "\u0A32\u0A3F\u0A16\u0A47", "\u0A2E\u0A3F\u0A32", "\u0A2E\u0A4C\u0A1C\u0A42\u0A26", "\u0A26\u0A3F\u0A71\u0A24\u0A47", "\u0A35\u0A3E\u0A38\u0A24\u0A47", "\u0A35\u0A3E\u0A32\u0A40\u0A06\u0A02", "\u0A35\u0A27\u0A40\u0A06", "\u0A30\u0A42\u0A38\u0A40", "\u0A1C\u0A3E\u0A30\u0A40", "\u0A38\u0A30\u0A15\u0A3E\u0A30\u0A40", "\u0A21\u0A3F\u0A17\u0A30\u0A40", "\u0A2A\u0A71\u0A1B\u0A2E", "\u0A32\u0A5C\u0A3E\u0A08", "\u0A2D\u0A3E\u0A38\u0A3C\u0A3E\u0A35\u0A3E\u0A02", "\u0A30\u0A3E\u0A1C\u0A3E", "\u0A1C\u0A32\u0A70\u0A27\u0A30", "\u0A39\u0A3F\u0A70\u0A26\u0A42", "\u0A14\u0A30\u0A24", "\u0A1C\u0A70\u0A17", "\u0A2C\u0A3E\u0A2C\u0A3E", "\u0A2C\u0A71\u0A1A\u0A3F\u0A06\u0A02", "\u0A2E\u0A70\u0A24\u0A30\u0A40", "\u0A2A\u0A1F\u0A3F\u0A06\u0A32\u0A3E", "\u0A35\u0A3E\u0A02\u0A17", "\u0A06\u0A09\u0A23", "\u0A2D\u0A3E\u0A35\u0A47\u0A02", "\u0A15\u0A47\u0A35\u0A32", "\u0A10\u0A38", "\u0A2A\u0A4D\u0A30\u0A3E\u0A1A\u0A40\u0A28", "\u0A30\u0A39\u0A3F\u0A70\u0A26\u0A3E", "\u0A2C\u0A4B\u0A32\u0A40", "\u0A05\u0A35\u0A3E\u0A30\u0A21", "\u0A28\u0A17\u0A30", "\u0A16\u0A47\u0A21\u0A3E\u0A02", "\u0A2B\u0A3F\u0A32\u0A2E\u0A3E\u0A02", "\u0A2C\u0A71\u0A1A\u0A47", "\u0A15\u0A4C\u0A30", "\u0A24\u0A4B", "\u0A2A\u0A4D\u0A30\u0A24\u0A40", "\u0A15\u0A41\u0A06\u0A02\u0A1F\u0A2E", "\u0A05\u0A2C\u0A3E\u0A26\u0A40", "\u0A2A\u0A41\u0A38\u0A24\u0A15", "\u0A10\u0A2E", "\u0A30\u0A3E\u0A2E", "\u0A16\u0A47\u0A24\u0A30\u0A3E\u0A02", "\u0A2B\u0A30\u0A35\u0A30\u0A40", "\u0A15\u0A4D\u0A30\u0A3F\u0A15\u0A1F", "\u0A2A\u0A48\u0A02\u0A26\u0A3E", "\u0A07\u0A24\u0A3F\u0A39\u0A3E\u0A38\u0A15", "\u0A32\u0A71\u0A17", "\u0A2C\u0A4D\u0A30\u0A3F\u0A1F\u0A3F\u0A38\u0A3C", "\u0A06\u0A07\u0A06", "\u0A2E\u0A3F\u0A32\u0A26\u0A3E"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_pl.js
var require_stopwords_pl = __commonJS({
  "node_modules/stopword/lib/stopwords_pl.js"(exports) {
    var words = ["a", "aby", "ach", "acz", "aczkolwiek", "aj", "albo", "ale", "ale\u017C", "ani", "a\u017C", "bardziej", "bardzo", "bo", "bowiem", "by", "byli", "bynajmniej", "by\u0107", "by\u0142", "by\u0142a", "by\u0142o", "by\u0142y", "b\u0119dzie", "b\u0119d\u0105", "cali", "ca\u0142a", "ca\u0142y", "ci", "ci\u0119", "ciebie", "co", "cokolwiek", "co\u015B", "czasami", "czasem", "czemu", "czy", "czyli", "daleko", "dla", "dlaczego", "dlatego", "do", "dobrze", "dok\u0105d", "do\u015B\u0107", "du\u017Co", "dwa", "dwaj", "dwie", "dwoje", "dzi\u015B", "dzisiaj", "gdy", "gdyby", "gdy\u017C", "gdzie", "gdziekolwiek", "gdzie\u015B", "i", "ich", "ile", "im", "inna", "inne", "inny", "innych", "i\u017C", "ja", "j\u0105", "jak", "jaka\u015B", "jakby", "jaki", "jakich\u015B", "jakie", "jaki\u015B", "jaki\u017C", "jakkolwiek", "jako", "jako\u015B", "je", "jeden", "jedna", "jedno", "jednak", "jednak\u017Ce", "jego", "jej", "jemu", "jest", "jestem", "jeszcze", "je\u015Bli", "je\u017Celi", "ju\u017C", "j\u0105", "ka\u017Cdy", "kiedy", "kilka", "kim\u015B", "kto", "ktokolwiek", "kto\u015B", "kt\xF3ra", "kt\xF3re", "kt\xF3rego", "kt\xF3rej", "kt\xF3ry", "kt\xF3rych", "kt\xF3rym", "kt\xF3rzy", "ku", "lat", "lecz", "lub", "ma", "maj\u0105", "ma\u0142o", "mam", "mi", "mimo", "mi\u0119dzy", "mn\u0105", "mnie", "mog\u0105", "moi", "moim", "moja", "moje", "mo\u017Ce", "mo\u017Cliwe", "mo\u017Cna", "m\xF3j", "mu", "musi", "my", "na", "nad", "nam", "nami", "nas", "nasi", "nasz", "nasza", "nasze", "naszego", "naszych", "natomiast", "natychmiast", "nawet", "ni\u0105", "nic", "nich", "nie", "niech", "niego", "niej", "niemu", "nigdy", "nim", "nimi", "ni\u017C", "no", "o", "obok", "od", "oko\u0142o", "on", "ona", "one", "oni", "ono", "oraz", "oto", "owszem", "pan", "pana", "pani", "po", "pod", "podczas", "pomimo", "ponad", "poniewa\u017C", "powinien", "powinna", "powinni", "powinno", "poza", "prawie", "przecie\u017C", "przed", "przede", "przedtem", "przez", "przy", "roku", "r\xF3wnie\u017C", "sam", "sama", "s\u0105", "si\u0119", "sk\u0105d", "sobie", "sob\u0105", "spos\xF3b", "swoje", "ta", "tak", "taka", "taki", "takie", "tak\u017Ce", "tam", "te", "tego", "tej", "temu", "ten", "teraz", "te\u017C", "to", "tob\u0105", "tobie", "tote\u017C", "trzeba", "tu", "tutaj", "twoi", "twoim", "twoja", "twoje", "twym", "tw\xF3j", "ty", "tych", "tylko", "tym", "u", "w", "wam", "wami", "was", "wasz", "za\u015B", "wasza", "wasze", "we", "wed\u0142ug", "wiele", "wielu", "wi\u0119c", "wi\u0119cej", "t\u0119", "wszyscy", "wszystkich", "wszystkie", "wszystkim", "wszystko", "wtedy", "wy", "w\u0142a\u015Bnie", "z", "za", "zapewne", "zawsze", "ze", "z\u0142", "znowu", "zn\xF3w", "zosta\u0142", "\u017Caden", "\u017Cadna", "\u017Cadne", "\u017Cadnych", "\u017Ce", "\u017Ceby", "$", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_pt.js
var require_stopwords_pt = __commonJS({
  "node_modules/stopword/lib/stopwords_pt.js"(exports) {
    var words = ["a", "\xE0", "ao", "aos", "aquela", "aquelas", "aquele", "aqueles", "aquilo", "as", "\xE0s", "at\xE9", "com", "como", "da", "das", "de", "dela", "delas", "dele", "deles", "depois", "do", "dos", "e", "ela", "elas", "ele", "eles", "em", "entre", "essa", "essas", "esse", "esses", "esta", "estas", "este", "estes", "eu", "isso", "isto", "j\xE1", "lhe", "lhes", "mais", "mas", "me", "mesmo", "meu", "meus", "minha", "minhas", "muito", "muitos", "na", "n\xE3o", "nas", "nem", "no", "nos", "n\xF3s", "nossa", "nossas", "nosso", "nossos", "num", "nuns", "numa", "numas", "o", "os", "ou", "para", "pela", "pelas", "pelo", "pelos", "por", "quais", "qual", "quando", "que", "quem", "se", "sem", "seu", "seus", "s\xF3", "sua", "suas", "tamb\xE9m", "te", "teu", "teus", "tu", "tua", "tuas", "um", "uma", "umas", "voc\xEA", "voc\xEAs", "vos", "vosso", "vossos", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ptbr.js
var require_stopwords_ptbr = __commonJS({
  "node_modules/stopword/lib/stopwords_ptbr.js"(exports) {
    var words = ["a", "\xE0", "adeus", "agora", "a\xED", "ainda", "al\xE9m", "algo", "algu\xE9m", "algum", "alguma", "algumas", "alguns", "ali", "ampla", "amplas", "amplo", "amplos", "ano", "anos", "ante", "antes", "ao", "aos", "apenas", "apoio", "ap\xF3s", "aquela", "aquelas", "aquele", "aqueles", "aqui", "aquilo", "\xE1rea", "as", "\xE0s", "assim", "at\xE9", "atr\xE1s", "atrav\xE9s", "baixo", "bastante", "bem", "boa", "boas", "bom", "bons", "breve", "c\xE1", "cada", "catorze", "cedo", "cento", "certamente", "certeza", "cima", "cinco", "coisa", "coisas", "com", "como", "conselho", "contra", "contudo", "custa", "da", "d\xE1", "d\xE3o", "daquela", "daquelas", "daquele", "daqueles", "dar", "das", "de", "debaixo", "dela", "delas", "dele", "deles", "demais", "dentro", "depois", "desde", "dessa", "dessas", "desse", "desses", "desta", "destas", "deste", "destes", "deve", "devem", "devendo", "dever", "dever\xE1", "dever\xE3o", "deveria", "deveriam", "devia", "deviam", "dez", "dezanove", "dezasseis", "dezassete", "dezoito", "dia", "diante", "disse", "disso", "disto", "dito", "diz", "dizem", "dizer", "do", "dois", "dos", "doze", "duas", "d\xFAvida", "e", "\xE9", "ela", "elas", "ele", "eles", "em", "embora", "enquanto", "entre", "era", "eram", "\xE9ramos", "\xE9s", "essa", "essas", "esse", "esses", "esta", "est\xE1", "estamos", "est\xE3o", "estar", "estas", "est\xE1s", "estava", "estavam", "est\xE1vamos", "este", "esteja", "estejam", "estejamos", "estes", "esteve", "estive", "estivemos", "estiver", "estivera", "estiveram", "estiv\xE9ramos", "estiverem", "estivermos", "estivesse", "estivessem", "estiv\xE9ssemos", "estiveste", "estivestes", "estou", "etc", "eu", "exemplo", "fa\xE7o", "falta", "favor", "faz", "fazeis", "fazem", "fazemos", "fazendo", "fazer", "fazes", "feita", "feitas", "feito", "feitos", "fez", "fim", "final", "foi", "fomos", "for", "fora", "foram", "f\xF4ramos", "forem", "forma", "formos", "fosse", "fossem", "f\xF4ssemos", "foste", "fostes", "fui", "geral", "grande", "grandes", "grupo", "h\xE1", "haja", "hajam", "hajamos", "h\xE3o", "havemos", "havia", "hei", "hoje", "hora", "horas", "houve", "houvemos", "houver", "houvera", "houver\xE1", "houveram", "houv\xE9ramos", "houver\xE3o", "houverei", "houverem", "houveremos", "houveria", "houveriam", "houver\xEDamos", "houvermos", "houvesse", "houvessem", "houv\xE9ssemos", "isso", "isto", "j\xE1", "la", "l\xE1", "lado", "lhe", "lhes", "lo", "local", "logo", "longe", "lugar", "maior", "maioria", "mais", "mal", "mas", "m\xE1ximo", "me", "meio", "menor", "menos", "m\xEAs", "meses", "mesma", "mesmas", "mesmo", "mesmos", "meu", "meus", "mil", "minha", "minhas", "momento", "muita", "muitas", "muito", "muitos", "na", "nada", "n\xE3o", "naquela", "naquelas", "naquele", "naqueles", "nas", "nem", "nenhum", "nenhuma", "nessa", "nessas", "nesse", "nesses", "nesta", "nestas", "neste", "nestes", "ningu\xE9m", "n\xEDvel", "no", "noite", "nome", "nos", "n\xF3s", "nossa", "nossas", "nosso", "nossos", "nova", "novas", "nove", "novo", "novos", "num", "numa", "n\xFAmero", "nunca", "o", "obra", "obrigada", "obrigado", "oitava", "oitavo", "oito", "onde", "ontem", "onze", "os", "ou", "outra", "outras", "outro", "outros", "para", "parece", "parte", "partir", "paucas", "pela", "pelas", "pelo", "pelos", "pequena", "pequenas", "pequeno", "pequenos", "per", "perante", "perto", "pode", "pude", "p\xF4de", "podem", "podendo", "poder", "poderia", "poderiam", "podia", "podiam", "p\xF5e", "p\xF5em", "pois", "ponto", "pontos", "por", "por\xE9m", "porque", "porqu\xEA", "posi\xE7\xE3o", "poss\xEDvel", "possivelmente", "posso", "pouca", "poucas", "pouco", "poucos", "primeira", "primeiras", "primeiro", "primeiros", "pr\xF3pria", "pr\xF3prias", "pr\xF3prio", "pr\xF3prios", "pr\xF3xima", "pr\xF3ximas", "pr\xF3ximo", "pr\xF3ximos", "pude", "puderam", "quais", "qu\xE1is", "qual", "quando", "quanto", "quantos", "quarta", "quarto", "quatro", "que", "qu\xEA", "quem", "quer", "quereis", "querem", "queremas", "queres", "quero", "quest\xE3o", "quinta", "quinto", "quinze", "rela\xE7\xE3o", "sabe", "sabem", "s\xE3o", "se", "segunda", "segundo", "sei", "seis", "seja", "sejam", "sejamos", "sem", "sempre", "sendo", "ser", "ser\xE1", "ser\xE3o", "serei", "seremos", "seria", "seriam", "ser\xEDamos", "sete", "s\xE9tima", "s\xE9timo", "seu", "seus", "sexta", "sexto", "si", "sido", "sim", "sistema", "s\xF3", "sob", "sobre", "sois", "somos", "sou", "sua", "suas", "tal", "talvez", "tamb\xE9m", "tampouco", "tanta", "tantas", "tanto", "t\xE3o", "tarde", "te", "tem", "t\xE9m", "t\xEAm", "temos", "tendes", "tendo", "tenha", "tenham", "tenhamos", "tenho", "tens", "ter", "ter\xE1", "ter\xE3o", "terceira", "terceiro", "terei", "teremos", "teria", "teriam", "ter\xEDamos", "teu", "teus", "teve", "ti", "tido", "tinha", "tinham", "t\xEDnhamos", "tive", "tivemos", "tiver", "tivera", "tiveram", "tiv\xE9ramos", "tiverem", "tivermos", "tivesse", "tivessem", "tiv\xE9ssemos", "tiveste", "tivestes", "toda", "todas", "todavia", "todo", "todos", "trabalho", "tr\xEAs", "treze", "tu", "tua", "tuas", "tudo", "\xFAltima", "\xFAltimas", "\xFAltimo", "\xFAltimos", "um", "uma", "umas", "uns", "vai", "vais", "v\xE3o", "v\xE1rios", "vem", "v\xEAm", "vendo", "vens", "ver", "vez", "vezes", "viagem", "vindo", "vinte", "vir", "voc\xEA", "voc\xEAs", "vos", "v\xF3s", "vossa", "vossas", "vosso", "vossos", "zero", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ro.js
var require_stopwords_ro = __commonJS({
  "node_modules/stopword/lib/stopwords_ro.js"(exports) {
    var words = ["acea", "aceasta", "aceast\u0103", "aceea", "acei", "aceia", "acel", "acela", "acele", "acelea", "acest", "acesta", "aceste", "acestea", "ace\u015Fti", "ace\u015Ftia", "acolo", "acord", "acum", "ai", "aia", "aib\u0103", "aici", "al", "ale", "alea", "altceva", "altcineva", "am", "ar", "are", "asemenea", "asta", "astea", "ast\u0103zi", "asupra", "au", "avea", "avem", "ave\u0163i", "azi", "a\u015F", "a\u015Fadar", "a\u0163i", "bine", "bucur", "bun\u0103", "ca", "care", "caut", "ce", "cel", "ceva", "chiar", "cinci", "cine", "cineva", "contra", "cu", "cum", "cumva", "cur\xE2nd", "cur\xEEnd", "c\xE2nd", "c\xE2t", "c\xE2te", "c\xE2tva", "c\xE2\u0163i", "c\xEEnd", "c\xEEt", "c\xEEte", "c\xEEtva", "c\xEE\u0163i", "c\u0103", "c\u0103ci", "c\u0103rei", "c\u0103ror", "c\u0103rui", "c\u0103tre", "da", "dac\u0103", "dar", "datorit\u0103", "dat\u0103", "dau", "de", "deci", "deja", "deoarece", "departe", "de\u015Fi", "din", "dinaintea", "dintr-", "dintre", "doi", "doilea", "dou\u0103", "drept", "dup\u0103", "d\u0103", "ea", "ei", "el", "ele", "eram", "este", "eu", "e\u015Fti", "face", "fata", "fi", "fie", "fiecare", "fii", "fim", "fiu", "fi\u0163i", "frumos", "f\u0103r\u0103", "gra\u0163ie", "halb\u0103", "iar", "ieri", "la", "le", "li", "lor", "lui", "l\xE2ng\u0103", "l\xEEng\u0103", "mai", "mea", "mei", "mele", "mereu", "meu", "mi", "mie", "mine", "mult", "mult\u0103", "mul\u0163i", "mul\u0163umesc", "m\xE2ine", "m\xEEine", "m\u0103", "ne", "nevoie", "nici", "nic\u0103ieri", "nimeni", "nimeri", "nimic", "ni\u015Fte", "noastre", "noastr\u0103", "noi", "noroc", "nostru", "nou\u0103", "no\u015Ftri", "nu", "opt", "ori", "oricare", "orice", "oricine", "oricum", "oric\xE2nd", "oric\xE2t", "oric\xEEnd", "oric\xEEt", "oriunde", "patra", "patru", "patrulea", "pe", "pentru", "peste", "pic", "poate", "pot", "prea", "prima", "primul", "prin", "printr-", "pu\u0163in", "pu\u0163ina", "pu\u0163in\u0103", "p\xE2n\u0103", "p\xEEn\u0103", "rog", "sa", "sale", "sau", "se", "spate", "spre", "sub", "sunt", "suntem", "sunte\u0163i", "sut\u0103", "s\xEEnt", "s\xEEntem", "s\xEEnte\u0163i", "s\u0103", "s\u0103i", "s\u0103u", "ta", "tale", "te", "timp", "tine", "toate", "toat\u0103", "tot", "totu\u015Fi", "to\u0163i", "trei", "treia", "treilea", "tu", "t\u0103i", "t\u0103u", "un", "una", "unde", "undeva", "unei", "uneia", "unele", "uneori", "unii", "unor", "unora", "unu", "unui", "unuia", "unul", "vi", "voastre", "voastr\u0103", "voi", "vostru", "vou\u0103", "vo\u015Ftri", "vreme", "vreo", "vreun", "v\u0103", "zece", "zero", "zi", "zice", "\xEEi", "\xEEl", "\xEEmi", "\xEEmpotriva", "\xEEn", "\xEEnainte", "\xEEnaintea", "\xEEncotro", "\xEEnc\xE2t", "\xEEnc\xEEt", "\xEEntre", "\xEEntruc\xE2t", "\xEEntruc\xEEt", "\xEE\u0163i", "\u0103la", "\u0103lea", "\u0103sta", "\u0103stea", "\u0103\u015Ftia", "\u015Fapte", "\u015Fase", "\u015Fi", "\u015Ftiu", "\u0163i", "\u0163ie"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ru.js
var require_stopwords_ru = __commonJS({
  "node_modules/stopword/lib/stopwords_ru.js"(exports) {
    var words = ["\u0438", "\u0432", "\u0432\u043E", "\u043D\u0435", "\u0447\u0442\u043E", "\u043E\u043D", "\u043D\u0430", "\u044F", "\u0441", "\u0441\u043E", "\u043A\u0430\u043A", "\u0430", "\u0442\u043E", "\u0432\u0441\u0435", "\u043E\u043D\u0430", "\u0442\u0430\u043A", "\u0435\u0433\u043E", "\u043D\u043E", "\u0434\u0430", "\u0442\u044B", "\u043A", "\u0443", "\u0436\u0435", "\u0432\u044B", "\u0437\u0430", "\u0431\u044B", "\u043F\u043E", "\u0442\u043E\u043B\u044C\u043A\u043E", "\u0435\u0435", "\u043C\u043D\u0435", "\u0431\u044B\u043B\u043E", "\u0432\u043E\u0442", "\u043E\u0442", "\u043C\u0435\u043D\u044F", "\u0435\u0449\u0435", "\u043D\u0435\u0442", "\u043E", "\u0438\u0437", "\u0435\u043C\u0443", "\u0442\u0435\u043F\u0435\u0440\u044C", "\u043A\u043E\u0433\u0434\u0430", "\u0434\u0430\u0436\u0435", "\u043D\u0443", "\u043B\u0438", "\u0435\u0441\u043B\u0438", "\u0443\u0436\u0435", "\u0438\u043B\u0438", "\u043D\u0438", "\u0431\u044B\u0442\u044C", "\u0431\u044B\u043B", "\u043D\u0435\u0433\u043E", "\u0434\u043E", "\u0432\u0430\u0441", "\u043D\u0438\u0431\u0443\u0434\u044C", "\u0443\u0436", "\u0432\u0430\u043C", "\u0441\u043A\u0430\u0437\u0430\u043B", "\u0432\u0435\u0434\u044C", "\u0442\u0430\u043C", "\u043F\u043E\u0442\u043E\u043C", "\u0441\u0435\u0431\u044F", "\u043D\u0438\u0447\u0435\u0433\u043E", "\u0435\u0439", "\u043C\u043E\u0436\u0435\u0442", "\u043E\u043D\u0438", "\u0442\u0443\u0442", "\u0433\u0434\u0435", "\u0435\u0441\u0442\u044C", "\u043D\u0430\u0434\u043E", "\u043D\u0435\u0439", "\u0434\u043B\u044F", "\u043C\u044B", "\u0442\u0435\u0431\u044F", "\u0438\u0445", "\u0447\u0435\u043C", "\u0431\u044B\u043B\u0430", "\u0441\u0430\u043C", "\u0447\u0442\u043E\u0431", "\u0431\u0435\u0437", "\u0431\u0443\u0434\u0442\u043E", "\u0447\u0435\u0433\u043E", "\u0440\u0430\u0437", "\u0442\u043E\u0436\u0435", "\u0441\u0435\u0431\u0435", "\u043F\u043E\u0434", "\u0431\u0443\u0434\u0435\u0442", "\u0436", "\u0442\u043E\u0433\u0434\u0430", "\u043A\u0442\u043E", "\u044D\u0442\u043E\u0442", "\u0442\u043E\u0433\u043E", "\u043F\u043E\u0442\u043E\u043C\u0443", "\u044D\u0442\u043E\u0433\u043E", "\u043A\u0430\u043A\u043E\u0439", "\u0441\u043E\u0432\u0441\u0435\u043C", "\u043D\u0438\u043C", "\u044D\u0442\u043E\u043C", "\u043F\u043E\u0447\u0442\u0438", "\u043C\u043E\u0439", "\u0442\u0435\u043C", "\u0447\u0442\u043E\u0431\u044B", "\u043D\u0435\u0435", "\u0431\u044B\u043B\u0438", "\u043A\u0443\u0434\u0430", "\u0432\u0441\u0435\u0445", "\u043D\u0438\u043A\u043E\u0433\u0434\u0430", "\u0441\u0435\u0433\u043E\u0434\u043D\u044F", "\u043C\u043E\u0436\u043D\u043E", "\u043F\u0440\u0438", "\u043E\u0431", "\u0434\u0440\u0443\u0433\u043E\u0439", "\u0445\u043E\u0442\u044C", "\u043F\u043E\u0441\u043B\u0435", "\u043D\u0430\u0434", "\u0431\u043E\u043B\u044C\u0448\u0435", "\u0442\u043E\u0442", "\u0447\u0435\u0440\u0435\u0437", "\u044D\u0442\u0438", "\u043D\u0430\u0441", "\u043F\u0440\u043E", "\u0432\u0441\u0435\u0433\u043E", "\u043D\u0438\u0445", "\u043A\u0430\u043A\u0430\u044F", "\u043C\u043D\u043E\u0433\u043E", "\u0440\u0430\u0437\u0432\u0435", "\u044D\u0442\u0443", "\u043C\u043E\u044F", "\u0441\u0432\u043E\u044E", "\u044D\u0442\u043E\u0439", "\u043F\u0435\u0440\u0435\u0434", "\u0438\u043D\u043E\u0433\u0434\u0430", "\u043B\u0443\u0447\u0448\u0435", "\u0447\u0443\u0442\u044C", "\u0442\u043E\u043C", "\u043D\u0435\u043B\u044C\u0437\u044F", "\u0442\u0430\u043A\u043E\u0439", "\u0438\u043C", "\u0431\u043E\u043B\u0435\u0435", "\u0432\u0441\u0435\u0433\u0434\u0430", "\u043A\u043E\u043D\u0435\u0447\u043D\u043E", "\u0432\u0441\u044E", "\u043C\u0435\u0436\u0434\u0443", "\u044D\u0442\u043E", "\u043B\u0438\u0448\u044C"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_sk.js
var require_stopwords_sk = __commonJS({
  "node_modules/stopword/lib/stopwords_sk.js"(exports) {
    var words = ["a", "aby", "aj", "ako", "ak\xFD", "ale", "alebo", "ani", "av\u0161ak", "ba", "bez", "bu\xEF", "cez", "do", "ho", "hoci", "i", "ich", "im", "ja", "jeho", "jej", "jemu", "ju", "k", "kam", "kde", "ked\u017Ee", "ke\xEF", "kto", "ktor\xFD", "ku", "lebo", "ma", "mi", "mne", "mnou", "mu", "my", "m\xF2a", "m\xF4j", "na", "nad", "nami", "neho", "nej", "nemu", "nich", "nielen", "nim", "no", "n\xE1m", "n\xE1s", "n\xE1\u0161", "n\xEDm", "o", "od", "on", "ona", "oni", "ono", "ony", "po", "pod", "pre", "pred", "pri", "s", "sa", "seba", "sem", "so", "svoj", "tak\xFD", "tam", "teba", "tebe", "tebou", "tej", "ten", "ti", "tie", "to", "toho", "tomu", "tou", "tvoj", "ty", "t\xE1", "t\xFDm", "v", "vami", "ve\xEF", "vo", "vy", "v\xE1m", "v\xE1s", "v\xE1\u0161", "v\u0161ak", "z", "za", "zo", "\x9Da", "\xE8i", "\xE8o", "\xE8\xED", "\xF2om", "\xF2ou", "\xF2u", "\u017Ee"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_sl.js
var require_stopwords_sl = __commonJS({
  "node_modules/stopword/lib/stopwords_sl.js"(exports) {
    var words = ["a", "ali", "april", "avgust", "b", "bi", "bil", "bila", "bile", "bili", "bilo", "biti", "blizu", "bo", "bodo", "bojo", "bolj", "bom", "bomo", "boste", "bova", "bo\u0161", "brez", "c", "cel", "cela", "celi", "celo", "d", "da", "dale\u010D", "dan", "danes", "datum", "december", "deset", "deseta", "deseti", "deseto", "devet", "deveta", "deveti", "deveto", "do", "dober", "dobra", "dobri", "dobro", "dokler", "dol", "dolg", "dolga", "dolgi", "dovolj", "drug", "druga", "drugi", "drugo", "dva", "dve", "e", "eden", "en", "ena", "ene", "eni", "enkrat", "eno", "etc.", "f", "februar", "g", "g.", "ga", "ga.", "gor", "gospa", "gospod", "h", "halo", "i", "idr.", "ii", "iii", "in", "iv", "ix", "iz", "j", "januar", "jaz", "je", "ji", "jih", "jim", "jo", "julij", "junij", "jutri", "k", "kadarkoli", "kaj", "kajti", "kako", "kakor", "kamor", "kamorkoli", "kar", "karkoli", "katerikoli", "kdaj", "kdo", "kdorkoli", "ker", "ki", "kje", "kjer", "kjerkoli", "ko", "koder", "koderkoli", "koga", "komu", "kot", "kratek", "kratka", "kratke", "kratki", "l", "lahka", "lahke", "lahki", "lahko", "le", "lep", "lepa", "lepe", "lepi", "lepo", "leto", "m", "maj", "majhen", "majhna", "majhni", "malce", "malo", "manj", "marec", "me", "med", "medtem", "mene", "mesec", "mi", "midva", "midve", "mnogo", "moj", "moja", "moje", "mora", "morajo", "moram", "moramo", "morate", "mora\u0161", "morem", "mu", "n", "na", "nad", "naj", "najina", "najino", "najmanj", "naju", "najve\u010D", "nam", "narobe", "nas", "nato", "nazaj", "na\u0161", "na\u0161a", "na\u0161e", "ne", "nedavno", "nedelja", "nek", "neka", "nekaj", "nekatere", "nekateri", "nekatero", "nekdo", "neke", "nekega", "neki", "nekje", "neko", "nekoga", "neko\u010D", "ni", "nikamor", "nikdar", "nikjer", "nikoli", "ni\u010D", "nje", "njega", "njegov", "njegova", "njegovo", "njej", "njemu", "njen", "njena", "njeno", "nji", "njih", "njihov", "njihova", "njihovo", "njiju", "njim", "njo", "njun", "njuna", "njuno", "no", "nocoj", "november", "npr.", "o", "ob", "oba", "obe", "oboje", "od", "odprt", "odprta", "odprti", "okoli", "oktober", "on", "onadva", "one", "oni", "onidve", "osem", "osma", "osmi", "osmo", "oz.", "p", "pa", "pet", "peta", "petek", "peti", "peto", "po", "pod", "pogosto", "poleg", "poln", "polna", "polni", "polno", "ponavadi", "ponedeljek", "ponovno", "potem", "povsod", "pozdravljen", "pozdravljeni", "prav", "prava", "prave", "pravi", "pravo", "prazen", "prazna", "prazno", "prbl.", "precej", "pred", "prej", "preko", "pri", "pribl.", "pribli\u017Eno", "primer", "pripravljen", "pripravljena", "pripravljeni", "proti", "prva", "prvi", "prvo", "r", "ravno", "redko", "res", "re\u010D", "s", "saj", "sam", "sama", "same", "sami", "samo", "se", "sebe", "sebi", "sedaj", "sedem", "sedma", "sedmi", "sedmo", "sem", "september", "seveda", "si", "sicer", "skoraj", "skozi", "slab", "smo", "so", "sobota", "spet", "sreda", "srednja", "srednji", "sta", "ste", "stran", "stvar", "sva", "t", "ta", "tak", "taka", "take", "taki", "tako", "takoj", "tam", "te", "tebe", "tebi", "tega", "te\u017Eak", "te\u017Eka", "te\u017Eki", "te\u017Eko", "ti", "tista", "tiste", "tisti", "tisto", "tj.", "tja", "to", "toda", "torek", "tretja", "tretje", "tretji", "tri", "tu", "tudi", "tukaj", "tvoj", "tvoja", "tvoje", "u", "v", "vaju", "vam", "vas", "va\u0161", "va\u0161a", "va\u0161e", "ve", "vedno", "velik", "velika", "veliki", "veliko", "vendar", "ves", "ve\u010D", "vi", "vidva", "vii", "viii", "visok", "visoka", "visoke", "visoki", "vsa", "vsaj", "vsak", "vsaka", "vsakdo", "vsake", "vsaki", "vsakomur", "vse", "vsega", "vsi", "vso", "v\u010Dasih", "v\u010Deraj", "x", "z", "za", "zadaj", "zadnji", "zakaj", "zaprta", "zaprti", "zaprto", "zdaj", "zelo", "zunaj", "\u010D", "\u010De", "\u010Desto", "\u010Detrta", "\u010Detrtek", "\u010Detrti", "\u010Detrto", "\u010Dez", "\u010Digav", "\u0161", "\u0161est", "\u0161esta", "\u0161esti", "\u0161esto", "\u0161tiri", "\u017E", "\u017Ee"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_so.js
var require_stopwords_so = __commonJS({
  "node_modules/stopword/lib/stopwords_so.js"(exports) {
    var words = ["oo", "atabo", "ay", "ku", "waxeey", "uu", "lakin", "si", "ayuu", "soo", "waa", "ka", "kasoo", "kale", "waxuu", "ayee", "ayaa", "kuu", "isku", "ugu", "jiray", "dhan", "dambeestii", "inuu", "in", "jirtay", "uheestay", "aad", "uga", "hadana", "timaado", "timaaday"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_st.js
var require_stopwords_st = __commonJS({
  "node_modules/stopword/lib/stopwords_st.js"(exports) {
    var words = ["a", "le", "o", "ba", "ho", "oa", "ea", "ka", "hae", "tselane", "eaba", "ke", "hore", "ha", "e", "ne", "re", "bona", "me", "limo", "tsa", "haholo", "la", "empa", "ngoanake", "se", "moo", "m'e", "bane", "mo", "tse", "sa", "li", "ena", "bina", "pina", "hape"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_sv.js
var require_stopwords_sv = __commonJS({
  "node_modules/stopword/lib/stopwords_sv.js"(exports) {
    var words = ["jag", "det", "\xE4r", "du", "inte", "att", "en", "och", "har", "vi", "p\xE5", "i", "f\xF6r", "han", "vad", "med", "mig", "som", "h\xE4r", "om", "dig", "var", "den", "s\xE5", "till", "kan", "de", "ni", "ska", "ett", "men", "av", "vill", "nu", "ja", "nej", "bara", "hon", "hur", "min", "d\xE4r", "honom", "kom", "din", "d\xE5", "n\xE4r", "ha", "er", "ta", "ut", "f\xE5r", "man", "vara", "oss", "dem", "eller", "varf\xF6r", "alla", "fr\xE5n", "upp", "igen", "sa", "hade", "allt", "in", "sig", "ingen", "henne", "vem", "mitt", "n\xE5t", "blir", "\xE4n", "bli", "ju", "tv\xE5", "tar", "hans", "ditt", "mina", "\xE5t", "v\xE4l", "ocks\xE5", "n\xE5n", "l\xE5t", "detta", "va", "dina", "dom", "blev", "inga", "sin", "just", "m\xE5nga", "vart", "vilken", "ur", "ens", "sitt", "e", "jo", "era", "deras", "fem", "sex", "denna", "vilket", "fyra", "v\xE5rt", "emot", "tio", "ert", "sju", "\xE5tta", "n\xE5nting", "ned", "ers", "nio", "mej", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "_"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_sw.js
var require_stopwords_sw = __commonJS({
  "node_modules/stopword/lib/stopwords_sw.js"(exports) {
    var words = ["na", "ya", "wa", "kwa", "ni", "za", "katika", "la", "kuwa", "kama", "kwamba", "cha", "hiyo", "lakini", "yake", "hata", "wakati", "hivyo", "sasa", "wake", "au", "watu", "hii", "zaidi", "vya", "huo", "tu", "kwenye", "si", "pia", "ili", "moja", "kila", "baada", "ambao", "ambayo", "yao", "wao", "kuna", "hilo", "kutoka", "kubwa", "pamoja", "bila", "huu", "hayo", "sana", "ndani", "mkuu", "hizo", "kufanya", "wengi", "hadi", "mmoja", "hili", "juu", "kwanza", "wetu", "kuhusu", "baadhi", "wote", "yetu", "hivi", "kweli", "mara", "wengine", "nini", "ndiyo", "zao", "kati", "hao", "hapa", "kutokana", "muda", "habari", "ambaye", "wenye", "nyingine", "hakuna", "tena", "hatua", "bado", "nafasi", "basi", "kabisa", "hicho", "nje", "huyo", "vile", "yote", "mkubwa", "alikuwa", "zote", "leo", "haya", "huko", "kutoa", "mwa", "kiasi", "hasa", "nyingi", "kabla", "wale", "chini", "gani", "hapo", "lazima", "mwingine", "bali", "huku", "zake", "ilikuwa", "tofauti", "kupata", "mbalimbali", "pale", "kusema", "badala", "wazi", "yeye", "alisema", "hawa", "ndio", "hizi", "tayari", "wala", "muhimu", "ile", "mpya", "ambazo", "dhidi", "kwenda", "sisi", "kwani", "jinsi", "binafsi", "kutumia", "mbili", "mbali", "kuu", "mengine", "mbele", "namna", "mengi", "upande"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_th.js
var require_stopwords_th = __commonJS({
  "node_modules/stopword/lib/stopwords_th.js"(exports) {
    var words = ["\u0E01\u0E25\u0E48\u0E32\u0E27", "\u0E01\u0E27\u0E48\u0E32", "\u0E01\u0E31\u0E19", "\u0E01\u0E31\u0E1A", "\u0E01\u0E32\u0E23", "\u0E01\u0E47", "\u0E01\u0E48\u0E2D\u0E19", "\u0E02\u0E13\u0E30", "\u0E02\u0E2D", "\u0E02\u0E2D\u0E07", "\u0E02\u0E36\u0E49\u0E19", "\u0E04\u0E07", "\u0E04\u0E23\u0E31\u0E49\u0E07", "\u0E04\u0E27\u0E32\u0E21", "\u0E04\u0E37\u0E2D", "\u0E08\u0E30", "\u0E08\u0E31\u0E14", "\u0E08\u0E32\u0E01", "\u0E08\u0E36\u0E07", "\u0E0A\u0E48\u0E27\u0E07", "\u0E0B\u0E36\u0E48\u0E07", "\u0E14\u0E31\u0E07", "\u0E14\u0E49\u0E27\u0E22", "\u0E14\u0E49\u0E32\u0E19", "\u0E15\u0E31\u0E49\u0E07", "\u0E15\u0E31\u0E49\u0E07\u0E41\u0E15\u0E48", "\u0E15\u0E32\u0E21", "\u0E15\u0E48\u0E2D", "\u0E15\u0E48\u0E32\u0E07", "\u0E15\u0E48\u0E32\u0E07\u0E46", "\u0E15\u0E49\u0E2D\u0E07", "\u0E16\u0E36\u0E07", "\u0E16\u0E39\u0E01", "\u0E16\u0E49\u0E32", "\u0E17\u0E31\u0E49\u0E07", "\u0E17\u0E31\u0E49\u0E07\u0E19\u0E35\u0E49", "\u0E17\u0E32\u0E07", "\u0E17\u0E35\u0E48", "\u0E17\u0E35\u0E48\u0E2A\u0E38\u0E14", "\u0E17\u0E38\u0E01", "\u0E17\u0E4D\u0E32", "\u0E17\u0E4D\u0E32\u0E43\u0E2B\u0E49", "\u0E19\u0E2D\u0E01\u0E08\u0E32\u0E01", "\u0E19\u0E31\u0E01", "\u0E19\u0E31\u0E49\u0E19", "\u0E19\u0E35\u0E49", "\u0E19\u0E48\u0E32", "\u0E19\u0E4D\u0E32", "\u0E1A\u0E32\u0E07", "\u0E1C\u0E25", "\u0E1C\u0E48\u0E32\u0E19", "\u0E1E\u0E1A", "\u0E1E\u0E23\u0E49\u0E2D\u0E21", "\u0E21\u0E32", "\u0E21\u0E32\u0E01", "\u0E21\u0E35", "\u0E22\u0E31\u0E07", "\u0E23\u0E27\u0E21", "\u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07", "\u0E23\u0E31\u0E1A", "\u0E23\u0E32\u0E22", "\u0E23\u0E48\u0E27\u0E21", "\u0E25\u0E07", "\u0E27\u0E31\u0E19", "\u0E27\u0E48\u0E32", "\u0E2A\u0E38\u0E14", "\u0E2A\u0E48\u0E07", "\u0E2A\u0E48\u0E27\u0E19", "\u0E2A\u0E4D\u0E32\u0E2B\u0E23\u0E31\u0E1A", "\u0E2B\u0E19\u0E36\u0E48\u0E07", "\u0E2B\u0E23\u0E37\u0E2D", "\u0E2B\u0E25\u0E31\u0E07", "\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01", "\u0E2B\u0E25\u0E32\u0E22", "\u0E2B\u0E32\u0E01", "\u0E2D\u0E22\u0E32\u0E01", "\u0E2D\u0E22\u0E39\u0E48", "\u0E2D\u0E22\u0E48\u0E32\u0E07", "\u0E2D\u0E2D\u0E01", "\u0E2D\u0E30\u0E44\u0E23", "\u0E2D\u0E32\u0E08", "\u0E2D\u0E35\u0E01", "\u0E40\u0E02\u0E32", "\u0E40\u0E02\u0E49\u0E32", "\u0E40\u0E04\u0E22", "\u0E40\u0E09\u0E1E\u0E32\u0E30", "\u0E40\u0E0A\u0E48\u0E19", "\u0E40\u0E14\u0E35\u0E22\u0E27", "\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19", "\u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01", "\u0E40\u0E1B\u0E34\u0E14", "\u0E40\u0E1B\u0E34\u0E14\u0E40\u0E1C\u0E22", "\u0E40\u0E1B\u0E47\u0E19", "\u0E40\u0E1B\u0E47\u0E19\u0E01\u0E32\u0E23", "\u0E40\u0E1E\u0E23\u0E32\u0E30", "\u0E40\u0E1E\u0E37\u0E48\u0E2D", "\u0E40\u0E21\u0E37\u0E48\u0E2D", "\u0E40\u0E23\u0E32", "\u0E40\u0E23\u0E34\u0E48\u0E21", "\u0E40\u0E25\u0E22", "\u0E40\u0E2B\u0E47\u0E19", "\u0E40\u0E2D\u0E07", "\u0E41\u0E15\u0E48", "\u0E41\u0E1A\u0E1A", "\u0E41\u0E23\u0E01", "\u0E41\u0E25\u0E30", "\u0E41\u0E25\u0E49\u0E27", "\u0E41\u0E2B\u0E48\u0E07", "\u0E42\u0E14\u0E22", "\u0E43\u0E19", "\u0E43\u0E2B\u0E49", "\u0E44\u0E14\u0E49", "\u0E44\u0E1B", "\u0E44\u0E21\u0E48", "\u0E44\u0E27\u0E49"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_tl.js
var require_stopwords_tl = __commonJS({
  "node_modules/stopword/lib/stopwords_tl.js"(exports) {
    var words = ["akin", "aking", "ako", "alin", "am", "amin", "aming", "ang", "ano", "anumang", "apat", "at", "atin", "ating", "ay", "bababa", "bago", "bakit", "bawat", "bilang", "dahil", "dalawa", "dapat", "din", "dito", "doon", "gagawin", "gayunman", "ginagawa", "ginawa", "ginawang", "gumawa", "gusto", "habang", "hanggang", "hindi", "huwag", "iba", "ibaba", "ibabaw", "ibig", "ikaw", "ilagay", "ilalim", "ilan", "inyong", "isa", "isang", "itaas", "ito", "iyo", "iyon", "iyong", "ka", "kahit", "kailangan", "kailanman", "kami", "kanila", "kanilang", "kanino", "kanya", "kanyang", "kapag", "kapwa", "karamihan", "katiyakan", "katulad", "kaya", "kaysa", "ko", "kong", "kulang", "kumuha", "kung", "laban", "lahat", "lamang", "likod", "lima", "maaari", "maaaring", "maging", "mahusay", "makita", "marami", "marapat", "masyado", "may", "mayroon", "mga", "minsan", "mismo", "mula", "muli", "na", "nabanggit", "naging", "nagkaroon", "nais", "nakita", "namin", "napaka", "narito", "nasaan", "ng", "ngayon", "ni", "nila", "nilang", "nito", "niya", "niyang", "noon", "o", "pa", "paano", "pababa", "paggawa", "pagitan", "pagkakaroon", "pagkatapos", "palabas", "pamamagitan", "panahon", "pangalawa", "para", "paraan", "pareho", "pataas", "pero", "pumunta", "pumupunta", "sa", "saan", "sabi", "sabihin", "sarili", "sila", "sino", "siya", "tatlo", "tayo", "tulad", "tungkol", "una", "walang"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_tr.js
var require_stopwords_tr = __commonJS({
  "node_modules/stopword/lib/stopwords_tr.js"(exports) {
    var words = ["acaba", "acep", "adeta", "altm\u0131\u015F", "altm\u0131\u015F", "alt\u0131", "alt\u0131", "ama", "ancak", "arada", "art\u0131k", "asl\u0131nda", "aynen", "ayr\u0131ca", "az", "bana", "bari", "bazen", "baz\u0131", "baz\u0131", "ba\u015Fka", "belki", "ben", "benden", "beni", "benim", "beri", "be\u015F", "be\u015F", "be\u015F", "bile", "bin", "bir", "biraz", "biri", "birka\xE7", "birkez", "bir\xE7ok", "bir\u015Fey", "bir\u015Feyi", "bir\u015Fey", "bir\u015Feyi", "bir\u015Fey", "biz", "bizden", "bize", "bizi", "bizim", "bu", "buna", "bunda", "bundan", "bunlar", "bunlar\u0131", "bunlar\u0131n", "bunu", "bunun", "burada", "b\xF6yle", "b\xF6ylece", "b\xFCt\xFCn", "da", "daha", "dahi", "dahil", "daima", "dair", "dayanarak", "de", "defa", "de\u0111il", "de\u011Fil", "diye", "di\u0111er", "di\u011Fer", "doksan", "dokuz", "dolay\u0131", "dolay\u0131s\u0131yla", "d\xF6rt", "edecek", "eden", "ederek", "edilecek", "ediliyor", "edilmesi", "ediyor", "elli", "en", "etmesi", "etti", "etti\u011Fi", "etti\u011Fini", "e\u0111er", "e\u011Fer", "fakat", "gibi", "g\xF6re", "halbuki", "halen", "hangi", "hani", "hari\xE7", "hatta", "hele", "hem", "hen\xFCz", "hep", "hepsi", "her", "herhangi", "herkes", "herkesin", "hi\xE7", "hi\xE7bir", "iken", "iki", "ila", "ile", "ilgili", "ilk", "illa", "ise", "itibaren", "itibariyle", "iyi", "iyice", "i\xE7in", "i\u015Fte", "i\u015Fte", "kadar", "kan\u0131mca", "kar\u015F\u0131n", "katrilyon", "kendi", "kendilerine", "kendini", "kendisi", "kendisine", "kendisini", "kere", "kez", "ke\u015Fke", "ki", "kim", "kimden", "kime", "kimi", "kimse", "k\u0131rk", "k\u0131saca", "k\u0131rk", "lakin", "madem", "me\u0111er", "milyar", "milyon", "mu", "m\xFC", "m\u0131", "m\u0131", "nas\u0131l", "nas\u0131l", "ne", "neden", "nedenle", "nerde", "nere", "nerede", "nereye", "nitekim", "niye", "ni\xE7in", "o", "olan", "olarak", "oldu", "olduklar\u0131n\u0131", "oldu\u011Fu", "oldu\u011Funu", "olmad\u0131", "olmad\u0131\u011F\u0131", "olmak", "olmas\u0131", "olmayan", "olmaz", "olsa", "olsun", "olup", "olur", "olursa", "oluyor", "on", "ona", "ondan", "onlar", "onlardan", "onlari", "onlar\u0131n", "onlar\u0131", "onlar\u0131n", "onu", "onun", "otuz", "oysa", "pek", "ra\u011Fmen", "sadece", "sanki", "sekiz", "seksen", "sen", "senden", "seni", "senin", "siz", "sizden", "sizi", "sizin", "sonra", "taraf\u0131ndan", "trilyon", "t\xFCm", "var", "vard\u0131", "ve", "veya", "veyahut", "ya", "yahut", "yani", "yapacak", "yapmak", "yapt\u0131", "yapt\u0131klar\u0131", "yapt\u0131\u011F\u0131", "yapt\u0131\u011F\u0131n\u0131", "yap\u0131lan", "yap\u0131lmas\u0131", "yap\u0131yor", "yedi", "yerine", "yetmi\u015F", "yetmi\u015F", "yetmi\u015F", "yine", "yirmi", "yoksa", "y\xFCz", "zaten", "\xE7ok", "\xE7\xFCnk\xFC", "\xF6yle", "\xFCzere", "\xFC\xE7", "\u015Fey", "\u015Feyden", "\u015Feyi", "\u015Feyler", "\u015Fu", "\u015Funa", "\u015Funda", "\u015Fundan", "\u015Funu", "\u015Fey", "\u015Feyden", "\u015Feyi", "\u015Feyler", "\u015Fu", "\u015Funa", "\u015Funda", "\u015Fundan", "\u015Funlar\u0131", "\u015Funu", "\u015F\xF6yle", "\u015Fayet", "\u015Fimdi", "\u015Fu", "\u015F\xF6yle"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_ur.js
var require_stopwords_ur = __commonJS({
  "node_modules/stopword/lib/stopwords_ur.js"(exports) {
    var words = ["\u0622\u0626\u06CC", "\u0622\u0626\u06D2", "\u0622\u062C", "\u0622\u062E\u0631", "\u0622\u062E\u0631\u06A9\u0628\u0631", "\u0622\u062F\u0647\u06CC", "\u0622\u064B\u0628", "\u0622\u0679\u06BE", "\u0622\u06CC\u0628", "\u0627\u0629", "\u0627\u062E\u0628\u0632\u062A", "\u0627\u062E\u062A\u062A\u0628\u0645", "\u0627\u062F\u06BE\u0631", "\u0627\u0631\u062F", "\u0627\u0631\u062F\u06AF\u0631\u062F", "\u0627\u0631\u06A9\u0628\u0649", "\u0627\u0634", "\u0627\u0636\u062A\u0639\u0648\u0628\u0644", "\u0627\u0636\u062A\u0639\u0648\u0628\u0644\u0627\u062A", "\u0627\u0636\u0637\u0631\u0630", "\u0627\u0636\u06A9\u0628", "\u0627\u0636\u06A9\u06CC", "\u0627\u0636\u06A9\u06D2", "\u0627\u0637\u0631\u0627\u0641", "\u0627\u063A\u06CC\u0628", "\u0627\u0641\u0631\u0627\u062F", "\u0627\u0644\u06AF", "\u0627\u0648\u0631", "\u0627\u0648\u064B\u0686\u0628", "\u0627\u0648\u064B\u0686\u0628\u0626\u06CC", "\u0627\u0648\u064B\u0686\u06CC", "\u0627\u0648\u064B\u0686\u06D2", "\u0627\u0649", "\u0627\u064B", "\u0627\u064B\u0630\u0631", "\u0627\u064B\u06C1\u06CC\u06BA", "\u0627\u0679\u06BE\u0628\u064B\u0628", "\u0627\u067E\u064C\u0628", "\u0627\u067E\u064C\u06D2", "\u0627\u0686\u06BE\u0628", "\u0627\u0686\u06BE\u06CC", "\u0627\u0686\u06BE\u06D2", "\u0627\u06A9\u062B\u0631", "\u0627\u06A9\u0679\u06BE\u0628", "\u0627\u06A9\u0679\u06BE\u06CC", "\u0627\u06A9\u0679\u06BE\u06D2", "\u0627\u06A9\u06CC\u0644\u0627", "\u0627\u06A9\u06CC\u0644\u06CC", "\u0627\u06A9\u06CC\u0644\u06D2", "\u0627\u06AF\u0631\u0686\u06C1", "\u0627\u06C1\u0646", "\u0627\u06CC\u0637\u06D2", "\u0627\u06CC\u06A9", "\u0628", "\u062A", "\u062A\u0628\u0632\u064D", "\u062A\u062A", "\u062A\u0631", "\u062A\u0631\u062A\u06CC\u062A", "\u062A\u0631\u06CC\u064A", "\u062A\u0639\u0630\u0627\u062F", "\u062A\u0646", "\u062A\u0648", "\u062A\u0648\u0628\u0645", "\u062A\u0648\u06C1\u06CC", "\u062A\u0648\u06C1\u06CC\u06BA", "\u062A\u064C\u06C1\u0628", "\u062A\u06A9", "\u062A\u06BE\u0628", "\u062A\u06BE\u0648\u0691\u0627", "\u062A\u06BE\u0648\u0691\u06CC", "\u062A\u06BE\u0648\u0691\u06D2", "\u062A\u06BE\u06CC", "\u062A\u06BE\u06D2", "\u062A\u06CC\u064A", "\u062B\u0628", "\u062B\u0628\u0626\u06CC\u06BA", "\u062B\u0628\u062A\u0631\u062A\u06CC\u062A", "\u062B\u0628\u0631\u06CC", "\u062B\u0628\u0631\u06D2", "\u062B\u0628\u0639\u062B", "\u062B\u0628\u0644\u0627", "\u062B\u0628\u0644\u062A\u0631\u062A\u06CC\u062A", "\u062B\u0628\u06C1\u0631", "\u062B\u062F\u0628\u0626\u06D2", "\u062B\u0631\u0622\u06BA", "\u062B\u0631\u0627\u06BA", "\u062B\u0631\u0634", "\u062B\u0639\u0630", "\u062B\u063A\u06CC\u0631", "\u062B\u0644\u064C\u0630", "\u062B\u0644\u064C\u0630\u0648\u062B\u0628\u0644\u0627", "\u062B\u0644\u06A9\u06C1", "\u062B\u064A", "\u062B\u064C\u0628", "\u062B\u064C\u0628\u0631\u06C1\u0628", "\u062B\u064C\u0628\u0631\u06C1\u06CC", "\u062B\u064C\u0628\u0631\u06C1\u06D2", "\u062B\u064C\u0628\u064B\u0628", "\u062B\u064C\u0630", "\u062B\u064C\u0630\u06A9\u0631\u0648", "\u062B\u064C\u0630\u06A9\u0631\u064B\u0628", "\u062B\u064C\u0630\u06CC", "\u062B\u0691\u0627", "\u062B\u0691\u0648\u06BA", "\u062B\u0691\u06CC", "\u062B\u0691\u06D2", "\u062B\u06BE\u0631", "\u062B\u06BE\u0631\u0627", "\u062B\u06BE\u0631\u0627\u06C1\u0648\u0627", "\u062B\u06BE\u0631\u067E\u0648\u0631", "\u062B\u06BE\u06CC", "\u062B\u06C1\u062A", "\u062B\u06C1\u062A\u0631", "\u062B\u06C1\u062A\u0631\u06CC", "\u062B\u06C1\u062A\u0631\u06CC\u064A", "\u062B\u06CC\u0686", "\u062C", "\u062E\u0628", "\u062E\u0628\u0631\u06C1\u0628", "\u062E\u0628\u0631\u06C1\u06CC", "\u062E\u0628\u0631\u06C1\u06D2", "\u062E\u0628\u0647\u0648\u0638", "\u062E\u0628\u064B\u0628", "\u062E\u0628\u064B\u062A\u0628", "\u062E\u0628\u064B\u062A\u06CC", "\u062E\u0628\u064B\u062A\u06D2", "\u062E\u0628\u064B\u064C\u0628", "\u062E\u062A", "\u062E\u062A\u0646", "\u062E\u062C\u06A9\u06C1", "\u062E\u0635", "\u062E\u0637\u0637\u0631\u0630", "\u062E\u0644\u0630\u06CC", "\u062E\u0648", "\u062E\u0648\u0627\u0649", "\u062E\u0648\u064B\u06C1\u06CC", "\u062E\u0648\u06A9\u06C1", "\u062E\u064C\u0628\u0629", "\u062E\u06AF\u06C1", "\u062E\u06AF\u06C1\u0648\u06BA", "\u062E\u06AF\u06C1\u06CC\u06BA", "\u062E\u06CC\u0637\u0628", "\u062E\u06CC\u0637\u0628\u06A9\u06C1", "\u062F\u0631", "\u062F\u0631\u062E\u0628\u062A", "\u062F\u0631\u062E\u06C1", "\u062F\u0631\u062E\u06D2", "\u062F\u0631\u0632\u0642\u06CC\u0642\u062A", "\u062F\u0631\u0636\u062A", "\u062F\u0634", "\u062F\u0641\u0639\u06C1", "\u062F\u0644\u0686\u0637\u067E", "\u062F\u0644\u0686\u0637\u067E\u06CC", "\u062F\u0644\u0686\u0637\u067E\u06CC\u0628\u06BA", "\u062F\u0648", "\u062F\u0648\u0631", "\u062F\u0648\u0631\u0627\u0649", "\u062F\u0648\u0636\u0631\u0627", "\u062F\u0648\u0636\u0631\u0648\u06BA", "\u062F\u0648\u0636\u0631\u06CC", "\u062F\u0648\u0636\u0631\u06D2", "\u062F\u0648\u064B\u0648\u06BA", "\u062F\u06A9\u06BE\u0628\u0626\u06CC\u06BA", "\u062F\u06A9\u06BE\u0628\u062A\u0628", "\u062F\u06A9\u06BE\u0628\u062A\u06CC", "\u062F\u06A9\u06BE\u0628\u062A\u06D2", "\u062F\u06A9\u06BE\u0628\u0648", "\u062F\u06A9\u06BE\u0628\u064B\u0628", "\u062F\u06A9\u06BE\u0628\u06CC\u0628", "\u062F\u06CC", "\u062F\u06CC\u0628", "\u062F\u06CC\u062A\u0628", "\u062F\u06CC\u062A\u06CC", "\u062F\u06CC\u062A\u06D2", "\u062F\u06CC\u0631", "\u062F\u06CC\u064C\u0628", "\u062F\u06CC\u06A9\u06BE\u0648", "\u062F\u06CC\u06A9\u06BE\u064C\u0628", "\u062F\u06CC\u06A9\u06BE\u06CC", "\u062F\u06CC\u06A9\u06BE\u06CC\u06BA", "\u062F\u06D2", "\u0631", "\u0631\u0627\u0636\u062A\u0648\u06BA", "\u0631\u0627\u0636\u062A\u06C1", "\u0631\u0627\u0636\u062A\u06D2", "\u0631\u0631\u06CC\u0639\u06C1", "\u0631\u0631\u06CC\u0639\u06D2", "\u0631\u06A9\u064A", "\u0631\u06A9\u06BE", "\u0631\u06A9\u06BE\u0628", "\u0631\u06A9\u06BE\u062A\u0628", "\u0631\u06A9\u06BE\u062A\u0628\u06C1\u0648\u06BA", "\u0631\u06A9\u06BE\u062A\u06CC", "\u0631\u06A9\u06BE\u062A\u06D2", "\u0631\u06A9\u06BE\u06CC", "\u0631\u06A9\u06BE\u06D2", "\u0631\u06C1\u0628", "\u0631\u06C1\u06CC", "\u0631\u06C1\u06D2", "\u0632", "\u0632\u0628\u0635\u0644", "\u0632\u0628\u0636\u0631", "\u0632\u0628\u0644", "\u0632\u0628\u0644\u0627\u062A", "\u0632\u0628\u0644\u06CC\u06C1", "\u0632\u0635\u0648\u06BA", "\u0632\u0635\u06C1", "\u0632\u0635\u06D2", "\u0632\u0642\u0628\u0626\u0642", "\u0632\u0642\u06CC\u062A\u06CC\u06BA", "\u0632\u0642\u06CC\u0642\u062A", "\u0632\u06A9\u0646", "\u0632\u06A9\u0648\u06CC\u06C1", "\u0632\u06CC\u0628\u062F\u064D", "\u0635\u0628\u0641", "\u0635\u0633\u06CC\u0631", "\u0635\u0641\u0631", "\u0635\u0648\u0631\u062A", "\u0635\u0648\u0631\u062A\u0633\u0628\u0644", "\u0635\u0648\u0631\u062A\u0648\u06BA", "\u0635\u0648\u0631\u062A\u06CC\u06BA", "\u0636", "\u0636\u0628\u062A", "\u0636\u0628\u062A\u06BE", "\u0636\u0628\u062F\u064D", "\u0636\u0628\u0631\u0627", "\u0636\u0628\u0631\u06D2", "\u0636\u0628\u0644", "\u0636\u0628\u0644\u0648\u06BA", "\u0636\u062A", "\u0636\u0631\u0648\u0631", "\u0636\u0631\u0648\u0631\u062A", "\u0636\u0631\u0648\u0631\u06CC", "\u0636\u0644\u0637\u0644\u06C1", "\u0636\u0648\u0686", "\u0636\u0648\u0686\u0628", "\u0636\u0648\u0686\u062A\u0628", "\u0636\u0648\u0686\u062A\u06CC", "\u0636\u0648\u0686\u062A\u06D2", "\u0636\u0648\u0686\u0648", "\u0636\u0648\u0686\u064C\u0628", "\u0636\u0648\u0686\u06CC", "\u0636\u0648\u0686\u06CC\u06BA", "\u0636\u06A9\u0628", "\u0636\u06A9\u062A\u0628", "\u0636\u06A9\u062A\u06CC", "\u0636\u06A9\u062A\u06D2", "\u0636\u06A9\u064C\u0628", "\u0636\u06A9\u06CC", "\u0636\u06A9\u06D2", "\u0636\u06CC\u0630\u06BE\u0628", "\u0636\u06CC\u0630\u06BE\u06CC", "\u0636\u06CC\u0630\u06BE\u06D2", "\u0636\u06CC\u06A9\u064C\u0688", "\u0636\u06D2", "\u0637\u0631\u0641", "\u0637\u0631\u06CC\u0642", "\u0637\u0631\u06CC\u0642\u0648\u06BA", "\u0637\u0631\u06CC\u0642\u06C1", "\u0637\u0631\u06CC\u0642\u06D2", "\u0637\u0648\u0631", "\u0637\u0648\u0631\u067E\u0631", "\u0638\u0628\u06C1\u0631", "\u0639", "\u0639\u0630\u062F", "\u0639\u0638\u06CC\u0646", "\u0639\u0644\u0627\u0642\u0648\u06BA", "\u0639\u0644\u0627\u0642\u06C1", "\u0639\u0644\u0627\u0642\u06D2", "\u0639\u0644\u0627\u0648\u064D", "\u0639\u0648\u0648\u0647\u06CC", "\u063A\u0628\u06CC\u0630", "\u063A\u062E\u0635", "\u063A\u0630", "\u063A\u0631\u0648\u0639", "\u063A\u0631\u0648\u0639\u0628\u062A", "\u063A\u06D2", "\u0641\u0631\u062F", "\u0641\u06CC", "\u0642", "\u0642\u062C\u0644", "\u0642\u062C\u06CC\u0644\u06C1", "\u0642\u0637\u0646", "\u0644\u0626\u06D2", "\u0644\u0627", "\u0644\u0627\u0632\u0647\u06CC", "\u0644\u0648", "\u0644\u0648\u062C\u0628", "\u0644\u0648\u062C\u06CC", "\u0644\u0648\u062C\u06D2", "\u0644\u0648\u0633\u0628\u062A", "\u0644\u0648\u0633\u06C1", "\u0644\u0648\u06AF", "\u0644\u0648\u06AF\u0648\u06BA", "\u0644\u0691\u06A9\u067E\u064A", "\u0644\u06AF\u062A\u0628", "\u0644\u06AF\u062A\u06CC", "\u0644\u06AF\u062A\u06D2", "\u0644\u06AF\u064C\u0628", "\u0644\u06AF\u06CC", "\u0644\u06AF\u06CC\u06BA", "\u0644\u06AF\u06D2", "\u0644\u06CC", "\u0644\u06CC\u0628", "\u0644\u06CC\u064C\u0628", "\u0644\u06CC\u06BA", "\u0644\u06D2", "\u0647", "\u0647\u062A\u0639\u0644\u0642", "\u0647\u062E\u062A\u0644\u0641", "\u0647\u0633\u062A\u0631\u0645", "\u0647\u0633\u062A\u0631\u0647\u06C1", "\u0647\u0633\u0637\u0648\u0634", "\u0647\u0633\u06CC\u0630", "\u0647\u0637\u0626\u0644\u06C1", "\u0647\u0637\u0626\u0644\u06D2", "\u0647\u0637\u0628\u0626\u0644", "\u0647\u0637\u062A\u0639\u0648\u0644", "\u0647\u0637\u0644\u0642", "\u0647\u0639\u0644\u0648\u0645", "\u0647\u063B\u062A\u0648\u0644", "\u0647\u0644\u0627", "\u0647\u0648\u06A9\u064A", "\u0647\u0648\u06A9\u064C\u0628\u062A", "\u0647\u0648\u06A9\u064C\u06C1", "\u0647\u064C\u0628\u0636\u062A", "\u0647\u0691\u0627", "\u0647\u0691\u064B\u0628", "\u0647\u0691\u06D2", "\u0647\u06A9\u0648\u0644", "\u0647\u06AF\u0631", "\u0647\u06C1\u0631\u062B\u0628\u0649", "\u0647\u06CC\u0631\u0627", "\u0647\u06CC\u0631\u06CC", "\u0647\u06CC\u0631\u06D2", "\u0647\u06CC\u06BA", "\u0648", "\u0648\u0627\u0631", "\u0648\u0627\u0644\u06D2", "\u0648\u064D", "\u064B\u0626\u06CC", "\u064B\u0626\u06D2", "\u064B\u0628", "\u064B\u0628\u067E\u0637\u064C\u0630", "\u064B\u0628\u06AF\u0633\u06CC\u0631", "\u064B\u0637\u062C\u062A", "\u064B\u0642\u0637\u06C1", "\u064B\u0648", "\u064B\u0648\u062E\u0648\u0627\u0649", "\u064B\u06A9\u0628\u0644\u064C\u0628", "\u064B\u06A9\u062A\u06C1", "\u064B\u06C1", "\u064B\u06C1\u06CC\u06BA", "\u064B\u06CC\u0628", "\u064B\u06D2", "\u0653 \u0622\u0634", "\u0679\u06BE\u06CC\u06A9", "\u067E\u0628\u0626\u06D2", "\u067E\u0628\u0634", "\u067E\u0628\u064B\u0628", "\u067E\u0628\u064B\u0686", "\u067E\u0631", "\u067E\u0631\u0627\u064B\u0628", "\u067E\u0637\u064C\u0630", "\u067E\u0644", "\u067E\u0648\u0631\u0627", "\u067E\u0648\u0686\u06BE\u0628", "\u067E\u0648\u0686\u06BE\u062A\u0628", "\u067E\u0648\u0686\u06BE\u062A\u06CC", "\u067E\u0648\u0686\u06BE\u062A\u06D2", "\u067E\u0648\u0686\u06BE\u0648", "\u067E\u0648\u0686\u06BE\u0648\u06BA", "\u067E\u0648\u0686\u06BE\u064C\u0628", "\u067E\u0648\u0686\u06BE\u06CC\u06BA", "\u067E\u0686\u06BE\u0644\u0627", "\u067E\u06BE\u0631", "\u067E\u06C1\u0644\u0627", "\u067E\u06C1\u0644\u06CC", "\u067E\u06C1\u0644\u06D2\u0636\u06CC", "\u067E\u06C1\u0644\u06D2\u0636\u06D2", "\u067E\u06C1\u0644\u06D2\u0636\u06D2\u06C1\u06CC", "\u067E\u06CC\u0639", "\u0686\u0628\u0631", "\u0686\u0628\u06C1\u0628", "\u0686\u0628\u06C1\u064C\u0628", "\u0686\u0628\u06C1\u06D2", "\u0686\u0644\u0627", "\u0686\u0644\u0648", "\u0686\u0644\u06CC\u06BA", "\u0686\u0644\u06D2", "\u0686\u06A9\u0628", "\u0686\u06A9\u06CC", "\u0686\u06A9\u06CC\u06BA", "\u0686\u06A9\u06D2", "\u0686\u06BE\u0648\u0679\u0628", "\u0686\u06BE\u0648\u0679\u0648\u06BA", "\u0686\u06BE\u0648\u0679\u06CC", "\u0686\u06BE\u0648\u0679\u06D2", "\u0686\u06BE\u06C1", "\u0686\u06CC\u0633\u06CC\u06BA", "\u0688\u06BE\u0648\u064B\u0688\u0627", "\u0688\u06BE\u0648\u064B\u0688\u0644\u06CC\u0628", "\u0688\u06BE\u0648\u064B\u0688\u0648", "\u0688\u06BE\u0648\u064B\u0688\u064B\u0628", "\u0688\u06BE\u0648\u064B\u0688\u06CC", "\u0688\u06BE\u0648\u064B\u0688\u06CC\u06BA", "\u06A9", "\u06A9\u0626\u06CC", "\u06A9\u0626\u06D2", "\u06A9\u0628", "\u06A9\u0628\u0641\u06CC", "\u06A9\u0628\u0645", "\u06A9\u062A", "\u06A9\u062C\u06BE\u06CC", "\u06A9\u0631\u0627", "\u06A9\u0631\u062A\u0628", "\u06A9\u0631\u062A\u0628\u06C1\u0648\u06BA", "\u06A9\u0631\u062A\u06CC", "\u06A9\u0631\u062A\u06D2", "\u06A9\u0631\u062A\u06D2\u06C1\u0648", "\u06A9\u0631\u0631\u06C1\u0628", "\u06A9\u0631\u0631\u06C1\u06CC", "\u06A9\u0631\u0631\u06C1\u06D2", "\u06A9\u0631\u0648", "\u06A9\u0631\u064B\u0628", "\u06A9\u0631\u06CC\u06BA", "\u06A9\u0631\u06D2", "\u06A9\u0637\u06CC", "\u06A9\u0644", "\u06A9\u0646", "\u06A9\u0648\u0626\u06CC", "\u06A9\u0648\u062A\u0631", "\u06A9\u0648\u0631\u0627", "\u06A9\u0648\u0631\u0648\u06BA", "\u06A9\u0648\u0631\u064D", "\u06A9\u0648\u0631\u06D2", "\u06A9\u0648\u0637\u064A", "\u06A9\u0648\u0649", "\u06A9\u0648\u064B\u0637\u0628", "\u06A9\u0648\u064B\u0637\u06CC", "\u06A9\u0648\u064B\u0637\u06D2", "\u06A9\u06BE\u0648\u0644\u0627", "\u06A9\u06BE\u0648\u0644\u0648", "\u06A9\u06BE\u0648\u0644\u064C\u0628", "\u06A9\u06BE\u0648\u0644\u06CC", "\u06A9\u06BE\u0648\u0644\u06CC\u06BA", "\u06A9\u06BE\u0648\u0644\u06D2", "\u06A9\u06C1", "\u06A9\u06C1\u0628", "\u06A9\u06C1\u062A\u0628", "\u06A9\u06C1\u062A\u06CC", "\u06A9\u06C1\u062A\u06D2", "\u06A9\u06C1\u0648", "\u06A9\u06C1\u0648\u06BA", "\u06A9\u06C1\u064C\u0628", "\u06A9\u06C1\u06CC", "\u06A9\u06C1\u06CC\u06BA", "\u06A9\u06C1\u06D2", "\u06A9\u06CC", "\u06A9\u06CC\u0628", "\u06A9\u06CC\u0637\u0628", "\u06A9\u06CC\u0637\u0631\u0641", "\u06A9\u06CC\u0637\u06D2", "\u06A9\u06CC\u0644\u0626\u06D2", "\u06A9\u06CC\u0648\u064B\u06A9\u06C1", "\u06A9\u06CC\u0648\u06BA", "\u06A9\u06CC\u06D2", "\u06A9\u06D2", "\u06A9\u06D2\u062B\u0639\u0630", "\u06A9\u06D2\u0631\u0631\u06CC\u0639\u06D2", "\u06AF\u0626\u06CC", "\u06AF\u0626\u06D2", "\u06AF\u0628", "\u06AF\u0631\u062F", "\u06AF\u0631\u0648\u064D", "\u06AF\u0631\u0648\u067E", "\u06AF\u0631\u0648\u06C1\u0648\u06BA", "\u06AF\u064C\u062A\u06CC", "\u06AF\u06CC", "\u06AF\u06CC\u0628", "\u06AF\u06D2", "\u06C1\u0631", "\u06C1\u0646", "\u06C1\u0648", "\u06C1\u0648\u0626\u06CC", "\u06C1\u0648\u0626\u06D2", "\u06C1\u0648\u0627", "\u06C1\u0648\u0628\u0631\u0627", "\u06C1\u0648\u0628\u0631\u06CC", "\u06C1\u0648\u0628\u0631\u06D2", "\u06C1\u0648\u062A\u0628", "\u06C1\u0648\u062A\u06CC", "\u06C1\u0648\u062A\u06D2", "\u06C1\u0648\u0631\u06C1\u0628", "\u06C1\u0648\u0631\u06C1\u06CC", "\u06C1\u0648\u0631\u06C1\u06D2", "\u06C1\u0648\u0636\u06A9\u062A\u0628", "\u06C1\u0648\u0636\u06A9\u062A\u06CC", "\u06C1\u0648\u0636\u06A9\u062A\u06D2", "\u06C1\u0648\u064B\u0628", "\u06C1\u0648\u064B\u06CC", "\u06C1\u0648\u064B\u06D2", "\u06C1\u0648\u0686\u06A9\u0628", "\u06C1\u0648\u0686\u06A9\u06CC", "\u06C1\u0648\u0686\u06A9\u06D2", "\u06C1\u0648\u06AF\u0626\u06CC", "\u06C1\u0648\u06AF\u0626\u06D2", "\u06C1\u0648\u06AF\u06CC\u0628", "\u06C1\u0648\u06BA", "\u06C1\u06CC", "\u06C1\u06CC\u06BA", "\u06C1\u06D2", "\u06CC", "\u06CC\u0642\u06CC\u064C\u06CC", "\u06CC\u06C1", "\u06CC\u06C1\u0628\u06BA"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_vi.js
var require_stopwords_vi = __commonJS({
  "node_modules/stopword/lib/stopwords_vi.js"(exports) {
    var words = ["b\u1ECB", "b\u1EDFi", "c\u1EA3", "c\xE1c", "c\xE1i", "c\u1EA7n", "c\xE0ng", "ch\u1EC9", "chi\u1EBFc", "cho", "ch\u1EE9", "ch\u01B0a", "chuy\u1EC7n", "c\xF3", "c\xF3 th\u1EC3", "c\u1EE9", "c\u1EE7a", "c\xF9ng", "c\u0169ng", "\u0111\xE3", "\u0111ang", "\u0111\u1EC3", "\u0111\u1EBFn n\u1ED7i", "\u0111\u1EC1u", "\u0111i\u1EC1u", "do", "\u0111\xF3", "\u0111\u01B0\u1EE3c", "d\u01B0\u1EDBi", "g\xEC", "khi", "kh\xF4ng", "l\xE0", "l\u1EA1i", "l\xEAn", "l\xFAc", "m\xE0", "m\u1ED7i", "m\u1ED9t c\xE1ch", "n\xE0y", "n\xEAn", "n\u1EBFu", "ngay", "nhi\u1EC1u", "nh\u01B0", "nh\u01B0ng", "nh\u1EEFng", "n\u01A1i", "n\u1EEFa", "ph\u1EA3i", "qua", "ra", "r\u1EB1ng", "r\u1EA5t", "r\u1ED3i", "sau", "s\u1EBD", "so", "s\u1EF1", "t\u1EA1i", "theo", "th\xEC", "tr\xEAn", "tr\u01B0\u1EDBc", "t\u1EEB", "t\u1EEBng", "v\xE0", "v\u1EABn", "v\xE0o", "v\u1EADy", "v\xEC", "vi\u1EC7c", "v\u1EDBi", "v\u1EEBa", "v\xE2ng", "\xE0", "\u1EEB", "t\u1EEB"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_yo.js
var require_stopwords_yo = __commonJS({
  "node_modules/stopword/lib/stopwords_yo.js"(exports) {
    var words = ["\xF3", "n\xED", "\xECj\xE0p\xE1", "\u1E63e", "r\u1EB9\u0300", "t\xED", "\xE0w\u1ECDn", "s\xED", "ni", "n\xE1\xE0", "anansi", "l\xE1ti", "kan", "ti", "\u0144", "l\u1ECD", "o", "b\xED", "pad\xE0", "s\xEC", "w\xE1", "wangari", "l\xE8", "w\xE0", "k\xED", "p\xFAp\u1ECD\u0300", "od\xF2", "mi", "w\u1ECD\u0301n", "p\u1EB9\u0300l\xFA", "a", "\u1E63\xF9gb\u1ECD\u0301n", "f\xFAn", "j\u1EB9\u0301", "f\u1EB9\u0301", "o\xFAnj\u1EB9", "r\xED", "igi", "k\xF2", "il\xE9", "j\xF9", "ol\xF3\u0144gb\xF2", "p\xE9", "\xE9", "gbogbo", "i\u1E63u", "in\xFA", "b\u1EB9\u0300r\u1EB9\u0300", "j\u1EB9", "fi", "d\xFAr\xF3", "al\u1EB9\u0301", "\u1ECDj\u1ECD\u0301", "n\xEDtor\xED", "n\u01F9kan", "\u1ECD\u0300r\u1EB9\u0301", "\xE0k\xF3k\xF2", "s\xEDn\xFA", "s\u0323", "y\xEC\xED"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_zh.js
var require_stopwords_zh = __commonJS({
  "node_modules/stopword/lib/stopwords_zh.js"(exports) {
    var words = ["\u7684", "\u5730", "\u5F97", "\u548C", "\u8DDF", "\u4E0E", "\u53CA", "\u5411", "\u5E76", "\u7B49", "\u66F4", "\u5DF2", "\u542B", "\u505A", "\u6211", "\u4F60", "\u4ED6", "\u5979", "\u4EEC", "\u67D0", "\u8BE5", "\u5404", "\u6BCF", "\u8FD9", "\u90A3", "\u54EA", "\u4EC0", "\u4E48", "\u8C01", "\u5E74", "\u6708", "\u65E5", "\u65F6", "\u5206", "\u79D2", "\u51E0", "\u591A", "\u6765", "\u5728", "\u5C31", "\u53C8", "\u5F88", "\u5462", "\u5427", "\u5417", "\u4E86", "\u561B", "\u54C7", "\u513F", "\u54FC", "\u554A", "\u55EF", "\u662F", "\u7740", "\u90FD", "\u4E0D", "\u8BF4", "\u4E5F", "\u770B", "\u628A", "\u8FD8", "\u4E2A", "\u6709", "\u5C0F", "\u5230", "\u4E00", "\u4E3A", "\u4E2D", "\u4E8E", "\u5BF9", "\u4F1A", "\u4E4B", "\u7B2C", "\u6B64", "\u6216", "\u5171", "\u6309", "\u8BF7"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopwords_zu.js
var require_stopwords_zu = __commonJS({
  "node_modules/stopword/lib/stopwords_zu.js"(exports) {
    var words = ["ukuthi", "kodwa", "futhi", "kakhulu", "wakhe", "kusho", "uma", "wathi", "umama", "kanye", "phansi", "ngesikhathi", "lapho", "u", "zakhe", "khona", "ukuba", "nje", "phezulu", "yakhe", "kungani", "wase", "la", "mina", "wami", "ukuze", "unonkungu", "wabona", "wahamba", "lakhe", "yami", "kanjani", "kwakukhona", "ngelinye"];
    exports.words = words;
  }
});

// node_modules/stopword/lib/stopword.js
var require_stopword = __commonJS({
  "node_modules/stopword/lib/stopword.js"(exports) {
    var defaultStopwords = require_stopwords_en().words;
    exports.removeStopwords = function(tokens, stopwords2) {
      stopwords2 = stopwords2 || defaultStopwords;
      if (typeof tokens !== "object" || typeof stopwords2 !== "object") {
        throw new Error("expected Arrays try: removeStopwords(Array[, Array])");
      }
      return tokens.filter(function(value) {
        return stopwords2.indexOf(value.toLowerCase()) === -1;
      });
    };
    exports.af = require_stopwords_af().words;
    exports.ar = require_stopwords_ar().words;
    exports.bn = require_stopwords_bn().words;
    exports.bg = require_stopwords_bg().words;
    exports.br = require_stopwords_br().words;
    exports.ca = require_stopwords_ca().words;
    exports.cs = require_stopwords_cs().words;
    exports.da = require_stopwords_da().words;
    exports.de = require_stopwords_de().words;
    exports.el = require_stopwords_el().words;
    exports.en = require_stopwords_en().words;
    exports.eo = require_stopwords_eo().words;
    exports.es = require_stopwords_es().words;
    exports.et = require_stopwords_et().words;
    exports.eu = require_stopwords_eu().words;
    exports.fa = require_stopwords_fa().words;
    exports.fr = require_stopwords_fr().words;
    exports.ga = require_stopwords_ga().words;
    exports.gl = require_stopwords_gl().words;
    exports.fi = require_stopwords_fi().words;
    exports.ha = require_stopwords_ha().words;
    exports.he = require_stopwords_he().words;
    exports.hi = require_stopwords_hi().words;
    exports.hr = require_stopwords_hr().words;
    exports.hu = require_stopwords_hu().words;
    exports.hy = require_stopwords_hy().words;
    exports.id = require_stopwords_id().words;
    exports.it = require_stopwords_it().words;
    exports.ja = require_stopwords_ja().words;
    exports.ko = require_stopwords_ko().words;
    exports.la = require_stopwords_la().words;
    exports.lgg = require_stopwords_lgg().words;
    exports.lggo = require_stopwords_lggo().words;
    exports.lv = require_stopwords_lv().words;
    exports.mr = require_stopwords_mr().words;
    exports.my = require_stopwords_my().words;
    exports.nl = require_stopwords_nl().words;
    exports.no = require_stopwords_no().words;
    exports.pa = require_stopwords_pa().words;
    exports.pl = require_stopwords_pl().words;
    exports.pt = require_stopwords_pt().words;
    exports.ptbr = require_stopwords_ptbr().words;
    exports.ro = require_stopwords_ro().words;
    exports.ru = require_stopwords_ru().words;
    exports.sk = require_stopwords_sk().words;
    exports.sl = require_stopwords_sl().words;
    exports.so = require_stopwords_so().words;
    exports.st = require_stopwords_st().words;
    exports.sv = require_stopwords_sv().words;
    exports.sw = require_stopwords_sw().words;
    exports.th = require_stopwords_th().words;
    exports.tl = require_stopwords_tl().words;
    exports.tr = require_stopwords_tr().words;
    exports.ur = require_stopwords_ur().words;
    exports.vi = require_stopwords_vi().words;
    exports.yo = require_stopwords_yo().words;
    exports.zh = require_stopwords_zh().words;
    exports.zu = require_stopwords_zu().words;
  }
});

// src/main.ts
__export(exports, {
  default: () => TagCloudPlugin2,
  logger: () => logger
});
var import_obsidian4 = __toModule(require("obsidian"));
var import_wordcloud5 = __toModule(require_wordcloud2());

// src/settings.ts
var import_obsidian = __toModule(require("obsidian"));
var import_wordcloud = __toModule(require_wordcloud2());
var DEFAULT_SETTINGS = {
  stopwords: "",
  filecache: {},
  wordCache: {
    withoutStopwords: {},
    withStopwords: {},
    timestamp: 0
  }
};
var TagCloudPluginSettingsTab = class extends import_obsidian.PluginSettingTab {
  constructor(plugin) {
    super(plugin.app, plugin);
  }
  display() {
    const { containerEl } = this;
    containerEl.empty();
    if (!import_wordcloud.default.isSupported) {
      containerEl.createEl("p", { cls: "cloud-error", text: "Your device is not supported" });
    }
    containerEl.createEl("h1", { text: "Tag & Word Cloud Settings" });
    new import_obsidian.Setting(containerEl).setName("Additional Stopwords").setDesc("Don't show any of these words in the word cloud(one per line)").addTextArea((text) => {
      text.setValue(this.plugin.settings.stopwords).onChange((value) => __async(this, null, function* () {
        this.plugin.settings.stopwords = value;
        yield this.plugin.saveSettings();
      }));
      text.inputEl.setAttr("rows", 8);
    });
    new import_obsidian.Setting(containerEl).setDesc("Recalculate Word Distribution").setDesc("").addButton((button) => {
      button.setButtonText("Recalculate Word Distribution").onClick(() => __async(this, null, function* () {
        yield this.plugin.calculateWordDistribution(true);
      }));
    });
  }
};

// node_modules/typescript-logger/build/level.js
var Level;
(function(Level2) {
  Level2[Level2["INFO"] = 0] = "INFO";
  Level2[Level2["LOG"] = 1] = "LOG";
  Level2[Level2["DEBUG"] = 2] = "DEBUG";
  Level2[Level2["WARN"] = 3] = "WARN";
  Level2[Level2["ERROR"] = 4] = "ERROR";
})(Level || (Level = {}));

// node_modules/typescript-logger/build/logger.js
var Logger = class {
  constructor(name, color, fixedWidth) {
    this.name = name;
    this.color = color;
    this.fixedWidth = fixedWidth;
  }
  debug(message, ...data) {
    return this._logMessage(message, Level.DEBUG, data);
  }
  log(message, ...data) {
    return this._logMessage(message, Level.LOG, data);
  }
  error(message, ...data) {
    return this._logMessage(message, Level.ERROR, data);
  }
  info(message, ...data) {
    return this._logMessage(message, Level.INFO, data);
  }
  warn(message, ...data) {
    return this._logMessage(message, Level.WARN, data);
  }
  _logMessage(message, level, ...data) {
    Display.msg(message, data, this.name, this.color, level, this.fixedWidth);
    return this;
  }
};

// node_modules/typescript-logger/build/loggerManager.js
var LoggerManager = class {
  static create(name, color) {
    let logger2;
    if (LoggerManager.instances[name] === void 0) {
      logger2 = new Logger(name, color || LoggerManager.getRandomColor(), LoggerManager.FIXED_WIDTH);
      LoggerManager.instances[name] = logger2;
      LoggerManager.mute(name, LoggerManager.isPresent(name) ? LoggerManager.isMuted(name) : LoggerManager.MUTE_ON_CREATE);
      this.saveState();
    } else {
      logger2 = LoggerManager.instances[name];
    }
    return logger2;
  }
  static onlyLevels(...levels) {
    LoggerManager.levels = levels;
    LoggerManager.saveState();
  }
  static onlyModules(...modules) {
    if (modules.length === 0)
      return;
    LoggerManager.muteAllModules();
    modules.forEach((m) => LoggerManager.mute(m, false));
  }
  static mute(moduleName, mute = true) {
    LoggerManager.instancesStateMap[moduleName] = mute;
    LoggerManager.saveState();
  }
  static unmute(moduleName) {
    LoggerManager.mute(moduleName, false);
  }
  static unMuteAllModules() {
    for (let moduleName in LoggerManager.instances) {
      LoggerManager.mute(moduleName, false);
    }
  }
  static muteAllModules() {
    for (let moduleName in LoggerManager.instances) {
      LoggerManager.mute(moduleName, true);
    }
  }
  static setProductionMode() {
    LoggerManager.DEV_MODE = false;
    if (typeof window !== "undefined") {
      delete window["LoggerManager"];
    }
  }
  static isProductionMode() {
    return !LoggerManager.DEV_MODE;
  }
  static isPresent(moduleName) {
    return LoggerManager.instancesStateMap.hasOwnProperty(moduleName);
  }
  static isMuted(moduleName) {
    return LoggerManager.instancesStateMap[moduleName];
  }
  static isLevelAllowed(level) {
    return LoggerManager.levels.length == 0 || LoggerManager.levels.includes(level);
  }
  static showConfig() {
    return {
      modulesState: LoggerManager.instancesStateMap,
      levels: LoggerManager.levels
    };
  }
  static getRandomColor() {
    return "#" + Math.floor(Math.random() * 16777215).toString(16);
  }
  static saveState() {
    if (!localStorage) {
      return;
    }
    const state = {
      map: LoggerManager.instancesStateMap,
      levels: LoggerManager.levels
    };
    localStorage.setItem(LoggerManager.STORAGE_KEY, JSON.stringify(state));
  }
  static loadState() {
    if (typeof localStorage === "undefined") {
      return;
    }
    let state = localStorage.getItem(LoggerManager.STORAGE_KEY);
    if (state) {
      state = JSON.parse(state);
      LoggerManager.instancesStateMap = state.map;
      LoggerManager.levels = state.levels;
    }
  }
};
LoggerManager.STORAGE_KEY = "typescript-logger-state";
LoggerManager.MUTE_ON_CREATE = false;
LoggerManager.FIXED_WIDTH = 0;
LoggerManager.DEV_MODE = true;
LoggerManager.instances = {};
LoggerManager.instancesStateMap = {};
LoggerManager.levels = [];
LoggerManager.initializationBlock = (() => {
  if (typeof window !== "undefined") {
    window["LoggerManager"] = {
      onlyLevel: LoggerManager.onlyLevels,
      onlyModules: LoggerManager.onlyModules,
      mute: LoggerManager.mute,
      unmute: LoggerManager.unmute,
      unMuteAllModules: LoggerManager.unMuteAllModules,
      muteAllModules: LoggerManager.muteAllModules,
      showConfig: LoggerManager.showConfig
    };
  }
  LoggerManager.loadState();
  return void 0;
})();

// node_modules/typescript-logger/build/display.js
var Display = class {
  static msg(message, params, moduleName, moduleColor, level, moduleWidth) {
    if (LoggerManager.isProductionMode() || !LoggerManager.isLevelAllowed(level) || LoggerManager.isMuted(moduleName))
      return;
    let color;
    switch (level) {
      case Level.DEBUG:
        color = "violet";
        break;
      case Level.ERROR:
        color = "red";
        break;
      case Level.INFO:
        color = "deepskyblue";
        break;
      case Level.LOG:
        color = "gray";
        break;
      case Level.WARN:
        color = "orange";
        break;
    }
    if (moduleWidth) {
      const diff = moduleWidth - moduleName.length;
      if (diff > 0) {
        for (let i = 0; i < diff; i++) {
          moduleName += " ";
        }
      }
    }
    let a1 = "%c " + moduleName + "  %c " + message + " ";
    let a2 = "background: " + moduleColor + ";color:white; border: 1px solid " + moduleColor + "; ";
    let a3 = "border: 1px solid " + color + "; ";
    params = params[0];
    params.unshift(a3);
    params.unshift(a2);
    params.unshift(a1);
    switch (level) {
      case Level.INFO:
        console.info.apply(console, params);
        break;
      case Level.DEBUG:
        console.debug.apply(console, params);
        break;
      case Level.LOG:
        console.log.apply(console, params);
        break;
      case Level.WARN:
        console.warn.apply(console, params);
        break;
      case Level.ERROR:
        console.error.apply(console, params);
        break;
    }
  }
};

// src/tagcloud.ts
var import_obsidian2 = __toModule(require("obsidian"));
var import_obsidian_dataview = __toModule(require_lib());
var import_wordcloud2 = __toModule(require_wordcloud2());
var TagCloud = class {
  constructor(plugin) {
    this.processor = (source, el, ctx) => __async(this, null, function* () {
      el.createEl("p").setText("generating tag cloud");
      if (!import_wordcloud2.default.isSupported) {
        el.createEl("p", { cls: "cloud-error", text: "Your device is not supported" });
      }
      const options = this.plugin.parseCodeblockOptions(source);
      if (options === void 0) {
        el.createEl("p", { cls: "cloud-error" }).setText("An error has occurred while reading the options, please check the console");
        return;
      }
      const tags = [];
      if (options.source === "file") {
        const cache = this.plugin.app.metadataCache.getCache(ctx.sourcePath);
        if (cache.tags) {
          tags.push(...cache.tags.map((tag) => tag.tag));
        }
        if (cache.frontmatter && cache.frontmatter.tags) {
          tags.push(...cache.frontmatter.tags);
        }
      }
      if (options.source === "vault") {
        this.plugin.app.metadataCache.getCachedFiles().forEach((filename) => {
          const tmp = (0, import_obsidian2.getAllTags)(this.plugin.app.metadataCache.getCache(filename));
          if (tmp && tmp.length > 0)
            tags.push(...tmp);
        });
      }
      if (options.source === "query") {
        const dataviewAPI = (0, import_obsidian_dataview.getAPI)();
        if (dataviewAPI === void 0) {
          el.createEl("p", { cls: "cloud-error" }).setText("Dataview is not installed, but is required to use queries");
          return;
        }
        let pages;
        try {
          let query = options.query;
          if (!query) {
            el.createEl("p", { cls: "cloud-error" }).setText("query option is required");
            return;
          }
          if (!query.match(/[\[#]/)) {
            query = '"' + options.query + '"';
          }
          pages = dataviewAPI.pages(query, ctx.sourcePath);
        } catch (error) {
          el.createEl("p", { cls: "cloud-error" }).setText(error.toString());
          logger.error(error);
          return;
        }
        for (const page of pages) {
          tags.push(...page.file.tags);
        }
      }
      const map = tags.map((t) => t.replace("#", "")).reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map());
      const filtered = Array.from(map.entries()).filter(([_, v]) => v >= options.minCount);
      el.empty();
      this.plugin.generateCloud(filtered, options, el, "tag:");
    });
    this.plugin = plugin;
  }
};

// src/wordcloud.ts
var import_obsidian3 = __toModule(require("obsidian"));

// src/functions.ts
var stopwords = new Set();
function removeMarkdown(text) {
  return text.replace(/^---\n.*?\n---\n/s, "").replace(/!?\[(.+)\]\(.+\)/gm, "$1").replace(/(https?):\/\/\S*(\s?)/gm, "").replace(/\*\*(.*?)\*\*/gm, "$1").replace(/\*(.*?)\*/gm, "$1").replace(/\[\[(.*(?=\|))(.*)\]\]/g, "$2").replace(/\[\[([\s\S]*?)\]\]/gm, "$1").replace(/- ?\[.?\]/gm, "").replace(/%%.*?%%/gm, "").replace(/`([\s\S]*?)`/gm, "").replace(/\[\^[[\s\S]]*\]/g, "").replace(/\^\[([\s\S]*?)\]/g, "$1").replace(/\$\$([\s\S]*?)\$\$/gm, "").replace(/\$([\s\S]*?)\$/gm, "").replace(/\[([\s\S]*?)\]/g, "$1").replace(/\(([\s\S]*?)\)/g, "$1").replace(/^(.*?)::(.*?)$/gm, "").replace(/[,.;:|#-()=_*-^\[\]]/g, "").replace(/<("[^"]*"|'[^']*'|[^'">])*>/gm, "").replace(/\s\S\s/g, " ");
}
function removeStopwords(words, customStopwords) {
  const result = {};
  for (const word of Object.keys(words)) {
    const word_lc = word.toLowerCase();
    if (!stopwords.has(word_lc) && !customStopwords.has(word_lc)) {
      result[word] = words[word];
    }
  }
  return result;
}
function getWords(text) {
  return __async(this, null, function* () {
    const words = text.split(/[\n\s]/g);
    const output = [];
    for (let word of words) {
      const result = removeMarkdown(word).toLocaleLowerCase();
      if (result.length > 0) {
        output.push(result);
      }
    }
    return output;
  });
}
function convertToMap(words) {
  return __async(this, null, function* () {
    const record = {};
    for (let word of words) {
      const element = record[word];
      if (element) {
        record[word] = element + 1;
      } else {
        record[word] = 1;
      }
    }
    return record;
  });
}
function recordToArray(record) {
  return __async(this, null, function* () {
    const result = [];
    for (const key of Object.keys(record)) {
      result.push([key, record[key]]);
    }
    return result;
  });
}
function mergeMaps(map1, map2) {
  return __async(this, null, function* () {
    if (map1 === void 0)
      return map2;
    if (map2 === void 0)
      return map1;
    const result = {};
    for (const key of Object.keys(map1)) {
      if (map2[key]) {
        result[key] = map1[key] + map2[key];
      } else {
        result[key] = map1[key];
      }
    }
    for (const key of Object.keys(map2)) {
      if (!result[key]) {
        result[key] = map2[key];
      }
    }
    return result;
  });
}

// src/wordcloud.ts
var import_wordcloud3 = __toModule(require_wordcloud2());
var Wordcloud = class {
  constructor(plugin) {
    this.processor = (source, el, ctx) => __async(this, null, function* () {
      el.createEl("p").setText("generating word cloud");
      if (!import_wordcloud3.default.isSupported) {
        el.createEl("p", { cls: "cloud-error", text: "Your device is not supported" });
      }
      const options = this.plugin.parseCodeblockOptions(source);
      if (options === void 0) {
        el.createEl("p", { cls: "cloud-error" }).setText("An error has occurred while reading the options, please check the console");
        return;
      }
      let content = {};
      if (options.source === "file") {
        const file = this.plugin.app.vault.getAbstractFileByPath(ctx.sourcePath);
        if (file === void 0)
          return;
        if (!(file instanceof import_obsidian3.TFile))
          return;
        if (options.stopwords) {
          const tmp = this.plugin.settings.stopwords.split("\n");
          const customStopwords = new Set(tmp);
          content = removeStopwords(yield convertToMap(yield getWords(yield this.plugin.app.vault.read(file))), customStopwords);
        } else {
          content = yield convertToMap(yield getWords(yield this.plugin.app.vault.read(file)));
        }
      }
      if (options.source === "vault") {
        if (this.plugin.fileContentsWithStopwords.size === 0) {
          el.createEl("p", { cls: "cloud-error" }).setText("there is no content currently, try again later");
        }
        if (options.stopwords) {
          content = this.plugin.fileContentsWithoutStopwords;
        } else {
          content = this.plugin.fileContentsWithStopwords;
        }
      }
      if (options.source === "query") {
        el.createEl("p", { cls: "cloud-error" }).setText("Queries are not supported in a wordcloud");
        return;
      }
      el.empty();
      if (this.plugin.calculatingWordDistribution) {
        el.createEl("p").setText("Word distribution is currently being calculated, reopen this note after calculation has finished");
      }
      const data = yield recordToArray(content);
      this.plugin.generateCloud(data, options, el, "");
    });
    this.plugin = plugin;
  }
};

// src/linkcloud.ts
var import_wordcloud4 = __toModule(require_wordcloud2());
var LinkCloud = class {
  constructor(plugin) {
    this.processor = (source, el, _) => __async(this, null, function* () {
      el.createEl("p").setText("generating link cloud");
      if (!import_wordcloud4.default.isSupported) {
        el.createEl("p", { cls: "cloud-error", text: "Your device is not supported" });
      }
      const options = this.plugin.parseCodeblockOptions(source);
      if (options === void 0) {
        el.createEl("p", { cls: "cloud-error" }).setText("An error has occurred while reading the options, please check the console");
        return;
      }
      let links = new Map();
      if (options.type === "resolved") {
        links = this.buildMap(this.plugin.app.metadataCache.resolvedLinks);
      }
      if (options.type === "unresolved") {
        links = this.buildMap(this.plugin.app.metadataCache.unresolvedLinks);
      }
      if (options.type === "both") {
        links = new Map([...this.buildMap(this.plugin.app.metadataCache.resolvedLinks), ...this.buildMap(this.plugin.app.metadataCache.unresolvedLinks)]);
      }
      const finalMap = new Map();
      for (const link of links.keys()) {
        const value = links.get(link);
        if (value >= options.minCount) {
          const file = this.plugin.app.vault.getAbstractFileByPath(link);
          if (file) {
            finalMap.set(file.name.replace(/\.md$/, ""), value);
          } else {
            finalMap.set(link, value);
          }
        }
      }
      el.empty();
      if (finalMap.size === 0) {
        el.createEl("p", { cls: "cloud-error" }).setText("No entries to generate cloud from");
        return;
      }
      this.plugin.generateCloud(Array.from(finalMap.entries()), options, el, "file:");
    });
    this.plugin = plugin;
  }
  buildMap(record) {
    const map = new Map();
    for (const cachedElement of Object.values(record)) {
      for (const linked of Object.keys(cachedElement)) {
        if (map.has(linked)) {
          map.set(linked, map.get(linked) + 1);
        } else {
          map.set(linked, 1);
        }
      }
    }
    return map;
  }
};

// src/main.ts
var import_stopword = __toModule(require_stopword());
var logger = LoggerManager.create("Tag & Word Cloud");
var TagCloudPlugin2 = class extends import_obsidian4.Plugin {
  constructor() {
    super(...arguments);
    this.fileContentsWithStopwords = {};
    this.fileContentsWithoutStopwords = {};
    this.calculatingWordDistribution = false;
    this.quit = false;
  }
  parseCodeblockOptions(source) {
    const yaml = source ? (0, import_obsidian4.parseYaml)(source) : {};
    let max_width = 0;
    document.querySelectorAll(".markdown-preview-view.is-readable-line-width .markdown-preview-sizer, .cm-content").forEach((el) => {
      if (el.clientWidth !== 0) {
        max_width = el.clientWidth;
      }
    });
    let width = yaml.width ? yaml.width : max_width;
    if (width <= 0) {
      logger.warn("width is not defined, using fallback value");
      width = 500;
    }
    const isDarkMode = app.getTheme() === "obsidian";
    let background;
    let color;
    const darkEl = document.getElementsByClassName("theme-dark")[0];
    const lightEl = document.getElementsByClassName("theme-light")[0];
    if (isDarkMode) {
      const style = window.getComputedStyle(darkEl);
      background = style.getPropertyValue("--background-primary");
      color = "random-light";
    } else {
      const style = window.getComputedStyle(lightEl);
      background = style.getPropertyValue("--background-primary");
      color = "random-dark";
    }
    return {
      width,
      height: yaml.height ? yaml.height : width / 2,
      backgroundColor: yaml.background ? yaml.background : background,
      color,
      shape: yaml.shape ? yaml.shape : "circle",
      weightFactor: yaml.weight ? yaml.weight : 2,
      stopwords: yaml.stopwords ? yaml.stopwords : true,
      source: yaml.source ? yaml.source : "vault",
      fontFamily: yaml.fontFamily ? yaml.fontFamily : '"Trebuchet MS", "Heiti TC", "\u5FAE\u8EDF\u6B63\u9ED1\u9AD4", "Arial Unicode MS", "Droid Fallback Sans", sans-serif',
      fontWeight: yaml.fontWeight ? yaml.fontWeight : "normal",
      minFontSize: yaml.minFontSize ? yaml.minFontSize : 0,
      minRotation: yaml.minRotation ? yaml.minRotation : -Math.PI / 2,
      maxRotation: yaml.maxRotation ? yaml.maxRotation : Math.PI / 2,
      ellipticity: yaml.ellipticity ? yaml.ellipticity : 0.65,
      shuffle: yaml.shuffle ? yaml.shuffle : true,
      rotateRatio: yaml.rotateRatio ? yaml.rotateRatio : 0.1,
      query: yaml.query,
      minCount: yaml.minCount ? yaml.minCount : 0,
      type: yaml.type ? yaml.type : "resolved",
      shrinkToFit: yaml.shrinkToFit ? yaml.shrinkToFit : true,
      maxDepth: yaml.maxDepth ? yaml.maxDepth : 15
    };
  }
  calculateWordDistribution(fresh = false) {
    return __async(this, null, function* () {
      if (this.calculatingWordDistribution) {
        new import_obsidian4.Notice("Word distribution is already beeing calculated");
        return;
      }
      this.calculatingWordDistribution = true;
      logger.debug("Calculating word distribution");
      const files = this.app.vault.getMarkdownFiles();
      logger.debug("will analyze %i files", files.length);
      const now = Date.now();
      let cacheUpToDate = true;
      for (const file of files) {
        if (file.stat.mtime > now) {
          cacheUpToDate = false;
        }
      }
      if (fresh) {
        cacheUpToDate = false;
        this.settings.wordCache = null;
        this.settings.filecache = null;
      }
      yield this.saveSettings();
      if (this.settings.wordCache && cacheUpToDate && this.settings.wordCache.timestamp !== 0) {
        this.fileContentsWithStopwords = this.settings.wordCache.withStopwords;
        this.fileContentsWithoutStopwords = this.settings.wordCache.withoutStopwords;
        this.calculatingWordDistribution = false;
        return;
      }
      const notice = new import_obsidian4.Notice("Calculating word distribution", 1e8);
      let fileCount = 0;
      if (!this.settings.filecache) {
        this.settings.filecache = DEFAULT_SETTINGS.filecache;
      }
      const tmp = this.settings.stopwords.split("\n");
      const customStopwords = new Set(tmp);
      console.log(customStopwords);
      for (const file of files) {
        if (this.quit)
          continue;
        if (file === void 0)
          continue;
        const fileCache = this.settings.filecache[file.path];
        if (fileCache && fileCache.timestamp >= file.stat.mtime && fileCache.timestamp !== 0) {
          this.fileContentsWithStopwords = yield mergeMaps(this.fileContentsWithStopwords, fileCache.withStopwords);
          this.fileContentsWithoutStopwords = yield mergeMaps(this.fileContentsWithoutStopwords, fileCache.withoutStopwords);
        } else {
          const fileContent = yield this.app.vault.read(file);
          const words = yield getWords(fileContent);
          const withStopwords = yield convertToMap(words);
          this.fileContentsWithStopwords = yield mergeMaps(this.fileContentsWithStopwords, withStopwords);
          const withoutStopwords = removeStopwords(withStopwords, customStopwords);
          this.fileContentsWithoutStopwords = yield mergeMaps(this.fileContentsWithoutStopwords, withoutStopwords);
          this.settings.filecache[file.path] = {
            withStopwords,
            withoutStopwords,
            timestamp: file.stat.mtime
          };
        }
        fileCount++;
        notice.setMessage(`Calculating word distribution (${fileCount.toLocaleString()} / ${files.length.toLocaleString()} files)`);
      }
      this.settings.wordCache = {
        withStopwords: this.fileContentsWithStopwords,
        withoutStopwords: this.fileContentsWithoutStopwords,
        timestamp: Date.now()
      };
      yield this.saveSettings();
      notice.hide();
      logger.debug("Finished calculating word distribution");
      logger.debug("analyzed %i files", fileCount);
      new import_obsidian4.Notice("Finished calculating word distribution");
      this.calculatingWordDistribution = false;
    });
  }
  generateCloud(values, options, el, searchPrefix) {
    const filtered = values.filter(([_, value]) => {
      return value >= options.minCount;
    });
    const sorted = filtered.sort((a, b) => {
      if (a[1] < b[1])
        return 1;
      if (a[1] > b[1])
        return -1;
      return 0;
    });
    const tmp = [];
    let last = Infinity;
    let i = options.maxDepth;
    for (let sortedElement of sorted) {
      if (i <= 0) {
        break;
      }
      if (sortedElement[1] < last) {
        last = sortedElement[1];
        i--;
      }
      tmp.push([sortedElement[0], i]);
    }
    const canvas = el.createEl("canvas", { attr: { cls: "cloud" } });
    canvas.width = options.width;
    canvas.height = options.height;
    const searchPlugin = this.app.internalPlugins.getPluginById("global-search");
    const search = searchPlugin && searchPlugin.instance;
    (0, import_wordcloud5.default)(canvas, {
      list: tmp,
      backgroundColor: options.backgroundColor,
      color: options.color,
      shape: options.shape,
      weightFactor: options.weightFactor,
      fontFamily: options.fontFamily,
      fontWeight: options.fontWeight,
      minSize: options.minFontSize,
      minRotation: options.minRotation,
      maxRotation: options.maxRotation,
      ellipticity: options.ellipticity,
      shuffle: options.shuffle,
      rotateRatio: options.rotateRatio,
      shrinkToFit: options.shrinkToFit,
      click: (item) => {
        search.openGlobalSearch(searchPrefix + item[0]);
      }
    });
  }
  onload() {
    return __async(this, null, function* () {
      logger.info("enabling Tag & Word cloud plugin");
      yield this.loadSettings();
      this.addSettingTab(new TagCloudPluginSettingsTab(this));
      Object.entries(import_stopword.default).forEach((stopword2) => {
        if (stopword2[0] !== "removeStopwords")
          stopwords.add(stopword2[0]);
      });
      if (!import_wordcloud5.default.isSupported) {
        new import_obsidian4.Notice("the Word & Tag cloud plugin is not compatible with your device");
        throw Error("the tag cloud plugin is not supported on your device");
      }
      this.app.workspace.onLayoutReady(() => __async(this, null, function* () {
        setTimeout(() => __async(this, null, function* () {
          return yield this.calculateWordDistribution();
        }), 5e3);
      }));
      this.addCommand({
        id: "recalcuate-word-distribution",
        name: "Recalculate Word Distribution",
        checkCallback: (checking) => {
          if (checking)
            return !this.calculatingWordDistribution;
          (() => __async(this, null, function* () {
            yield this.calculateWordDistribution(true);
            new import_obsidian4.Notice("calculated word distribution");
          }))();
        }
      });
      this.registerMarkdownCodeBlockProcessor("wordcloud", new Wordcloud(this).processor);
      this.registerMarkdownCodeBlockProcessor("tagcloud", new TagCloud(this).processor);
      this.registerMarkdownCodeBlockProcessor("linkcloud", new LinkCloud(this).processor);
    });
  }
  mergeWorker(arg) {
    return __async(this, null, function* () {
      const result = yield mergeMaps(arg.map1, arg.map2);
      return Promise.resolve(result);
    });
  }
  onunload() {
    this.quit = true;
    logger.info("disabling Tag & Word cloud plugin");
  }
  loadSettings() {
    return __async(this, null, function* () {
      this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
    });
  }
  saveSettings() {
    return __async(this, null, function* () {
      yield this.saveData(this.settings);
    });
  }
};
/*!
 * wordcloud2.js
 * http://timdream.org/wordcloud2.js/
 *
 * Copyright 2011 - 2019 Tim Guan-tin Chien and contributors.
 * Released under the MIT license
 */
